/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ObjectivesForm.java
 *
 * Created on 04-Oct-2010, 12:05:22
 */
package gui.form.outcome;
import global.Config;
import global.Global;
import gui.form.supplement.ManagementForm;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import process_model.phase.delivery.data.ExplorationReport;
import process_model.phase.delivery.data.Investigation;
import process_model.general.Procedure;
import process_model.general.Procedures;
import process_model.phase.delivery.data.Prospecting;
import process_model.phase.delivery.data.Understanding;
import process_model.phase.delivery.process_objective.DataMiningObjective;
import process_model.supplement.management.resource.Resource;
import process_model.supplement.management.resource.Resources;
import process_model.process.Process;
import process_model.process.input.Inputs;
import process_model.process.input.data.MetabolomicsData;
import process_model.process.input.data.dataset.DataSet;
import process_model.process.input.data.metadata.MetaData;
import process_model.process.input.data.utility.Attribute;
import project.Project;
import toolbox.Tools;
import toolbox.filetools.FileTools;
import toolbox.viewtools.VisualizationTools;
import weka.core.Instances;

/**
 *
 * @author amb04
 */
public class DataExplorationForm extends javax.swing.JFrame {   
    private String dataTypes[]={"","Continuous", "Cuclical", "Discrete", "Discretized", "Key","Ordered","Sequnce Time", "Other" };
    private String FileFormats[]={"","Comma Separated", "Spreed Sheet", "Tab Separated", "Text File","XML File", "Other"};
    private String DataFormats[]={"","Hierarchical", "Relational", "Tabular", "Textual","Other"};   
    private Procedure procedure=null;    
    private Resource resource=null;
    private Resources resources=null;
    private MetabolomicsData metabolomicsData=null;
    private Attribute attribute=null;
    private Prospecting prospecting=null;
    private Understanding understanding=null;
    private Investigation dataSetInvestigation=null;
    private Investigation metaDataInvestigation=null;
    private ExplorationReport explorationReport= null;
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    /** Creates new form ObjectivesForm */
    public DataExplorationForm() {    
    initComponents();
    this.setVisible(true);
    this.refresh();   
    this.populate();
    this.setTitle("Data Exploration: "+Global.currentPhase.getTitle());
    }

//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Planning_Planner_info_jDesktopPane6 = new javax.swing.JDesktopPane();
        Planning_Planner_info_jDesktopPane7 = new javax.swing.JDesktopPane();
        Planning_Planner_info_jDesktopPane3 = new javax.swing.JDesktopPane();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        DataSet_Internal_Data_Investigation_jTextArea = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        MetaData_Internal_Data_Investigation_jTextArea = new javax.swing.JTextArea();
        viewInternalMetaData_jButton = new javax.swing.JButton();
        viewInternalDataSet_jButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        DataSet_jDesktopPane = new javax.swing.JDesktopPane();
        jPanel6 = new javax.swing.JPanel();
        Planning_Planner_Name_jLabel20 = new javax.swing.JLabel();
        DataSet_DataFormat_jComboBox = new javax.swing.JComboBox();
        Planning_Planner_Name_jLabel21 = new javax.swing.JLabel();
        DataSet_FileFormat_jComboBox = new javax.swing.JComboBox();
        DataSet_Size_jTextField = new javax.swing.JTextField();
        Planning_Planner_Name_jLabel23 = new javax.swing.JLabel();
        Planning_Planner_Name_jLabel44 = new javax.swing.JLabel();
        jScrollPane22 = new javax.swing.JScrollPane();
        DataSet_Distribution_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel45 = new javax.swing.JLabel();
        DataSet_DistributionURL_jTextField = new javax.swing.JTextField();
        DataSet_Distribution_Browse_jButton = new javax.swing.JButton();
        Planning_Planner_Name_jLabel46 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        DataSet_Outliers_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel47 = new javax.swing.JLabel();
        DataSet_OutliersURL_jTextField = new javax.swing.JTextField();
        DataSet_Outliers_Browse_jButton = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        DataSet_MissingValues_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel48 = new javax.swing.JLabel();
        Planning_Planner_Name_jLabel49 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        DataSet_MissingValuesPercentage_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel50 = new javax.swing.JLabel();
        DataSet_MissingValuesURL_jTextField = new javax.swing.JTextField();
        DataSet_MissingValues_Browse_jButton = new javax.swing.JButton();
        viewDataSet_jButton = new javax.swing.JButton();
        DataSet_Distribution_View_jButton = new javax.swing.JButton();
        DataSet_Outliers_View_jButton = new javax.swing.JButton();
        DataSet_MissingValues_View_jButton = new javax.swing.JButton();
        MetaData_jDesktopPane1 = new javax.swing.JDesktopPane();
        Planning_Planner_Name_jLabel51 = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        MetaData_Distribution_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel52 = new javax.swing.JLabel();
        MetaData_DistributionURL_jTextField = new javax.swing.JTextField();
        MetaData_Distribution_Browse_jButton = new javax.swing.JButton();
        jScrollPane27 = new javax.swing.JScrollPane();
        MetaData_Outliers_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel53 = new javax.swing.JLabel();
        Planning_Planner_Name_jLabel54 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        MetaData_MissingValuesPercentage_jTextPane = new javax.swing.JTextPane();
        Planning_Planner_Name_jLabel55 = new javax.swing.JLabel();
        MetaData_MissingValuesURL_jTextField = new javax.swing.JTextField();
        MetaData_MissingValues_Browse_jButton = new javax.swing.JButton();
        MetaData_Outliers_Browse_jButton = new javax.swing.JButton();
        MetaData_OutliersURL_jTextField = new javax.swing.JTextField();
        Planning_Planner_Name_jLabel56 = new javax.swing.JLabel();
        Planning_Planner_Name_jLabel57 = new javax.swing.JLabel();
        jScrollPane29 = new javax.swing.JScrollPane();
        MetaData_MissingValues_jTextPane = new javax.swing.JTextPane();
        jPanel7 = new javax.swing.JPanel();
        Planning_Planner_Name_jLabel58 = new javax.swing.JLabel();
        MetaData_DataFormat_jComboBox = new javax.swing.JComboBox();
        Planning_Planner_Name_jLabel59 = new javax.swing.JLabel();
        MetaData_FileFormat_jComboBox = new javax.swing.JComboBox();
        MetaData_Size_jTextField = new javax.swing.JTextField();
        Planning_Planner_Name_jLabel60 = new javax.swing.JLabel();
        MetaData_MissingValues_View_jButton = new javax.swing.JButton();
        MetaData_Distribution_View_jButton = new javax.swing.JButton();
        MetaData_Outliers_View_jButton = new javax.swing.JButton();
        viewMetaData_jButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        DataSet_Investigation_save_jButton = new javax.swing.JButton();
        DataSet_Investigation_Clear_jButton = new javax.swing.JButton();
        DataSet_Investigation_Refresh_jButton = new javax.swing.JButton();
        DataSet_Investigation_Delete_jButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        MetaData_Investigation_Save_jButton = new javax.swing.JButton();
        MetaData_Investigation_Clear_jButton = new javax.swing.JButton();
        MetaData_Investigation_Refresh_jButton = new javax.swing.JButton();
        MetaData_Investigation_Delete_jButton = new javax.swing.JButton();
        Planning_Planner_info_jDesktopPane4 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        Result_jTextArea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        Purpose_jTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Procedure_jTextArea = new javax.swing.JTextArea();
        jScrollPane18 = new javax.swing.JScrollPane();
        Resources_jList = new javax.swing.JList();
        jScrollPane17 = new javax.swing.JScrollPane();
        Selected_Resources_jList = new javax.swing.JList();
        Planning_Objectives_Control_jDesktopPane2 = new javax.swing.JDesktopPane();
        Select_Resource_jButton2 = new javax.swing.JButton();
        Unselect_Resource_jButton2 = new javax.swing.JButton();
        Edit_Resource_jButton = new javax.swing.JButton();
        Procedure_URL_jTextField = new javax.swing.JTextField();
        Planning_Planner_Name_jLabel = new javax.swing.JLabel();
        Add_Procedure_jButton2 = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        Procedures_jList = new javax.swing.JList();
        Delete_Procedure_jButton1 = new javax.swing.JButton();
        Procedure_Browse_jButton = new javax.swing.JButton();
        Delete_Internal_Prospecting_jButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        External_Prospecting_URL_jTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Browse_Prosepcting_jButton = new javax.swing.JButton();
        Generate_jButton = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        View_Prosepcting_jButton = new javax.swing.JButton();
        Delete_External_Prospecting_jButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        viewData_jButton = new javax.swing.JButton();
        VisualDistribution_jButton = new javax.swing.JButton();
        VisualProspecting_jButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        External_DataUnderstanding_URL_jTextField = new javax.swing.JTextField();
        DataUnderstanding_Browse_jButton = new javax.swing.JButton();
        View_Understanding_jButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        MetaData_Understanding_jDesktopPane = new javax.swing.JDesktopPane();
        Planning_Planner_Name_jLabel28 = new javax.swing.JLabel();
        MetaData_DataType_jComboBox = new javax.swing.JComboBox();
        Planning_Planner_Name_jLabel29 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        MetaData_Meaning_jTextArea = new javax.swing.JTextArea();
        Save_MetaData_Understanding_jButton = new javax.swing.JButton();
        Delete_MetaData_Understanding_jButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MetaData_jList = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        DataSet_Understanding = new javax.swing.JDesktopPane();
        Planning_Planner_Name_jLabel11 = new javax.swing.JLabel();
        DataSet_DataType_jComboBox = new javax.swing.JComboBox();
        Planning_Planner_Name_jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DataSet_Meaning_jTextArea = new javax.swing.JTextArea();
        Save_DataSet_Understanding_jButton = new javax.swing.JButton();
        Delete_DataSet_Understanding_jButton = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        DataSet_jList = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        Delete_Understanding_jButton = new javax.swing.JButton();
        Clear_Understanding_jButton = new javax.swing.JButton();
        Save_Understanding_jButton = new javax.swing.JButton();
        Refresh_Understanding_jButton = new javax.swing.JButton();
        Objectives_jDesktopPane = new javax.swing.JDesktopPane();
        jScrollPane21 = new javax.swing.JScrollPane();
        Objectives_jTextArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        Phase_Save_jMenuItem = new javax.swing.JMenuItem();
        Phase_Delete_jMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Phase_Close_jMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Planning_Planner_info_jDesktopPane6.setBackground(new java.awt.Color(255, 255, 204));
        Planning_Planner_info_jDesktopPane6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Planning_Planner_info_jDesktopPane7.setBackground(new java.awt.Color(255, 255, 153));
        Planning_Planner_info_jDesktopPane7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Planning_Planner_info_jDesktopPane3.setBackground(new java.awt.Color(255, 255, 204));
        Planning_Planner_info_jDesktopPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setLayout(null);

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));

        DataSet_Internal_Data_Investigation_jTextArea.setColumns(20);
        DataSet_Internal_Data_Investigation_jTextArea.setRows(5);
        DataSet_Internal_Data_Investigation_jTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Internal Dataset Investigation"));
        jScrollPane6.setViewportView(DataSet_Internal_Data_Investigation_jTextArea);

        jPanel5.add(jScrollPane6);
        jScrollPane6.setBounds(10, 50, 490, 540);

        MetaData_Internal_Data_Investigation_jTextArea.setColumns(20);
        MetaData_Internal_Data_Investigation_jTextArea.setRows(5);
        MetaData_Internal_Data_Investigation_jTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Internal MetaData Investigation"));
        jScrollPane11.setViewportView(MetaData_Internal_Data_Investigation_jTextArea);

        jPanel5.add(jScrollPane11);
        jScrollPane11.setBounds(510, 50, 490, 540);

        viewInternalMetaData_jButton.setText("View Meta-Data");
        viewInternalMetaData_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInternalMetaData_jButtonActionPerformed(evt);
            }
        });
        jPanel5.add(viewInternalMetaData_jButton);
        viewInternalMetaData_jButton.setBounds(510, 20, 490, 28);

        viewInternalDataSet_jButton.setText("View DataSet");
        viewInternalDataSet_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInternalDataSet_jButtonActionPerformed(evt);
            }
        });
        jPanel5.add(viewInternalDataSet_jButton);
        viewInternalDataSet_jButton.setBounds(10, 20, 490, 28);

        jTabbedPane1.addTab("Internal Data Investigation", jPanel5);

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(null);

        DataSet_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        DataSet_jDesktopPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Set Investigation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setLayout(null);

        Planning_Planner_Name_jLabel20.setText("Data Format");
        jPanel6.add(Planning_Planner_Name_jLabel20);
        Planning_Planner_Name_jLabel20.setBounds(10, 11, 150, 20);

        DataSet_DataFormat_jComboBox.setBackground(new java.awt.Color(255, 255, 204));
        DataSet_DataFormat_jComboBox.setMaximumRowCount(10);
        DataSet_DataFormat_jComboBox.setModel(new DefaultComboBoxModel(this.DataFormats));
        jPanel6.add(DataSet_DataFormat_jComboBox);
        DataSet_DataFormat_jComboBox.setBounds(10, 31, 170, 22);

        Planning_Planner_Name_jLabel21.setText("File Format");
        jPanel6.add(Planning_Planner_Name_jLabel21);
        Planning_Planner_Name_jLabel21.setBounds(280, 10, 160, 20);

        DataSet_FileFormat_jComboBox.setBackground(new java.awt.Color(255, 255, 204));
        DataSet_FileFormat_jComboBox.setMaximumRowCount(10);
        DataSet_FileFormat_jComboBox.setModel(new DefaultComboBoxModel(this.FileFormats));
        jPanel6.add(DataSet_FileFormat_jComboBox);
        DataSet_FileFormat_jComboBox.setBounds(280, 30, 150, 22);
        jPanel6.add(DataSet_Size_jTextField);
        DataSet_Size_jTextField.setBounds(190, 30, 80, 22);

        Planning_Planner_Name_jLabel23.setText("Size");
        jPanel6.add(Planning_Planner_Name_jLabel23);
        Planning_Planner_Name_jLabel23.setBounds(190, 10, 70, 20);

        jPanel6.setBounds(20, 50, 450, 70);
        DataSet_jDesktopPane.add(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel44.setText("Distribution  Discription");
        Planning_Planner_Name_jLabel44.setBounds(20, 130, 450, 10);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel44, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane22.setViewportView(DataSet_Distribution_jTextPane);

        jScrollPane22.setBounds(20, 145, 450, 70);
        DataSet_jDesktopPane.add(jScrollPane22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel45.setText("Distribution Investigation URL");
        Planning_Planner_Name_jLabel45.setBounds(20, 220, 350, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel45, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DataSet_DistributionURL_jTextField.setBounds(20, 240, 300, 25);
        DataSet_jDesktopPane.add(DataSet_DistributionURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_Distribution_Browse_jButton.setText("Browse");
        DataSet_Distribution_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Distribution_Browse_jButtonActionPerformed(evt);
            }
        });
        DataSet_Distribution_Browse_jButton.setBounds(320, 240, 80, 25);
        DataSet_jDesktopPane.add(DataSet_Distribution_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel46.setText("Outliers Discription");
        Planning_Planner_Name_jLabel46.setBounds(20, 290, 450, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel46, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane23.setViewportView(DataSet_Outliers_jTextPane);

        jScrollPane23.setBounds(20, 310, 450, 25);
        DataSet_jDesktopPane.add(jScrollPane23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel47.setText("Outliers Report");
        Planning_Planner_Name_jLabel47.setBounds(20, 340, 350, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel47, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DataSet_OutliersURL_jTextField.setBounds(20, 360, 300, 25);
        DataSet_jDesktopPane.add(DataSet_OutliersURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_Outliers_Browse_jButton.setText("Browse");
        DataSet_Outliers_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Outliers_Browse_jButtonActionPerformed(evt);
            }
        });
        DataSet_Outliers_Browse_jButton.setBounds(320, 360, 80, 25);
        DataSet_jDesktopPane.add(DataSet_Outliers_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane24.setViewportView(DataSet_MissingValues_jTextPane);

        jScrollPane24.setBounds(150, 430, 320, 25);
        DataSet_jDesktopPane.add(jScrollPane24, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel48.setText("Missing Discription");
        Planning_Planner_Name_jLabel48.setBounds(150, 410, 320, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel48, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel49.setText("Missing Values %");
        Planning_Planner_Name_jLabel49.setBounds(20, 410, 130, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel49, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane25.setViewportView(DataSet_MissingValuesPercentage_jTextPane);

        jScrollPane25.setBounds(20, 430, 120, 25);
        DataSet_jDesktopPane.add(jScrollPane25, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel50.setText("Missing Values Report");
        Planning_Planner_Name_jLabel50.setBounds(20, 460, 330, 20);
        DataSet_jDesktopPane.add(Planning_Planner_Name_jLabel50, javax.swing.JLayeredPane.DEFAULT_LAYER);
        DataSet_MissingValuesURL_jTextField.setBounds(20, 480, 300, 25);
        DataSet_jDesktopPane.add(DataSet_MissingValuesURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_MissingValues_Browse_jButton.setText("Browse");
        DataSet_MissingValues_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_MissingValues_Browse_jButtonActionPerformed(evt);
            }
        });
        DataSet_MissingValues_Browse_jButton.setBounds(320, 480, 80, 25);
        DataSet_jDesktopPane.add(DataSet_MissingValues_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        viewDataSet_jButton.setText("View DataSet File");
        viewDataSet_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDataSet_jButtonActionPerformed(evt);
            }
        });
        viewDataSet_jButton.setBounds(20, 20, 450, 28);
        DataSet_jDesktopPane.add(viewDataSet_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_Distribution_View_jButton.setText("View");
        DataSet_Distribution_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Distribution_View_jButtonActionPerformed(evt);
            }
        });
        DataSet_Distribution_View_jButton.setBounds(400, 240, 70, 25);
        DataSet_jDesktopPane.add(DataSet_Distribution_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_Outliers_View_jButton.setText("View");
        DataSet_Outliers_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Outliers_View_jButtonActionPerformed(evt);
            }
        });
        DataSet_Outliers_View_jButton.setBounds(400, 360, 70, 25);
        DataSet_jDesktopPane.add(DataSet_Outliers_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_MissingValues_View_jButton.setText("View");
        DataSet_MissingValues_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_MissingValues_View_jButtonActionPerformed(evt);
            }
        });
        DataSet_MissingValues_View_jButton.setBounds(400, 480, 70, 25);
        DataSet_jDesktopPane.add(DataSet_MissingValues_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel4.add(DataSet_jDesktopPane);
        DataSet_jDesktopPane.setBounds(10, 10, 480, 530);

        MetaData_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 153));
        MetaData_jDesktopPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Meta Data Investigation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        Planning_Planner_Name_jLabel51.setText("Distribution  Discription");
        Planning_Planner_Name_jLabel51.setBounds(20, 120, 480, 30);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel51, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane26.setViewportView(MetaData_Distribution_jTextPane);

        jScrollPane26.setBounds(20, 145, 470, 70);
        MetaData_jDesktopPane1.add(jScrollPane26, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel52.setText("Distribution Investigation URL");
        Planning_Planner_Name_jLabel52.setBounds(20, 220, 370, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel52, javax.swing.JLayeredPane.DEFAULT_LAYER);
        MetaData_DistributionURL_jTextField.setBounds(20, 240, 300, 25);
        MetaData_jDesktopPane1.add(MetaData_DistributionURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_Distribution_Browse_jButton.setText("Browse");
        MetaData_Distribution_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Distribution_Browse_jButtonActionPerformed(evt);
            }
        });
        MetaData_Distribution_Browse_jButton.setBounds(320, 240, 90, 25);
        MetaData_jDesktopPane1.add(MetaData_Distribution_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane27.setViewportView(MetaData_Outliers_jTextPane);

        jScrollPane27.setBounds(20, 310, 470, 25);
        MetaData_jDesktopPane1.add(jScrollPane27, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel53.setText("Outliers Discription");
        Planning_Planner_Name_jLabel53.setBounds(20, 290, 480, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel53, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel54.setText("Missing Values %");
        Planning_Planner_Name_jLabel54.setBounds(20, 410, 130, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel54, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane28.setViewportView(MetaData_MissingValuesPercentage_jTextPane);

        jScrollPane28.setBounds(20, 430, 120, 25);
        MetaData_jDesktopPane1.add(jScrollPane28, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel55.setText("Missing Values Report");
        Planning_Planner_Name_jLabel55.setBounds(20, 460, 360, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel55, javax.swing.JLayeredPane.DEFAULT_LAYER);
        MetaData_MissingValuesURL_jTextField.setBounds(20, 480, 300, 24);
        MetaData_jDesktopPane1.add(MetaData_MissingValuesURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_MissingValues_Browse_jButton.setText("Browse");
        MetaData_MissingValues_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_MissingValues_Browse_jButtonActionPerformed(evt);
            }
        });
        MetaData_MissingValues_Browse_jButton.setBounds(320, 480, 90, 25);
        MetaData_jDesktopPane1.add(MetaData_MissingValues_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_Outliers_Browse_jButton.setText("Browse");
        MetaData_Outliers_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Outliers_Browse_jButtonActionPerformed(evt);
            }
        });
        MetaData_Outliers_Browse_jButton.setBounds(320, 360, 90, 25);
        MetaData_jDesktopPane1.add(MetaData_Outliers_Browse_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        MetaData_OutliersURL_jTextField.setBounds(20, 360, 300, 25);
        MetaData_jDesktopPane1.add(MetaData_OutliersURL_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel56.setText("Outliers Report");
        Planning_Planner_Name_jLabel56.setBounds(20, 340, 380, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel56, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel57.setText("Missing Discription");
        Planning_Planner_Name_jLabel57.setBounds(150, 410, 350, 20);
        MetaData_jDesktopPane1.add(Planning_Planner_Name_jLabel57, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane29.setViewportView(MetaData_MissingValues_jTextPane);

        jScrollPane29.setBounds(150, 430, 340, 25);
        MetaData_jDesktopPane1.add(jScrollPane29, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel7.setBackground(new java.awt.Color(255, 255, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setLayout(null);

        Planning_Planner_Name_jLabel58.setText("Data Format");
        jPanel7.add(Planning_Planner_Name_jLabel58);
        Planning_Planner_Name_jLabel58.setBounds(10, 11, 170, 20);

        MetaData_DataFormat_jComboBox.setBackground(new java.awt.Color(255, 255, 204));
        MetaData_DataFormat_jComboBox.setMaximumRowCount(10);
        MetaData_DataFormat_jComboBox.setModel(new DefaultComboBoxModel(this.DataFormats));
        jPanel7.add(MetaData_DataFormat_jComboBox);
        MetaData_DataFormat_jComboBox.setBounds(10, 31, 170, 22);

        Planning_Planner_Name_jLabel59.setText("File Format");
        jPanel7.add(Planning_Planner_Name_jLabel59);
        Planning_Planner_Name_jLabel59.setBounds(290, 10, 160, 20);

        MetaData_FileFormat_jComboBox.setBackground(new java.awt.Color(255, 255, 204));
        MetaData_FileFormat_jComboBox.setMaximumRowCount(10);
        MetaData_FileFormat_jComboBox.setModel(new DefaultComboBoxModel(this.FileFormats));
        jPanel7.add(MetaData_FileFormat_jComboBox);
        MetaData_FileFormat_jComboBox.setBounds(290, 30, 170, 22);
        jPanel7.add(MetaData_Size_jTextField);
        MetaData_Size_jTextField.setBounds(190, 30, 90, 22);

        Planning_Planner_Name_jLabel60.setText("Size");
        jPanel7.add(Planning_Planner_Name_jLabel60);
        Planning_Planner_Name_jLabel60.setBounds(190, 10, 80, 20);

        jPanel7.setBounds(20, 50, 470, 70);
        MetaData_jDesktopPane1.add(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_MissingValues_View_jButton.setText("View");
        MetaData_MissingValues_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_MissingValues_View_jButtonActionPerformed(evt);
            }
        });
        MetaData_MissingValues_View_jButton.setBounds(410, 480, 79, 25);
        MetaData_jDesktopPane1.add(MetaData_MissingValues_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_Distribution_View_jButton.setText("View");
        MetaData_Distribution_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Distribution_View_jButtonActionPerformed(evt);
            }
        });
        MetaData_Distribution_View_jButton.setBounds(410, 240, 79, 25);
        MetaData_jDesktopPane1.add(MetaData_Distribution_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_Outliers_View_jButton.setText("View");
        MetaData_Outliers_View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Outliers_View_jButtonActionPerformed(evt);
            }
        });
        MetaData_Outliers_View_jButton.setBounds(410, 360, 79, 25);
        MetaData_jDesktopPane1.add(MetaData_Outliers_View_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        viewMetaData_jButton.setText("View DataSet File");
        viewMetaData_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMetaData_jButtonActionPerformed(evt);
            }
        });
        viewMetaData_jButton.setBounds(20, 20, 470, 28);
        MetaData_jDesktopPane1.add(viewMetaData_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel4.add(MetaData_jDesktopPane1);
        MetaData_jDesktopPane1.setBounds(500, 10, 502, 530);

        jPanel12.setBackground(new java.awt.Color(255, 255, 153));
        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setLayout(null);

        DataSet_Investigation_save_jButton.setText("Save");
        DataSet_Investigation_save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Investigation_save_jButtonActionPerformed(evt);
            }
        });
        jPanel12.add(DataSet_Investigation_save_jButton);
        DataSet_Investigation_save_jButton.setBounds(10, 10, 120, 25);

        DataSet_Investigation_Clear_jButton.setText("Clear");
        DataSet_Investigation_Clear_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Investigation_Clear_jButtonActionPerformed(evt);
            }
        });
        jPanel12.add(DataSet_Investigation_Clear_jButton);
        DataSet_Investigation_Clear_jButton.setBounds(130, 10, 100, 25);

        DataSet_Investigation_Refresh_jButton.setText("Refresh");
        DataSet_Investigation_Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Investigation_Refresh_jButtonActionPerformed(evt);
            }
        });
        jPanel12.add(DataSet_Investigation_Refresh_jButton);
        DataSet_Investigation_Refresh_jButton.setBounds(230, 10, 110, 25);

        DataSet_Investigation_Delete_jButton.setText("Delete -");
        DataSet_Investigation_Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataSet_Investigation_Delete_jButtonActionPerformed(evt);
            }
        });
        jPanel12.add(DataSet_Investigation_Delete_jButton);
        DataSet_Investigation_Delete_jButton.setBounds(340, 10, 130, 25);

        jPanel4.add(jPanel12);
        jPanel12.setBounds(10, 550, 480, 40);

        jPanel13.setBackground(new java.awt.Color(255, 255, 153));
        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setLayout(null);

        MetaData_Investigation_Save_jButton.setText("Save");
        MetaData_Investigation_Save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Investigation_Save_jButtonActionPerformed(evt);
            }
        });
        jPanel13.add(MetaData_Investigation_Save_jButton);
        MetaData_Investigation_Save_jButton.setBounds(10, 10, 120, 25);

        MetaData_Investigation_Clear_jButton.setText("Clear");
        MetaData_Investigation_Clear_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Investigation_Clear_jButtonActionPerformed(evt);
            }
        });
        jPanel13.add(MetaData_Investigation_Clear_jButton);
        MetaData_Investigation_Clear_jButton.setBounds(130, 10, 120, 25);

        MetaData_Investigation_Refresh_jButton.setText("Refresh");
        MetaData_Investigation_Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Investigation_Refresh_jButtonActionPerformed(evt);
            }
        });
        jPanel13.add(MetaData_Investigation_Refresh_jButton);
        MetaData_Investigation_Refresh_jButton.setBounds(250, 10, 120, 25);

        MetaData_Investigation_Delete_jButton.setText("Delete -");
        MetaData_Investigation_Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MetaData_Investigation_Delete_jButtonActionPerformed(evt);
            }
        });
        jPanel13.add(MetaData_Investigation_Delete_jButton);
        MetaData_Investigation_Delete_jButton.setBounds(370, 10, 120, 25);

        jPanel4.add(jPanel13);
        jPanel13.setBounds(500, 550, 500, 40);

        jTabbedPane1.addTab("External Data Investigation", jPanel4);

        jPanel3.add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 10, 1020, 630);

        jTabbedPane4.addTab("Data Investigation", jPanel3);

        Planning_Planner_info_jDesktopPane4.setBackground(new java.awt.Color(255, 255, 204));
        Planning_Planner_info_jDesktopPane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "External Prospecting Activities for for Both Dataset and Meta-Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel2.setLayout(null);

        jPanel11.setBackground(new java.awt.Color(255, 255, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Detailed External Prospecting"));
        jPanel11.setLayout(null);

        Result_jTextArea.setColumns(20);
        Result_jTextArea.setRows(5);
        Result_jTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Activity Results"));
        jScrollPane20.setViewportView(Result_jTextArea);

        jPanel11.add(jScrollPane20);
        jScrollPane20.setBounds(10, 140, 490, 110);

        Purpose_jTextArea.setColumns(20);
        Purpose_jTextArea.setRows(5);
        Purpose_jTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Activity Purpose"));
        jScrollPane5.setViewportView(Purpose_jTextArea);

        jPanel11.add(jScrollPane5);
        jScrollPane5.setBounds(250, 30, 250, 110);

        Procedure_jTextArea.setColumns(20);
        Procedure_jTextArea.setRows(5);
        Procedure_jTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Activty Description"));
        jScrollPane3.setViewportView(Procedure_jTextArea);

        jPanel11.add(jScrollPane3);
        jScrollPane3.setBounds(10, 30, 240, 110);

        Resources_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Project Resources"));
        Resources_jList.setModel(this.getProjectResourcesModel());
        Resources_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Resources_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Resources_jListValueChanged(evt);
            }
        });
        jScrollPane18.setViewportView(Resources_jList);

        jPanel11.add(jScrollPane18);
        jScrollPane18.setBounds(10, 250, 220, 130);

        Selected_Resources_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Resources Used for Prospecting"));
        Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
        Selected_Resources_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Selected_Resources_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Selected_Resources_jListValueChanged(evt);
            }
        });
        jScrollPane17.setViewportView(Selected_Resources_jList);

        jPanel11.add(jScrollPane17);
        jScrollPane17.setBounds(290, 250, 210, 130);

        Planning_Objectives_Control_jDesktopPane2.setBackground(new java.awt.Color(255, 255, 204));

        Select_Resource_jButton2.setText("+>");
        Select_Resource_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_Resource_jButton2ActionPerformed(evt);
            }
        });
        Select_Resource_jButton2.setBounds(0, 0, 60, 20);
        Planning_Objectives_Control_jDesktopPane2.add(Select_Resource_jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Unselect_Resource_jButton2.setText("<-");
        Unselect_Resource_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Unselect_Resource_jButton2ActionPerformed(evt);
            }
        });
        Unselect_Resource_jButton2.setBounds(0, 20, 60, 20);
        Planning_Objectives_Control_jDesktopPane2.add(Unselect_Resource_jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Edit_Resource_jButton.setText("Edit");
        Edit_Resource_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_Resource_jButtonActionPerformed(evt);
            }
        });
        Edit_Resource_jButton.setBounds(0, 40, 60, 20);
        Planning_Objectives_Control_jDesktopPane2.add(Edit_Resource_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel11.add(Planning_Objectives_Control_jDesktopPane2);
        Planning_Objectives_Control_jDesktopPane2.setBounds(230, 250, 60, 70);
        jPanel11.add(Procedure_URL_jTextField);
        Procedure_URL_jTextField.setBounds(10, 400, 390, 25);

        Planning_Planner_Name_jLabel.setText("Activity  Results URL");
        jPanel11.add(Planning_Planner_Name_jLabel);
        Planning_Planner_Name_jLabel.setBounds(10, 380, 170, 20);

        Add_Procedure_jButton2.setText("Add +>");
        Add_Procedure_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Procedure_jButton2ActionPerformed(evt);
            }
        });
        jPanel11.add(Add_Procedure_jButton2);
        Add_Procedure_jButton2.setBounds(500, 30, 90, 25);

        Procedures_jList.setBackground(new java.awt.Color(255, 255, 153));
        Procedures_jList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Applied Detaliled External Prospecting Procedures", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        Procedures_jList.setModel(this.getSelectedProceduresModel());
        Procedures_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Procedures_jListValueChanged(evt);
            }
        });
        jScrollPane19.setViewportView(Procedures_jList);

        jPanel11.add(jScrollPane19);
        jScrollPane19.setBounds(590, 30, 400, 370);

        Delete_Procedure_jButton1.setText("- Delete");
        Delete_Procedure_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Procedure_jButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(Delete_Procedure_jButton1);
        Delete_Procedure_jButton1.setBounds(500, 60, 90, 25);

        Procedure_Browse_jButton.setText("Browse");
        Procedure_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Procedure_Browse_jButtonActionPerformed(evt);
            }
        });
        jPanel11.add(Procedure_Browse_jButton);
        Procedure_Browse_jButton.setBounds(400, 400, 100, 25);

        Delete_Internal_Prospecting_jButton.setText("Delete All Internal Prosepcting Activities");
        Delete_Internal_Prospecting_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Internal_Prospecting_jButtonActionPerformed(evt);
            }
        });
        jPanel11.add(Delete_Internal_Prospecting_jButton);
        Delete_Internal_Prospecting_jButton.setBounds(590, 400, 400, 25);

        jPanel2.add(jPanel11);
        jPanel11.setBounds(10, 90, 1000, 440);

        jPanel15.setBackground(new java.awt.Color(255, 255, 204));
        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setLayout(null);
        jPanel15.add(External_Prospecting_URL_jTextField);
        External_Prospecting_URL_jTextField.setBounds(180, 20, 390, 23);

        jLabel3.setText("External  Prospecting URL");
        jPanel15.add(jLabel3);
        jLabel3.setBounds(10, 20, 170, 20);

        Browse_Prosepcting_jButton.setText("Browse");
        Browse_Prosepcting_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Browse_Prosepcting_jButtonActionPerformed(evt);
            }
        });
        jPanel15.add(Browse_Prosepcting_jButton);
        Browse_Prosepcting_jButton.setBounds(570, 18, 100, 25);

        Generate_jButton.setText("Generate");
        Generate_jButton.setToolTipText("Generates Excell file which can be used to to prospect the data externally");
        Generate_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_jButtonActionPerformed(evt);
            }
        });
        jPanel15.add(Generate_jButton);
        Generate_jButton.setBounds(670, 18, 100, 25);

        jPanel2.add(jPanel15);
        jPanel15.setBounds(10, 22, 780, 60);

        jPanel16.setBackground(new java.awt.Color(255, 255, 204));
        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(null);

        View_Prosepcting_jButton.setText("View");
        View_Prosepcting_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Prosepcting_jButtonActionPerformed(evt);
            }
        });
        jPanel16.add(View_Prosepcting_jButton);
        View_Prosepcting_jButton.setBounds(10, 20, 90, 25);

        Delete_External_Prospecting_jButton.setText("Delete");
        Delete_External_Prospecting_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_External_Prospecting_jButtonActionPerformed(evt);
            }
        });
        jPanel16.add(Delete_External_Prospecting_jButton);
        Delete_External_Prospecting_jButton.setBounds(110, 20, 90, 25);

        jPanel2.add(jPanel16);
        jPanel16.setBounds(800, 20, 210, 60);

        jPanel2.setBounds(10, 100, 1020, 540);
        Planning_Planner_info_jDesktopPane4.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel8.setBackground(new java.awt.Color(255, 255, 153));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Internal Prospecting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel8.setLayout(null);

        viewData_jButton.setText("View Data");
        viewData_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewData_jButtonActionPerformed(evt);
            }
        });
        jPanel8.add(viewData_jButton);
        viewData_jButton.setBounds(130, 20, 160, 27);

        VisualDistribution_jButton.setText("Visualize Attributes Distribution");
        VisualDistribution_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisualDistribution_jButtonActionPerformed(evt);
            }
        });
        jPanel8.add(VisualDistribution_jButton);
        VisualDistribution_jButton.setBounds(480, 20, 260, 27);

        VisualProspecting_jButton.setText("Visualize Data");
        VisualProspecting_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisualProspecting_jButtonActionPerformed(evt);
            }
        });
        jPanel8.add(VisualProspecting_jButton);
        VisualProspecting_jButton.setBounds(289, 20, 192, 27);

        jPanel8.setBounds(10, 10, 1020, 60);
        Planning_Planner_info_jDesktopPane4.add(jPanel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("* Note: Visual prospecting Provides an interactive visualization which covers data trends, distribution & correlation");
        jLabel2.setBounds(20, 70, 690, 20);
        Planning_Planner_info_jDesktopPane4.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane4.addTab("Data Prospecting", Planning_Planner_info_jDesktopPane4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(null);

        jPanel9.setBackground(new java.awt.Color(255, 255, 153));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("External Data Understanding"));
        jPanel9.setLayout(null);
        jPanel9.add(External_DataUnderstanding_URL_jTextField);
        External_DataUnderstanding_URL_jTextField.setBounds(20, 30, 750, 22);

        DataUnderstanding_Browse_jButton.setText("Browse");
        DataUnderstanding_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataUnderstanding_Browse_jButtonActionPerformed(evt);
            }
        });
        jPanel9.add(DataUnderstanding_Browse_jButton);
        DataUnderstanding_Browse_jButton.setBounds(770, 30, 110, 23);

        View_Understanding_jButton.setText("View");
        View_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Understanding_jButtonActionPerformed(evt);
            }
        });
        jPanel9.add(View_Understanding_jButton);
        View_Understanding_jButton.setBounds(880, 30, 110, 23);

        jPanel1.add(jPanel9);
        jPanel9.setBounds(10, 550, 1000, 70);

        jPanel10.setBackground(new java.awt.Color(255, 255, 153));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Internal Data Understanding"));
        jPanel10.setLayout(null);

        MetaData_Understanding_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        MetaData_Understanding_jDesktopPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Meta-Data Understanding", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        Planning_Planner_Name_jLabel28.setText(" Data Type");
        Planning_Planner_Name_jLabel28.setBounds(10, 180, 90, 20);
        MetaData_Understanding_jDesktopPane.add(Planning_Planner_Name_jLabel28, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_DataType_jComboBox.setMaximumRowCount(10);
        MetaData_DataType_jComboBox.setModel(new DefaultComboBoxModel(this.dataTypes));
        MetaData_DataType_jComboBox.setBounds(100, 180, 160, 20);
        MetaData_Understanding_jDesktopPane.add(MetaData_DataType_jComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel29.setText("Meaning");
        Planning_Planner_Name_jLabel29.setBounds(10, 210, 90, 20);
        MetaData_Understanding_jDesktopPane.add(Planning_Planner_Name_jLabel29, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_Meaning_jTextArea.setColumns(20);
        MetaData_Meaning_jTextArea.setRows(5);
        jScrollPane9.setViewportView(MetaData_Meaning_jTextArea);

        jScrollPane9.setBounds(10, 230, 440, 100);
        MetaData_Understanding_jDesktopPane.add(jScrollPane9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Save_MetaData_Understanding_jButton.setText("Save +");
        Save_MetaData_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_MetaData_Understanding_jButtonActionPerformed(evt);
            }
        });
        Save_MetaData_Understanding_jButton.setBounds(10, 340, 130, 23);
        MetaData_Understanding_jDesktopPane.add(Save_MetaData_Understanding_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Delete_MetaData_Understanding_jButton.setText("Delete -");
        Delete_MetaData_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_MetaData_Understanding_jButtonActionPerformed(evt);
            }
        });
        Delete_MetaData_Understanding_jButton.setBounds(140, 340, 120, 23);
        MetaData_Understanding_jDesktopPane.add(Delete_MetaData_Understanding_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MetaData_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Meta-Data Attributes"));
        MetaData_jList.setModel(this.getDataSettAttributesModel());
        MetaData_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        MetaData_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                MetaData_jListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(MetaData_jList);

        jScrollPane1.setBounds(10, 20, 440, 150);
        MetaData_Understanding_jDesktopPane.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText("View Data");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(280, 340, 170, 23);
        MetaData_Understanding_jDesktopPane.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel10.add(MetaData_Understanding_jDesktopPane);
        MetaData_Understanding_jDesktopPane.setBounds(530, 30, 460, 370);

        DataSet_Understanding.setBackground(new java.awt.Color(255, 255, 204));
        DataSet_Understanding.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Set Understanding"));

        Planning_Planner_Name_jLabel11.setText(" Data Type");
        Planning_Planner_Name_jLabel11.setBounds(10, 180, 90, 20);
        DataSet_Understanding.add(Planning_Planner_Name_jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_DataType_jComboBox.setMaximumRowCount(10);
        DataSet_DataType_jComboBox.setModel(new DefaultComboBoxModel(this.dataTypes));
        DataSet_DataType_jComboBox.setBounds(100, 180, 160, 20);
        DataSet_Understanding.add(DataSet_DataType_jComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_Name_jLabel13.setText("Meaning");
        Planning_Planner_Name_jLabel13.setBounds(10, 210, 100, 20);
        DataSet_Understanding.add(Planning_Planner_Name_jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_Meaning_jTextArea.setColumns(20);
        DataSet_Meaning_jTextArea.setRows(5);
        jScrollPane4.setViewportView(DataSet_Meaning_jTextArea);

        jScrollPane4.setBounds(10, 230, 470, 100);
        DataSet_Understanding.add(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Save_DataSet_Understanding_jButton.setText("Save +");
        Save_DataSet_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_DataSet_Understanding_jButtonActionPerformed(evt);
            }
        });
        Save_DataSet_Understanding_jButton.setBounds(10, 340, 120, 23);
        DataSet_Understanding.add(Save_DataSet_Understanding_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Delete_DataSet_Understanding_jButton.setText("Delete -");
        Delete_DataSet_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_DataSet_Understanding_jButtonActionPerformed(evt);
            }
        });
        Delete_DataSet_Understanding_jButton.setBounds(130, 340, 130, 23);
        DataSet_Understanding.add(Delete_DataSet_Understanding_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        DataSet_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Set Attributes"));
        DataSet_jList.setModel(this.getDataSettAttributesModel());
        DataSet_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DataSet_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                DataSet_jListValueChanged(evt);
            }
        });
        jScrollPane16.setViewportView(DataSet_jList);

        jScrollPane16.setBounds(10, 20, 470, 150);
        DataSet_Understanding.add(jScrollPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("View Data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(270, 340, 210, 23);
        DataSet_Understanding.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel10.add(DataSet_Understanding);
        DataSet_Understanding.setBounds(20, 30, 490, 370);

        jPanel1.add(jPanel10);
        jPanel10.setBounds(10, 10, 1010, 420);

        jPanel14.setBackground(new java.awt.Color(255, 255, 153));
        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setLayout(null);

        Delete_Understanding_jButton.setText("Delete");
        Delete_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Understanding_jButtonActionPerformed(evt);
            }
        });
        jPanel14.add(Delete_Understanding_jButton);
        Delete_Understanding_jButton.setBounds(390, 20, 110, 25);

        Clear_Understanding_jButton.setText("Clear");
        Clear_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_Understanding_jButtonActionPerformed(evt);
            }
        });
        jPanel14.add(Clear_Understanding_jButton);
        Clear_Understanding_jButton.setBounds(280, 20, 110, 25);

        Save_Understanding_jButton.setText("Save");
        Save_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Understanding_jButtonActionPerformed(evt);
            }
        });
        jPanel14.add(Save_Understanding_jButton);
        Save_Understanding_jButton.setBounds(20, 20, 120, 25);

        Refresh_Understanding_jButton.setText("Refresh");
        Refresh_Understanding_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh_Understanding_jButtonActionPerformed(evt);
            }
        });
        jPanel14.add(Refresh_Understanding_jButton);
        Refresh_Understanding_jButton.setBounds(140, 20, 140, 25);

        jPanel1.add(jPanel14);
        jPanel14.setBounds(10, 460, 530, 60);

        jTabbedPane4.addTab("Data Understanding", jPanel1);

        Objectives_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Objectives_jDesktopPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Mining Objectives "));
        Objectives_jDesktopPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Objectives_jDesktopPaneMouseClicked(evt);
            }
        });

        Objectives_jTextArea.setColumns(20);
        Objectives_jTextArea.setRows(5);
        jScrollPane21.setViewportView(Objectives_jTextArea);

        jScrollPane21.setBounds(10, 20, 1000, 620);
        Objectives_jDesktopPane.add(jScrollPane21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane4.addTab("Review Data Mining Objectives", Objectives_jDesktopPane);

        jTabbedPane4.setBounds(10, 0, 1050, 680);
        Planning_Planner_info_jDesktopPane3.add(jTabbedPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_info_jDesktopPane3.setBounds(10, 10, 1070, 690);
        Planning_Planner_info_jDesktopPane7.add(Planning_Planner_info_jDesktopPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Planner_info_jDesktopPane7.setBounds(10, 10, 1090, 710);
        Planning_Planner_info_jDesktopPane6.add(Planning_Planner_info_jDesktopPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu3.setText("File");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenu3.add(jSeparator3);

        Phase_Save_jMenuItem.setText("Save");
        Phase_Save_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_Save_jMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(Phase_Save_jMenuItem);

        Phase_Delete_jMenuItem.setText("Delete");
        Phase_Delete_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_Delete_jMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(Phase_Delete_jMenuItem);
        jMenu3.add(jSeparator1);

        Phase_Close_jMenuItem.setText("Close");
        jMenu3.add(Phase_Close_jMenuItem);
        jMenu3.add(jSeparator2);

        menuBar.add(jMenu3);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Planning_Planner_info_jDesktopPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1109, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Planning_Planner_info_jDesktopPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    //System.runFinalization();
    System.gc();        

    }//GEN-LAST:event_formWindowClosed

    private void Procedure_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Procedure_Browse_jButtonActionPerformed

    if (this.prospecting==null)
        this.prospecting=new Prospecting();

    File file =null;    
    if (!this.Procedure_URL_jTextField.getText().equals("")) 
    {        
        try {            
            URL thisURL=new URL(this.Procedure_URL_jTextField.getText());        
            String homeDirectory=Tools.toFile(thisURL).getParent();
            file= Tools.chooseFile("Choose Prosepecting Procedure Result File", null, homeDirectory, false);
            } 
                
        catch (MalformedURLException ex) 
        {              
            file = Tools.chooseFile("Choose Prosepecting Procedure Result File",null, Global.project.getLocation(), false);
        }
    }
    else       
        file = Tools.chooseFile("Choose Prosepecting Procedure Result File",null, Global.project.getLocation(), false);       

    
    if (file!=null)
    {        
            this.Procedure_URL_jTextField.setText(Tools.toURL(file).toString());
            this.prospecting.setOutcomeURL(Tools.toURL(file));        
    }
    this.save_prospecting();
    //-----------------------------------------------------------------------------
      int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
      if (decision==0)
          {
            try {
                URL selectedUrl = new URL(this.Procedure_URL_jTextField.getText());
                URL newUrl = Tools.copyFileToTemp(selectedUrl);

                if (newUrl!=null)
                {
                    this.Procedure_URL_jTextField.setText(newUrl.toString());
                    this.prospecting.setOutcomeURL(newUrl);
                }
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
           
      this.save_prospecting();

    }//GEN-LAST:event_Procedure_Browse_jButtonActionPerformed


    private void Save_DataSet_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_DataSet_Understanding_jButtonActionPerformed

 if (this.attribute!=null)
 {
    if (!this.DataSet_Meaning_jTextArea.getText().equals(""))
        this.attribute.setMeanining(this.DataSet_Meaning_jTextArea.getText());
    else
         this.attribute.setMeanining(null);

    this.attribute.setDMTypeIndex(this.DataSet_DataType_jComboBox.getSelectedIndex());

        
   if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet().getAttributesList().size()>0)

  if (this.MetaData_jList.getSelectedIndex()>=0)
      Global.project.getInputs().getMetabolomicsData().getDataSet().save(this.attribute);
   this.clear_dataSet_understandingForm();
   //this.refresh();
   this.populate();
}
else
    JOptionPane.showMessageDialog(null, "No Attribute ... or data is not loaded yet!");

    }//GEN-LAST:event_Save_DataSet_Understanding_jButtonActionPerformed

    private void Delete_DataSet_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_DataSet_Understanding_jButtonActionPerformed

    this.attribute.setMeanining(null);
    this.attribute.setDataMiningDataType(null);
    this.clear_dataSet_understandingForm();
    //
    if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet()!=null)

    Global.project.getInputs().getMetabolomicsData().getDataSet().save(attribute);
    }//GEN-LAST:event_Delete_DataSet_Understanding_jButtonActionPerformed

    private void Save_MetaData_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_MetaData_Understanding_jButtonActionPerformed

    if (!this.MetaData_Meaning_jTextArea.getText().equals(""))
        this.attribute.setMeanining(this.MetaData_Meaning_jTextArea.getText());
    
    
   this.attribute.setDMTypeIndex(this.MetaData_DataType_jComboBox.getSelectedIndex());
    
        
    if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData().getAttributesList().size()>0 &&
    this.attribute!=null)
        if (this.MetaData_jList.getSelectedIndex()>=0)
        {
            this.metabolomicsData.getMetaData().save(attribute);
            Global.project.getInputs().setMetabolomicsData(this.metabolomicsData.clone());
        }

   this.clear_metaData_understandingForm();
   this.refresh();
   this.populate();

    }//GEN-LAST:event_Save_MetaData_Understanding_jButtonActionPerformed

    private void Delete_MetaData_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_MetaData_Understanding_jButtonActionPerformed
    this.attribute.setMeanining(null);
    this.attribute.setDataMiningDataType(null);

    this.clear_dataSet_understandingForm();
    //
   if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData()!=null &&
    this.attribute!=null)
   {
            this.metabolomicsData.getMetaData().save(attribute);
            Global.project.getInputs().setMetabolomicsData(this.metabolomicsData.clone());
   }
    }//GEN-LAST:event_Delete_MetaData_Understanding_jButtonActionPerformed

    private void DataSet_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_DataSet_jListValueChanged
if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet().getAttributesList().size()>0)
    if (this.DataSet_jList.getSelectedIndex()>=0)
        this.attribute=Global.project.getInputs().getMetabolomicsData().getDataSet().getAttributesList().get(this.DataSet_jList.getSelectedIndex());


    //------------------------------------------------------------------------
if (this.attribute!=null)
{
    if (this.attribute.getMeanining()!=null)
        this.DataSet_Meaning_jTextArea.setText(this.attribute.getMeanining());
    else
        this.DataSet_Meaning_jTextArea.setText("");


    if (this.attribute.getDataMiningDataType()!=null)
       this.DataSet_DataType_jComboBox.setSelectedIndex(this.attribute.getDataMiningDataType().ordinal()+1);
    else
      this.DataSet_DataType_jComboBox.setSelectedIndex(0);
}
   //this.populate();
}//GEN-LAST:event_DataSet_jListValueChanged

    private void MetaData_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MetaData_jListValueChanged
    if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData().getAttributesList().size()>0)
        if (this.MetaData_jList.getSelectedIndex()>=0)
            this.attribute=Global.project.getInputs().getMetabolomicsData().getMetaData().
                 getAttributesList().get(this.MetaData_jList.getSelectedIndex());

   //------------------------------------------------------------------------
    if (this.attribute !=null && this.attribute.getMeanining()!=null)
        this.MetaData_Meaning_jTextArea.setText(this.attribute.getMeanining());
    else
        this.MetaData_Meaning_jTextArea.setText("");

   if (this.attribute !=null && this.attribute.getDataMiningDataType()!=null)
       this.MetaData_DataType_jComboBox.setSelectedIndex(this.attribute.getDataMiningDataType().ordinal()+1);
   else
      this.MetaData_DataType_jComboBox.setSelectedIndex(0);

   this.populate();
}//GEN-LAST:event_MetaData_jListValueChanged

    private void Resources_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Resources_jListValueChanged

if (Global.project!=null&&Global.project.getSupplements()!=null && Global.project.getSupplements().getManagement()!=null &&
    Global.project.getSupplements().getManagement().getResources()!=null &&
    Global.project.getSupplements().getManagement().getResources().getResourcesList().size()>=0)
    if (this.Resources_jList.getSelectedIndex()>=0)
        this.resource=Global.project.getSupplements().getManagement().getResources().getResource(this.Resources_jList.getSelectedIndex()).clone();

this.populate_prospecting();
    }//GEN-LAST:event_Resources_jListValueChanged

    private void Selected_Resources_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Selected_Resources_jListValueChanged
if (this.procedure!=null && 
    this.procedure.getResources()!=null &&
    this.procedure.getResources().getResourcesList().size()>=0)
    if (this.Selected_Resources_jList.getSelectedIndex()>=0)
        this.resource= this.procedure.getResources().getResource(this.Selected_Resources_jList.getSelectedIndex()).clone();

this.populate_prospecting();
}//GEN-LAST:event_Selected_Resources_jListValueChanged

    private void Select_Resource_jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_Resource_jButton2ActionPerformed

    if (this.resource!=null )
    {
        if (this.resources==null)
            this.resources=new Resources();
        this.addResourceFunds();
        this.resources.save(this.resource);

    }

    this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
    this.populate();
}//GEN-LAST:event_Select_Resource_jButton2ActionPerformed

    private void Unselect_Resource_jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Unselect_Resource_jButton2ActionPerformed
        this.deductResourceFunds();
        this.delete_resource();        
        this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
        this.populate();
    }//GEN-LAST:event_Unselect_Resource_jButton2ActionPerformed

    private void Edit_Resource_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_Resource_jButtonActionPerformed
        new ManagementForm(this.resource).setVisible(true);
}//GEN-LAST:event_Edit_Resource_jButtonActionPerformed

    private void Add_Procedure_jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Procedure_jButton2ActionPerformed
    this.add_procedure();
    this.clear_procedure();
    this.clear_procedureForm();
    }//GEN-LAST:event_Add_Procedure_jButton2ActionPerformed

    private void Delete_Procedure_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Procedure_jButton1ActionPerformed
    this.delete_procedure();
    this.Procedures_jList.setModel(this.getSelectedProceduresModel());
    this.populate();
}//GEN-LAST:event_Delete_Procedure_jButton1ActionPerformed

    private void Procedures_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Procedures_jListValueChanged

    if (this.prospecting!=null &&
        this.prospecting.getProcedures()!=null &&
        this.prospecting.getProcedures().getProceduresList().size()>=0 &&
        this.Procedures_jList.getSelectedIndex()>=0
        )
    {
        this.procedure= this.prospecting.getProcedures().getProcedure(this.Procedures_jList.getSelectedIndex()).clone();
        Procedure_URL_jTextField.setText(this.procedure.getResultURL().toString());
    }
    this.populate_prospecting();

}//GEN-LAST:event_Procedures_jListValueChanged

    private void Objectives_jDesktopPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Objectives_jDesktopPaneMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_Objectives_jDesktopPaneMouseClicked

    private void DataSet_Distribution_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Distribution_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------        
        this.DataSet_DistributionURL_jTextField.setText(Tools.toURL(file).toString());
        this.save_dataSet_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.DataSet_DistributionURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.DataSet_DistributionURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
           }

        //---------------------------------------------------------------------
        this.save_dataSet_investigation();
        this.save();
        this.refresh();
        this.populate();
    }

    }//GEN-LAST:event_DataSet_Distribution_Browse_jButtonActionPerformed

    private void DataSet_Outliers_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Outliers_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------
        //Tools.viewAnyFile(file);
        this.DataSet_OutliersURL_jTextField.setText(Tools.toURL(file).toString());    
        this.save_dataSet_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.DataSet_OutliersURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.DataSet_OutliersURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
           }
        
        //---------------------------------------------------------------------
        this.save_dataSet_investigation();
        this.save();
        this.refresh();
        this.populate();
    }

    }//GEN-LAST:event_DataSet_Outliers_Browse_jButtonActionPerformed

    private void DataSet_Investigation_Clear_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Investigation_Clear_jButtonActionPerformed
    this.clear_dataSet_investigation();
    }//GEN-LAST:event_DataSet_Investigation_Clear_jButtonActionPerformed

    private void DataSet_Investigation_save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Investigation_save_jButtonActionPerformed
    this.save_dataSet_investigation();
    }//GEN-LAST:event_DataSet_Investigation_save_jButtonActionPerformed

    private void DataSet_Investigation_Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Investigation_Refresh_jButtonActionPerformed
    this.refresh_dataSet_investigation();
    this.populate_dataSet_investigation();
    }//GEN-LAST:event_DataSet_Investigation_Refresh_jButtonActionPerformed

    private void DataSet_Investigation_Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Investigation_Delete_jButtonActionPerformed
    this.delete_dataSet_investigation();
    }//GEN-LAST:event_DataSet_Investigation_Delete_jButtonActionPerformed

    private void DataSet_MissingValues_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_MissingValues_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------
        //Tools.viewAnyFile(file);
        this.DataSet_MissingValuesURL_jTextField.setText("file:/"+file.getPath());
        this.save_dataSet_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.DataSet_MissingValuesURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.DataSet_MissingValuesURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }

           }

        //---------------------------------------------------------------------
        this.save_dataSet_investigation();
        this.save();
        this.refresh();
        this.populate();
    }

    }//GEN-LAST:event_DataSet_MissingValues_Browse_jButtonActionPerformed

    private void MetaData_Distribution_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Distribution_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------
        //Tools.viewAnyFile(file);
        this.MetaData_DistributionURL_jTextField.setText("file:/"+file.getPath());
        this.save_metaData_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {              
                try {
                    URL selectedUrl = new URL(this.MetaData_DistributionURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.MetaData_DistributionURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
           }

        //---------------------------------------------------------------------
        this.save_metaData_investigation();
        this.save();
        this.refresh();
        this.populate();
    }

    }//GEN-LAST:event_MetaData_Distribution_Browse_jButtonActionPerformed

    private void MetaData_MissingValues_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_MissingValues_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------
        //Tools.viewAnyFile(file);
        this.MetaData_MissingValuesURL_jTextField.setText(Tools.toURL(file).toString());
        this.save_metaData_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.MetaData_MissingValuesURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.MetaData_MissingValuesURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }

           }

        //---------------------------------------------------------------------
        this.save_metaData_investigation();
        this.save();
        this.refresh();
        this.populate();
    }

    }//GEN-LAST:event_MetaData_MissingValues_Browse_jButtonActionPerformed

    private void MetaData_Outliers_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Outliers_Browse_jButtonActionPerformed
    File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)
    {
        //---------------------------------------------------------------------
        //Tools.viewAnyFile(file);
        this.MetaData_OutliersURL_jTextField.setText("file:/"+file.getPath());
        this.save_metaData_investigation();

        //---------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the temp folder as a local copy ?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.MetaData_OutliersURL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);

                    if (newUrl!=null)
                        this.MetaData_OutliersURL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
           }

        //---------------------------------------------------------------------
        this.save_metaData_investigation();
        this.save();
        this.refresh();
        this.populate();
    }


    }//GEN-LAST:event_MetaData_Outliers_Browse_jButtonActionPerformed

    private void MetaData_Investigation_Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Investigation_Refresh_jButtonActionPerformed
        this.refresh_metaData_investigation();
        this.populate_metaData_investigation();
    }//GEN-LAST:event_MetaData_Investigation_Refresh_jButtonActionPerformed

    private void MetaData_Investigation_Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Investigation_Delete_jButtonActionPerformed
    this.delete_metaData_investigation();
    }//GEN-LAST:event_MetaData_Investigation_Delete_jButtonActionPerformed

    private void MetaData_Investigation_Save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Investigation_Save_jButtonActionPerformed
    this.save_metaData_investigation();
    }//GEN-LAST:event_MetaData_Investigation_Save_jButtonActionPerformed

    private void MetaData_Investigation_Clear_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Investigation_Clear_jButtonActionPerformed
        this.clear_metaData_investigationForm();
    }//GEN-LAST:event_MetaData_Investigation_Clear_jButtonActionPerformed

    private void DataUnderstanding_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataUnderstanding_Browse_jButtonActionPerformed

   File file = Tools.chooseFile(Config.defaultLocation, null, null, false);
    if (file!=null)        
    {
            URL fileURL = Tools.toURL(file);
            this.External_DataUnderstanding_URL_jTextField.setText(fileURL.toString());            

        this.save_understanding();
        //-------------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file?");
        if (decision==0)
          {
                try {
                    URL selectedUrl = new URL(this.External_DataUnderstanding_URL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);
                    if (newUrl!=null)
                        this.External_DataUnderstanding_URL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }

           }
         this.save_understanding();
         this.save();// deliver which will copy the file to delivery folder
         this.refresh();//get the updated delicered path
         this.populate();//populate the refreshed path
    }
    }//GEN-LAST:event_DataUnderstanding_Browse_jButtonActionPerformed

    private void Save_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Understanding_jButtonActionPerformed
    this.save_understanding();
    }//GEN-LAST:event_Save_Understanding_jButtonActionPerformed

    private void Refresh_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh_Understanding_jButtonActionPerformed
    this.refresh_understanding();
    }//GEN-LAST:event_Refresh_Understanding_jButtonActionPerformed

    private void Clear_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_Understanding_jButtonActionPerformed
     this.clear_understanding_form();
    }//GEN-LAST:event_Clear_Understanding_jButtonActionPerformed

    private void Delete_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Understanding_jButtonActionPerformed
      delete_understanding();
    }//GEN-LAST:event_Delete_Understanding_jButtonActionPerformed

    private void viewData_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewData_jButtonActionPerformed
   
   if (metabolomicsData !=null && metabolomicsData.getDataSet()!=null &&  metabolomicsData.getDataSet().getInstances()!=null)
   {
        FileTools.viewData(Tools.toFile(metabolomicsData.getDataSet().getOutcomeURL()).getPath());
    }

    }//GEN-LAST:event_viewData_jButtonActionPerformed

    private void Generate_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_jButtonActionPerformed

if (this.metabolomicsData!=null &&
    this.metabolomicsData.getDataSet()!=null &&
    this.metabolomicsData.getDataSet().getOutcomeURL()!=null &&
    Global.project.getLocation()!=null &&
    Global.project.getName()!=null)
    {
        File dataFile= Tools.toFile(this.metabolomicsData.getDataSet().getOutcomeURL());
        File prospectingDataFile = new File(Global.project.getLocation() +"/" +Global.project.getName()+"/" + "temp" +"/"+"DataProspecting.csv");
        if (dataFile.exists())
        {
                try {
                    //----------------------------------------------------------------------------
                    if (!Tools.getFileExtentionOnly(Tools.toFile(this.metabolomicsData.getDataSet().getOutcomeURL())).equalsIgnoreCase("csv"))
                       FileTools.convertFile(dataFile.getPath(), prospectingDataFile.getPath(),false);
                    //----------------------------------------------------------------------------
                    else 
                        Tools.copyFile(dataFile, prospectingDataFile);

                    //----------------------------------------------------------------------------
                    External_Prospecting_URL_jTextField.setText(prospectingDataFile.toURL().toString());
                    //----------------------------------------------------------------------------
                    
                    // saving prospecting
                    //-----------------------------------------------------------------            
                    if (this.prospecting==null)
                        this.prospecting=new Prospecting();
                               
                    this.prospecting.setOutcomeURL(new URL(this.External_Prospecting_URL_jTextField.getText()));
                   
                    // saving prospecting to both metabolomics data and exploration report
                    //-----------------------------------------------------------------
                    this.save_prospecting();
                    this.save();
                    this.refresh();
                    this.populate();

                    int decision=JOptionPane.showConfirmDialog(null, "Would you like to Start Prospecting / viewing the file with Excel?");
                    if (decision==0)
                    {
                         if (External_Prospecting_URL_jTextField.getText()!=null)
                             Tools.viewAnyFile(Tools.toFile(new URL(this.External_Prospecting_URL_jTextField.getText())));
                    }
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }

        }
  }

    }//GEN-LAST:event_Generate_jButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if (metabolomicsData !=null && metabolomicsData.getDataSet()!=null &&  metabolomicsData.getDataSet().getInstances()!=null)
   {
        FileTools.viewData( Tools.toFile(metabolomicsData.getDataSet().getOutcomeURL()).getPath());

    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void viewInternalMetaData_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInternalMetaData_jButtonActionPerformed
if (metabolomicsData !=null && metabolomicsData.getMetaData()!=null &&  metabolomicsData.getMetaData().getInstances()!=null)
   {
        FileTools.viewData(Tools.toFile(metabolomicsData.getMetaData().getOutcomeURL()).getPath());
    }

    }//GEN-LAST:event_viewInternalMetaData_jButtonActionPerformed

    private void viewInternalDataSet_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInternalDataSet_jButtonActionPerformed
if (metabolomicsData !=null && metabolomicsData.getDataSet()!=null &&  metabolomicsData.getDataSet().getInstances()!=null)
   {
        FileTools.viewData(Tools.toFile(metabolomicsData.getDataSet().getOutcomeURL()).getPath());
    }
    }//GEN-LAST:event_viewInternalDataSet_jButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
if (metabolomicsData !=null && metabolomicsData.getMetaData()!=null &&  metabolomicsData.getMetaData().getInstances()!=null)
   {
        FileTools.viewData(Tools.toFile(metabolomicsData.getMetaData().getOutcomeURL()).getPath());
        
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void viewDataSet_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDataSet_jButtonActionPerformed
if (metabolomicsData !=null && metabolomicsData.getDataSet()!=null &&  metabolomicsData.getDataSet().getInstances()!=null)
   {
        Tools.viewAnyFile(Tools.toFile(metabolomicsData.getDataSet().getOutcomeURL()));
    }
    }//GEN-LAST:event_viewDataSet_jButtonActionPerformed

    private void viewMetaData_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMetaData_jButtonActionPerformed
if (metabolomicsData !=null && metabolomicsData.getMetaData()!=null &&  metabolomicsData.getMetaData().getInstances()!=null)
   {
        Tools.viewAnyFile(Tools.toFile(metabolomicsData.getMetaData().getOutcomeURL()));
    }
    }//GEN-LAST:event_viewMetaData_jButtonActionPerformed

    private void View_Understanding_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Understanding_jButtonActionPerformed
    if (!External_DataUnderstanding_URL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.External_DataUnderstanding_URL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_View_Understanding_jButtonActionPerformed

    private void View_Prosepcting_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Prosepcting_jButtonActionPerformed
   if (!External_Prospecting_URL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.External_Prospecting_URL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    }//GEN-LAST:event_View_Prosepcting_jButtonActionPerformed

    private void Browse_Prosepcting_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Browse_Prosepcting_jButtonActionPerformed

    File file =null;    
    if (!this.External_Prospecting_URL_jTextField.getText().equals("")) 
    {        
        try {            
            URL thisURL=new URL(this.External_Prospecting_URL_jTextField.getText());        
            String homeDirectory=Tools.toFile(thisURL).getParent();
            file= Tools.chooseFile("Choose Prospecting File", null, homeDirectory, false);
            } 
                
        catch (MalformedURLException ex) 
        {              
              file = Tools.chooseFile("Choose Prospecting File",null, Global.project.getLocation(), false);
        }
    }
    else       
        file = Tools.chooseFile("Choose Prospecting File",null, Global.project.getLocation(), false);       
    
    
    if (file!=null)
    {
        this.External_Prospecting_URL_jTextField.setText(Tools.toURL(file).toString());

        this.save_prospecting();
        //-------------------------------------------------------------------------
        int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file?");
        if (decision==0)
          {            
                try {
                    URL selectedUrl = new URL(this.External_Prospecting_URL_jTextField.getText());
                    URL newUrl = Tools.copyFileToTemp(selectedUrl);
                    if (newUrl!=null)
                        this.External_Prospecting_URL_jTextField.setText(newUrl.toString());
                } catch (MalformedURLException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            
           }
         this.save_prospecting();
         this.save();
         this.refresh();
         this.populate();
    }
    }//GEN-LAST:event_Browse_Prosepcting_jButtonActionPerformed

    private void DataSet_Distribution_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Distribution_View_jButtonActionPerformed
   if (!DataSet_DistributionURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.DataSet_DistributionURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_DataSet_Distribution_View_jButtonActionPerformed

    private void DataSet_Outliers_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_Outliers_View_jButtonActionPerformed
    if (!DataSet_OutliersURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.DataSet_OutliersURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_DataSet_Outliers_View_jButtonActionPerformed

    private void DataSet_MissingValues_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataSet_MissingValues_View_jButtonActionPerformed
    if (!DataSet_MissingValuesURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.DataSet_MissingValuesURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_DataSet_MissingValues_View_jButtonActionPerformed

    private void MetaData_Distribution_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Distribution_View_jButtonActionPerformed
   if (!MetaData_DistributionURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.MetaData_DistributionURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_MetaData_Distribution_View_jButtonActionPerformed

    private void MetaData_Outliers_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_Outliers_View_jButtonActionPerformed
    if (!MetaData_OutliersURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.MetaData_OutliersURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_MetaData_Outliers_View_jButtonActionPerformed

    private void MetaData_MissingValues_View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MetaData_MissingValues_View_jButtonActionPerformed
    if (!MetaData_MissingValuesURL_jTextField.getText().equals(""))
    {
            try {
                Tools.viewAnyFile(Tools.toFile(new URL(this.MetaData_MissingValuesURL_jTextField.getText())));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_MetaData_MissingValues_View_jButtonActionPerformed

    private void Phase_Save_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Save_jMenuItemActionPerformed
        this.save();
}//GEN-LAST:event_Phase_Save_jMenuItemActionPerformed

    private void Phase_Delete_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Delete_jMenuItemActionPerformed
this.delete_explorationReport();
}//GEN-LAST:event_Phase_Delete_jMenuItemActionPerformed

    private void Phase_Close_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Close_jMenuItemActionPerformed

        this.save();
        this.dispose();
}//GEN-LAST:event_Phase_Close_jMenuItemActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jMenu3ActionPerformed

    private void Delete_External_Prospecting_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_External_Prospecting_jButtonActionPerformed
   this.delete_prospecting();
   /*
       if (metabolomicsData!=null)
        {
            
            int decision=JOptionPane.showConfirmDialog(null, "Do you want to delete Prospecting Report?");

            if (decision==0)
                new File(this.metabolomicsData.getProspecting().getOutcomeURL().getFile().substring(1)).delete();

            this.metabolomicsData.setProspecting(prospecting);
        }

       if (explorationReport!=null)
            this.explorationReport.setProspecting(prospecting);

        this.save();
         *
         */

}//GEN-LAST:event_Delete_External_Prospecting_jButtonActionPerformed

    private void Delete_Internal_Prospecting_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Internal_Prospecting_jButtonActionPerformed
this.delete_prospecting();

    }//GEN-LAST:event_Delete_Internal_Prospecting_jButtonActionPerformed

    private void VisualDistribution_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisualDistribution_jButtonActionPerformed
  
      if(Global.activeDataSetFile!=null && Global.activeDataSetFile.getPath()!=null)
      {
        Instances instances = FileTools.LoadData(Global.activeDataSetFile.getPath());
        VisualizationTools.visualizeAllAttributes(instances);
      }
      else
      {
         Instances instances = FileTools.LoadData(Tools.toFile(metabolomicsData.getDataSet().getOutcomeURL()).getPath());
         VisualizationTools.visualizeAllAttributes(instances);
      }
          
    }//GEN-LAST:event_VisualDistribution_jButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//   if (this.explorationReport!=null)         
       this.save();
    }//GEN-LAST:event_formWindowClosing

    private void VisualProspecting_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisualProspecting_jButtonActionPerformed

        
if (this.metabolomicsData!=null &&
    this.metabolomicsData.getDataSet()!=null &&
    this.metabolomicsData.getDataSet().getOutcomeURL()!=null &&
    Global.project.getLocation()!=null &&
    Global.project.getName()!=null)
{
File dataFile=Tools.toFile(this.metabolomicsData.getDataSet().getOutcomeURL());
File prospectingDataFile = new File(Global.project.getLocation() +"/" +Global.project.getName()+"/" + "temp" +"/"+"DataProspecting.csv");
//******************************************************************************
if (dataFile.exists())
    {
        //----------------------------------------------------------------------------
        if (!Tools.getFileExtentionOnly(Tools.toFile(this.metabolomicsData.getDataSet().getOutcomeURL())).equalsIgnoreCase("csv"))
               FileTools.convertFile(dataFile.getPath(), prospectingDataFile.getPath(),false);
        //----------------------------------------------------------------------------
        else  
             Tools.copyFile(dataFile, prospectingDataFile);

        //----------------------------------------------------------------------------
        Procedure_URL_jTextField.setText(Tools.toURL(prospectingDataFile).toString());        

        //----------------------------------------------------------------------------
        if (metabolomicsData !=null &&  metabolomicsData.getDataSet()!=null && metabolomicsData.getDataSet().getInstances()!=null)
        {
            Instances instances=metabolomicsData.getDataSet().getInstances();
            VisualizationTools.visualizeData(instances);
        }

    }
  }        
        
    }//GEN-LAST:event_VisualProspecting_jButtonActionPerformed

//-----------------------------------------------------------------------------
//*****************************************************************************
//                     Resources Funds Calculations
//*****************************************************************************
//-----------------------------------------------------------------------------
private void addResourceFunds()
{
if (Global.project!=null &&
                Global.project.getSupplements()!=null &&
                Global.project.getSupplements().getManagement()!=null &&
                Global.project.getSupplements().getManagement().getConstraint()!=null)
                {
                      Double curruntUsedFunds=Global.project.getSupplements().getManagement().getConstraint().getUsedFunds();
                      Double totalFunds=Global.project.getSupplements().getManagement().getConstraint().getTotalFunds();

                      Double resourceCost=0.0;

                      if (this.resource!=null)
                              resourceCost= this.resource.getCost();

                      Double newUsedFunds=curruntUsedFunds+resourceCost;

                      if (newUsedFunds>totalFunds)
                          JOptionPane.showMessageDialog(null, "Exceeded the project Total Funds,"
                                                           +" Used Funds = "+newUsedFunds
                                                           +" Project Planned Total Funds = "+totalFunds);

                     Global.project.getSupplements().getManagement().getConstraint().setUsedFunds(newUsedFunds);

                }
}

//*****************************************************************************
private void deductResourceFunds()
{
 //------------------------------------------------------------------
            if (Global.project!=null &&
                Global.project.getSupplements()!=null &&
                Global.project.getSupplements().getManagement()!=null &&
                Global.project.getSupplements().getManagement().getConstraint()!=null)
                {
                      Double curruntUsedFunds=Global.project.getSupplements().getManagement().getConstraint().getUsedFunds();
                      Double totalFunds=Global.project.getSupplements().getManagement().getConstraint().getTotalFunds();

                      Double resourceCost=0.0;

                      if (this.resource!=null)
                              resourceCost= this.resource.getCost();

                      Double newUsedFunds=curruntUsedFunds-resourceCost;

                      if (newUsedFunds>totalFunds)
                          JOptionPane.showMessageDialog(null, "Exceeded the project Total Funds,"
                                                           +" Used Funds = "+newUsedFunds
                                                           +" Project Planned Total Funds = "+totalFunds);

                     Global.project.getSupplements().getManagement().getConstraint().setUsedFunds(newUsedFunds);

                }
}


//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                            Delete
//****************************************************************************
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD

 private void delete_explorationReport()
{
    int decision=JOptionPane.showConfirmDialog(null, "This Will Delete the Exploration Report!\n" + "Do you want to continue?");
    if (decision==0)
     {
        if (this.explorationReport!=null)
        {
            this.explorationReport.UnDeliver();
            this.clear();
            this.save();
        }
     }
}

//----------------------------------------------------------------------------
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
 //----------------------------------------------------------------------------
private void delete_understanding()
{
    this.understanding.UnDeliver();

    if (metabolomicsData!=null && this.metabolomicsData.getUnderstanding()!=null &&
        metabolomicsData.getUnderstanding().getOutcomeURL()!=null)
    {
        if (Tools.toFile(this.metabolomicsData.getUnderstanding().getOutcomeURL()).exists())
            Tools.toFile(this.metabolomicsData.getUnderstanding().getOutcomeURL()).delete();

        this.metabolomicsData.setUnderstanding(null);
    }

    if (explorationReport!=null)
        this.explorationReport.setUnderstanding(null);

    this.clear_understanding();
    this.save();
}

//----------------------------------------------------------------------------
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//----------------------------------------------------------------------------
private void delete_prospecting()
{

    this.prospecting.UnDeliver();

    if (metabolomicsData!=null)           
        this.metabolomicsData.setProspecting(null);    

    if (explorationReport!=null)
        this.explorationReport.setProspecting(null);

    this.clear_prospecting();
    this.save();
}

//----------------------------------------------------------------------------
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//----------------------------------------------------------------------------
private void delete_dataSet_investigation()
{

this.dataSetInvestigation.UnDeliver();

if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet().getInvestigation()!=null)
    {
        Global.project.getInputs().getMetabolomicsData().getDataSet().setInvestigation(null);
    }

}

//----------------------------------------------------------------------------
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//----------------------------------------------------------------------------
private void delete_metaData_investigation()
{

this.metaDataInvestigation.UnDeliver();

if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData().getInvestigation()!=null)
    {
        Global.project.getInputs().getMetabolomicsData().getMetaData().setInvestigation(null);
    }

}



//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//****************************************************************************
//                                  Clear
//****************************************************************************
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
private void clear()
{
    this.clear_understanding();
    this.clear_prospecting();
    this.clear_procedure();
    this.clear_investigation();
    this.explorationReport=null;
    this.clear_Form();

}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_Form()
{
    clear_understanding_form();
    clear_prospecting_form();
    //
    this.clear_procedureForm();
    //
    this.clear_dataSet_investigationForm();
    this.clear_metaData_investigationForm();
}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_understanding()
{
this.understanding=null;
clear_understanding_form();
}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_prospecting()
{
this.prospecting=null;
clear_prospecting_form();
}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_investigation()
{
    this.clear_dataSet_investigation();
    this.clear_metaData_investigation();
}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_dataSet_investigation()
{
    this.dataSetInvestigation=null;
    this.clear_procedure();
    this.clear_procedureForm();
    //
    this.clear_dataSet_investigationForm();
}

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
private void clear_metaData_investigation()
{
    this.metaDataInvestigation=null;
    this.clear_procedure();
    this.clear_procedureForm();
    //
    this.clear_metaData_investigationForm();
}

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
private void clear_understanding_form()
{
this.External_DataUnderstanding_URL_jTextField.setText("");
this.clear_dataSet_understandingForm();
this.clear_metaData_understandingForm();
}

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
private void clear_prospecting_form()
{
this.External_Prospecting_URL_jTextField.setText("");

this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
this.Selected_Resources_jList.setSelectedIndex(0);

this.Procedures_jList.setModel(this.getSelectedProceduresModel());
this.Procedures_jList.setSelectedIndex(0);

}

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
private void clear_dataSet_understandingForm()
 {
            this.DataSet_Meaning_jTextArea.setText("");
            this.DataSet_DataType_jComboBox.setSelectedIndex(0);
 }

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
private void clear_metaData_understandingForm()
 {
            this.MetaData_Meaning_jTextArea.setText("");
            this.MetaData_DataType_jComboBox.setSelectedIndex(0);
 }

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
 private void clear_metaData_investigationForm()
{
    this.MetaData_FileFormat_jComboBox.setSelectedIndex(0);
    this.MetaData_DataFormat_jComboBox.setSelectedIndex(0);
    this.MetaData_Size_jTextField.setText("");
    this.MetaData_DistributionURL_jTextField.setText("");
    this.MetaData_Distribution_jTextPane.setText("");
    this.MetaData_OutliersURL_jTextField.setText("");
    this.MetaData_Outliers_jTextPane.setText("");
    this.MetaData_MissingValuesURL_jTextField.setText("");
    this.MetaData_MissingValues_jTextPane.setText("");
    this.MetaData_MissingValuesPercentage_jTextPane.setText("");
}

//----------------------------------------------------------------------------
//CFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
//----------------------------------------------------------------------------
private void clear_dataSet_investigationForm()
{
    this.DataSet_FileFormat_jComboBox.setSelectedIndex(0);
    this.DataSet_DataFormat_jComboBox.setSelectedIndex(0);
    this.DataSet_Size_jTextField.setText("");
    this.DataSet_DistributionURL_jTextField.setText("");
    this.DataSet_Distribution_jTextPane.setText("");
    this.DataSet_OutliersURL_jTextField.setText("");
    this.DataSet_Outliers_jTextPane.setText("");
    this.DataSet_MissingValuesURL_jTextField.setText("");
    this.DataSet_MissingValues_jTextPane.setText("");
    this.DataSet_MissingValuesPercentage_jTextPane.setText("");
   //
}


//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//****************************************************************************
//                              Clear Proscedures
//****************************************************************************
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


 private void clear_Procedure()
{
     this.procedure=new Procedure();
     this.clear_procedureForm();
 }

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
 private void clear_procedure()
{
     this.procedure= null;
     this.clear_procedure_details();
     this.clear_procedureForm();
 }

 //----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
 private void clear_procedure_details()
{
     this.procedure= null;
     this.resources=null;
     this.resource=null;
     this.clear_procedureForm();
 }

//----------------------------------------------------------------------------
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//----------------------------------------------------------------------------
 private void clear_procedureForm()
 {
     this.Purpose_jTextArea.setText("");
     this.Result_jTextArea.setText("");
     this.Procedure_jTextArea.setText("");
     this.Procedure_URL_jTextField.setText("");

     this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
     this.Selected_Resources_jList.setSelectedIndex(0);

     this.Procedures_jList.setModel(this.getSelectedProceduresModel());
     this.Procedures_jList.setSelectedIndex(0);
     //
     this.populate();
 }


//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//                                Save Procedures
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

    private void add_procedure()
    {        
        try {
            if (this.procedure==null)
                this.procedure=new Procedure();

           if (!this.Procedure_URL_jTextField.getText().equals(""))
                this.procedure.setResultURL(new URL(this.Procedure_URL_jTextField.getText()));

            if (!this.Purpose_jTextArea.getText().equals(""))
                this.procedure.setPurpose(this.Purpose_jTextArea.getText());

            if (!this.Result_jTextArea.getText().equals(""))
                this.procedure.setResult(this.Result_jTextArea.getText());

            if (!this.Procedure_jTextArea.getText().equals(""))
                this.procedure.setDescription(this.Procedure_jTextArea.getText());

            if (this.resources!=null)
                this.procedure.setResources(this.resources.clone());

            if (this.prospecting==null)
                this.prospecting=new Prospecting();

            if (this.prospecting.getProcedures()==null)
                prospecting.setProcedures(new Procedures());

            if (this.procedure!=null && this.prospecting!=null && this.prospecting.getProcedures()!=null)
                this.prospecting.getProcedures().save(this.procedure.clone());

            this.clear_procedure_details();
        } catch (MalformedURLException ex) {
            Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//                                Save
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
    private void save()
    {
    //
        if (this.explorationReport==null)
            this.explorationReport=new ExplorationReport();
        //
        this.save_prospecting();
        //
        this.save_understanding();
        //
        this.save_dataSet_investigation();
        //
        this.save_metaData_investigation();
        //

        if (Global.project!=null &&  Global.project.getInputs()==null)
            Global.project.setInputs(new Inputs());

        if (this.metabolomicsData!=null)
            Global.project.getInputs().setMetabolomicsData(this.metabolomicsData.clone());
            else
                JOptionPane.showMessageDialog(null, "No inputs or Metabolomics data have not been defined yet!");

        //
        if (this.explorationReport!=null)
            this.explorationReport.deliverAsMain();

        // Note: because data are stored locally delivery
        //is done in the class Explored Data from the constructor
 }
    private void save_procedure()
    {

     if (this.procedure==null)
         this.procedure=new Procedure();

     if (this.resources!=null)
         this.procedure.setResources(this.resources.clone());

     //------------------------------------------------------------------------
     if (this.prospecting==null)
         this.prospecting=new Prospecting();

     if (this.prospecting!=null)
         this.prospecting.add(procedure);

     // update lists
     //---------------------------------------------------------------------
     this.Procedures_jList.setModel(this.getSelectedProceduresModel());
     this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());

    }
 //---------------------------------------------------------------------------
    private void save_prospecting()
    {
        if (this.prospecting==null)
            this.prospecting=new Prospecting();

       // save external
       //---------------------------------------------------------------------
       if (!this.External_Prospecting_URL_jTextField.getText().equals(""))
       {
            try {
                this.prospecting.setOutcomeURL(new URL(this.External_Prospecting_URL_jTextField.getText()));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
           this.prospecting.setOutcomeURL(null);


        // save internal prospecting
        //---------------------------------------------------------------------
        this.save_procedure();
        
        
        // save in data
        //---------------------------------------------------------------------
        if (this.metabolomicsData == null)
            this.metabolomicsData= new MetabolomicsData();

        if (this.prospecting!=null)
            this.metabolomicsData.setProspecting(this.prospecting.clone());
        else
            this.metabolomicsData.setProspecting(null);
        
        // save in report
        //---------------------------------------------------------------------
        if (this.explorationReport==null )
            this.explorationReport=new ExplorationReport();

        if (this.prospecting!=null)
            this.explorationReport.setProspecting(this.prospecting.clone());
        else
            this.explorationReport.setProspecting(null);


    }
 //---------------------------------------------------------------------------
    private void save_understanding()
    {
        if (this.explorationReport==null)
            this.explorationReport=new ExplorationReport();

       if (this.understanding==null)
           this.understanding= new Understanding();

       if (!this.External_DataUnderstanding_URL_jTextField.getText().equals(""))
       {
            try {
                this.understanding.setOutcomeURL(new URL(this.External_DataUnderstanding_URL_jTextField.getText()));
            } catch (MalformedURLException ex) {
                Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
           this.understanding.setOutcomeURL(null);

       if (this.metabolomicsData == null)
           this.metabolomicsData= new MetabolomicsData();
        
        if (this.metabolomicsData!=null && this.understanding!=null)
            this.metabolomicsData.setUnderstanding(this.understanding.clone());

       if (this.explorationReport!=null && this.understanding!=null)
            this.explorationReport.setUnderstanding(this.understanding.clone());

       this.populate();

    }


//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//****************************************************************************
//                             Save data set investigation
//****************************************************************************
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

private void save_dataSet_investigation()
{
        try {
            if (this.dataSetInvestigation==null)
                this.dataSetInvestigation=new Investigation();

                if (this.DataSet_FileFormat_jComboBox.getSelectedIndex() > 0)
                    this.dataSetInvestigation.setFileFormatTypeIndex(this.DataSet_FileFormat_jComboBox.getSelectedIndex());
                else
                    this.dataSetInvestigation.setFileFormatTypeIndex(0);

                if (this.DataSet_DataFormat_jComboBox.getSelectedIndex() > 0)
                    this.dataSetInvestigation.setDataFormatTypeIndex(this.DataSet_DataFormat_jComboBox.getSelectedIndex());
                else
                    this.dataSetInvestigation.setDataFormatTypeIndex(0);
                //------------------------------------------------------------------
                if (!this.DataSet_Size_jTextField.getText().equals(""))
                    this.dataSetInvestigation.setDataSize(Double.parseDouble(this.DataSet_Size_jTextField.getText()));
                else
                    this.dataSetInvestigation.setDataSize(0.0);

                if (!this.DataSet_MissingValuesPercentage_jTextPane.getText().equals(""))
                    this.dataSetInvestigation.setMissingValuesPercentage(Double.parseDouble(this.DataSet_MissingValuesPercentage_jTextPane.getText()));
                else
                    this.dataSetInvestigation.setMissingValuesPercentage(0.0);

                if (!this.DataSet_Distribution_jTextPane.getText().equals(""))
                    this.dataSetInvestigation.setDistributionDescription(DataSet_Distribution_jTextPane.getText());
                else
                    this.dataSetInvestigation.setDistributionDescription(null);

                if (!this.DataSet_Outliers_jTextPane.getText().equals(""))
                    this.dataSetInvestigation.setOutliersDescription(DataSet_Outliers_jTextPane.getText());
                else
                    this.dataSetInvestigation.setOutliersDescription(null);

                if (!this.DataSet_MissingValues_jTextPane.getText().equals(""))
                    this.dataSetInvestigation.setMissingValuesDescription(DataSet_MissingValues_jTextPane.getText());
                else
                    this.dataSetInvestigation.setMissingValuesDescription(null);
                //------------------------------------------------------------------        
                if (!this.DataSet_DistributionURL_jTextField.getText().equals(""))
                          this.dataSetInvestigation.setDistributionReportURL(new URL(this.DataSet_DistributionURL_jTextField.getText()));
                else
                    this.dataSetInvestigation.setDistributionReportURL(null);

                if (!this.DataSet_OutliersURL_jTextField.getText().equals(""))
                     this.dataSetInvestigation.setOutliersReportURL(new URL(this.DataSet_OutliersURL_jTextField.getText()));
                else
                     this.dataSetInvestigation.setOutliersReportURL(null);

                if (!this.DataSet_MissingValuesURL_jTextField.getText().equals(""))
                     this.dataSetInvestigation.setMissingValuesReportURL(new URL(this.DataSet_MissingValuesURL_jTextField.getText()));
                else
                     this.dataSetInvestigation.setMissingValuesReportURL(null);


        //****************************************************************************
             if (this.metabolomicsData == null)
                 this.metabolomicsData= new MetabolomicsData();

             if (this.metabolomicsData.getDataSet()==null)
                 this.metabolomicsData.setDataSet(new DataSet());

             if (this.metabolomicsData!=null && this.metabolomicsData.getDataSet()!=null && this.dataSetInvestigation!=null)
                this.metabolomicsData.getDataSet().setInvestigation(dataSetInvestigation.clone());

             if (this.explorationReport==null)
                    this.explorationReport=new ExplorationReport();

            if (this.explorationReport!=null && this.dataSetInvestigation!=null)
                this.explorationReport.setDataSetInvestigation(this.dataSetInvestigation.clone());
        } catch (MalformedURLException ex) {
            Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }

//-----------------------------------------------------------------------------
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//****************************************************************************
//                             Save meta data investifation
//****************************************************************************
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//-----------------------------------------------------------------------------
private void save_metaData_investigation()
    {
        try {
            if (this.metaDataInvestigation==null)
                this.metaDataInvestigation=new Investigation();
            
                if (this.MetaData_FileFormat_jComboBox.getSelectedIndex() > 0)
                    this.metaDataInvestigation.setFileFormatTypeIndex(this.MetaData_FileFormat_jComboBox.getSelectedIndex());
                else
                    this.metaDataInvestigation.setFileFormatTypeIndex(0);

                if (this.MetaData_DataFormat_jComboBox.getSelectedIndex() > 0)
                    this.metaDataInvestigation.setDataFormatTypeIndex(this.MetaData_DataFormat_jComboBox.getSelectedIndex());
                else
                    this.metaDataInvestigation.setDataFormatTypeIndex(0);

                //------------------------------------------------------------------
                if (!this.MetaData_Size_jTextField.getText().equals(""))
                    this.metaDataInvestigation.setDataSize(Double.parseDouble(this.MetaData_Size_jTextField.getText()));
                else
                    this.metaDataInvestigation.setDataSize(0.0);

                if (!this.MetaData_MissingValuesPercentage_jTextPane.getText().equals(""))
                    this.metaDataInvestigation.setMissingValuesPercentage(Double.parseDouble(this.MetaData_MissingValuesPercentage_jTextPane.getText()));
                else
                    this.metaDataInvestigation.setMissingValuesPercentage(0.0);

                //------------------------------------------------------------------
                if (!this.MetaData_DistributionURL_jTextField.getText().equals(""))
                    this.metaDataInvestigation.setDistributionReportURL(new URL(this.MetaData_DistributionURL_jTextField.getText()));
                else
                    this.metaDataInvestigation.setDistributionReportURL(null);

                if (!this.MetaData_OutliersURL_jTextField.getText().equals(""))
                    this.metaDataInvestigation.setOutliersReportURL(new URL(this.MetaData_OutliersURL_jTextField.getText()));
                else
                    this.metaDataInvestigation.setOutliersReportURL(null);


                if (!this.MetaData_MissingValuesURL_jTextField.getText().equals(""))
                    this.metaDataInvestigation.setMissingValuesReportURL(new URL(this.MetaData_MissingValuesURL_jTextField.getText()));
                else
                    this.metaDataInvestigation.setMissingValuesReportURL(null);
                //------------------------------------------------------------------
                if (!this.MetaData_Distribution_jTextPane.getText().equals(""))
                    this.metaDataInvestigation.setDistributionDescription(MetaData_Distribution_jTextPane.getText());
                else
                    this.metaDataInvestigation.setDistributionDescription(null);

                if (!this.MetaData_Outliers_jTextPane.getText().equals(""))
                    this.metaDataInvestigation.setOutliersDescription(MetaData_Outliers_jTextPane.getText());
                else
                    this.metaDataInvestigation.setOutliersDescription(null);

                if (!this.MetaData_MissingValues_jTextPane.getText().equals(""))
                    this.metaDataInvestigation.setMissingValuesDescription(MetaData_MissingValues_jTextPane.getText());
                else
                    this.metaDataInvestigation.setMissingValuesDescription(null);

            

    //****************************************************************************
         if (this.metabolomicsData == null)
             this.metabolomicsData= new MetabolomicsData();

         if (this.metabolomicsData.getMetaData()==null)
             this.metabolomicsData.setMetaData(new MetaData());

         if (this.explorationReport==null)
                this.explorationReport=new ExplorationReport();

        if (this.metaDataInvestigation!=null && this.explorationReport!=null)
            this.explorationReport.setMetaDataInvestigation(this.metaDataInvestigation.clone());

        if (this.metaDataInvestigation!=null && this.metabolomicsData!=null && this.metabolomicsData.getMetaData()!=null)
            this.metabolomicsData.getMetaData().setInvestigation(metaDataInvestigation.clone());
        } catch (MalformedURLException ex) {
            Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

//----------------------------------------------------------------------------
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//----------------------------------------------------------------------------
private void refresh_understanding()
{
    if (this.metabolomicsData !=null && this.metabolomicsData.getUnderstanding()!=null)
        this.understanding=this.metabolomicsData.getUnderstanding().clone();

    else if (this.explorationReport !=null && this.explorationReport.getUnderstanding()!=null)
        this.understanding=this.explorationReport.getUnderstanding().clone();

    this.populate_understanding();
}

//----------------------------------------------------------------------------
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//----------------------------------------------------------------------------
private void refresh_prospecting()
{
 if (this.metabolomicsData !=null && this.metabolomicsData.getProspecting()!=null)
     this.prospecting=this.metabolomicsData.getProspecting().clone();

 else if (this.explorationReport !=null && this.explorationReport.getProspecting()!=null)
         this.prospecting=this.explorationReport.getProspecting().clone();

 
int decision=JOptionPane.showConfirmDialog(null, "Would you like to generates automatic statistics about data?");
if (decision==0)
  {       
 
//this is for the generated internal prospecting
//*************************************************************************
//---------------------------------------------------------------------
if (metabolomicsData!=null &&
    metabolomicsData.getDataSet()!=null &&
   !metabolomicsData.getDataSet().isExternal() &&
    metabolomicsData.getDataSet().getInstances()!=null)
    {
        String resultString="";
        resultString=resultString+"\n"+metabolomicsData.getDataSet().getInstances().toSummaryString();
        if (metabolomicsData.getDataSet().getInstances().classIndex()>=0 &&
            metabolomicsData.getDataSet().getInstances().classAttribute()!=null &&
            metabolomicsData.getDataSet().getInstances().classAttribute().name()!=null)
            resultString=resultString+ "\n Name of Classification Attribute = "+ metabolomicsData.getDataSet().getInstances().classAttribute().name()+"\n";
        for (int i=0;i<metabolomicsData.getDataSet().getInstances().numAttributes();i++)
        {
            if (metabolomicsData.getDataSet().getInstances().attribute(i).isNumeric())
            {
                resultString=resultString+ "\n\nAttribute Name = "+ metabolomicsData.getDataSet().getInstances().attribute(i).name();
                resultString=resultString+"\n-------------------------------------------------------------------------------------------------";
                resultString=resultString+"\nMinimum = "+metabolomicsData.getDataSet().getInstances().attributeStats(i).numericStats.min;
                resultString=resultString+"\nMaximum = "+metabolomicsData.getDataSet().getInstances().attributeStats(i).numericStats.max;
                resultString=resultString+"\nMeans = "+metabolomicsData.getDataSet().getInstances().meanOrMode(i);
                resultString=resultString+"\n\nVariance = "+metabolomicsData.getDataSet().getInstances().variance(i);
                resultString=resultString+"\nStandard Deviation = "+metabolomicsData.getDataSet().getInstances().attributeStats(i).numericStats.stdDev;
                resultString=resultString+"\nSumSq = "+metabolomicsData.getDataSet().getInstances().attributeStats(i).numericStats.sumSq;
//                    NormalEstimator  ne= new NormalEstimator(metabolomicsData.getDataSet().getInstances().attributeStats(i).numericStats.mean/10);

                resultString=resultString+ "\n\n"+  metabolomicsData.getDataSet().getInstances().attributeStats(i);
            }
            else
            {

                resultString=resultString+"\n\nAttribute Name = "+ metabolomicsData.getDataSet().getInstances().attribute(i).name();
                resultString=resultString+"\n-------------------------------------------------------------------------------------------------";
                resultString=resultString+"\n"+  metabolomicsData.getDataSet().getInstances().attributeStats(i);
            }
        }
     DataSet_Internal_Data_Investigation_jTextArea.setText(resultString);
     }
    else if (this.explorationReport !=null && this.explorationReport.getDataSetInvestigation()!=null)
         this.dataSetInvestigation=this.explorationReport.getDataSetInvestigation().clone();

//---------------------------------------------------------------------
    if (metabolomicsData!=null &&
        metabolomicsData.getMetaData()!=null &&
       !metabolomicsData.getMetaData().isExternal() &&
        metabolomicsData.getMetaData().getInstances()!=null)
        {
            String resultString="";
            resultString=resultString+"\n"+metabolomicsData.getMetaData().getInstances().toSummaryString();
            resultString=resultString+ "\n Name of Classification Attribute = "+ metabolomicsData.getMetaData().getInstances().classAttribute().name()+"\n";
            for (int i=0;i<metabolomicsData.getMetaData().getInstances().numAttributes();i++)
            {
                if (metabolomicsData.getMetaData().getInstances().attribute(i).isNumeric())
                {
                    resultString=resultString+ "\n\nAttribute Name = "+ metabolomicsData.getMetaData().getInstances().attribute(i).name();
                    resultString=resultString+"\n-------------------------------------------------------------------------------------------------";
                    resultString=resultString+"\nMinimum = "+metabolomicsData.getMetaData().getInstances().attributeStats(i).numericStats.min;
                    resultString=resultString+"\nMaximum = "+metabolomicsData.getMetaData().getInstances().attributeStats(i).numericStats.max;
                    resultString=resultString+"\nMeans = "+metabolomicsData.getMetaData().getInstances().meanOrMode(i);
                    resultString=resultString+"\n\nVariance = "+metabolomicsData.getMetaData().getInstances().variance(i);
                    resultString=resultString+"\nStandard Deviation = "+metabolomicsData.getMetaData().getInstances().attributeStats(i).numericStats.stdDev;
                    resultString=resultString+"\nSumSq = "+metabolomicsData.getMetaData().getInstances().attributeStats(i).numericStats.sumSq;
//                    NormalEstimator  ne= new NormalEstimator(metabolomicsData.getMetaData().getInstances().attributeStats(i).numericStats.mean/10);

                    resultString=resultString+ "\n\n"+  metabolomicsData.getMetaData().getInstances().attributeStats(i);
                }
                else
                {

                    resultString=resultString+"\n\nAttribute Name = "+ metabolomicsData.getMetaData().getInstances().attribute(i).name();
                    resultString=resultString+"\n-------------------------------------------------------------------------------------------------";
                    resultString=resultString+"\n"+  metabolomicsData.getMetaData().getInstances().attributeStats(i);
                }
            }
         MetaData_Internal_Data_Investigation_jTextArea.setText(resultString);
         }
         else if (this.explorationReport !=null && this.explorationReport.getMetaDataInvestigation()!=null)
                 this.metaDataInvestigation=this.explorationReport.getMetaDataInvestigation().clone();
  }
    this.populate_prospecting();
}




//----------------------------------------------------------------------------
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//----------------------------------------------------------------------------
private void refresh_objectives()
{
 if (  Global.project.getProcess()!=null &&
    Global.project.getProcess().getResults()!=null &&    
    Global.project.getProcess().getResults().getResult(1)!=null)
{
     DataMiningObjective processObjective=null;
       if (Global.project.getProcess().getResults().getResult(1).getMainDelivery()!=null)
            processObjective = (DataMiningObjective) Global.project.getProcess().getResults().getResult(1).getMainDelivery();
       else  if (Global.project.getProcess().getResults().getResult(1).getSupplementDeliveries()!=null
              && Global.project.getProcess().getResults().getResult(1).getSupplementDeliveries().getFirst()!=null)
                    processObjective= (DataMiningObjective) Global.project.getProcess().getResults().getResult(1).getSupplementDeliveries().getFirst();
     if (processObjective!=null)
         this.Objectives_jTextArea.setText(processObjective.toMyString());    
}

 }

//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//****************************************************************************
//                             Data Set
//****************************************************************************
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

private void refresh_dataSet_investigation()
{
if (Global.project.getProcess()!=null && 
    Global.project.getProcess().getResults()!=null &&
    Global.project.getProcess().getResults().getResult(1)!=null)
    {
        if (Global.project.getProcess().getResults().getResult(1).getMainDelivery()!=null)
        {
            DataMiningObjective processObjective=(DataMiningObjective) Global.project.getProcess().getResults().getResult(1).getMainDelivery();
            Objectives_jTextArea.setText(processObjective.toMyString());
        }
    }

//*****************************************************************************
if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet()!=null &&
    Global.project.getInputs().getMetabolomicsData().getDataSet().getInvestigation()!=null)
  {
    this.dataSetInvestigation=Global.project.getInputs().getMetabolomicsData().getDataSet().getInvestigation().clone();
  }

 }

//------------------------------------------------------------------------------
private void populate_understanding()
{
    if (this.understanding!=null && this.understanding.getOutcomeURL()!=null)
        this.External_DataUnderstanding_URL_jTextField.setText(this.understanding.getOutcomeURL().toString());
    else
        this.External_DataUnderstanding_URL_jTextField.setText("");

    this.DataSet_jList.setModel(this.getDataSettAttributesModel());
    this.MetaData_jList.setModel(this.getMetaDatatAttributesModel());

}

//------------------------------------------------------------------------------
private void populate_dataSet_investigation()
{
  if (this.dataSetInvestigation!=null)
  {
    if (this.dataSetInvestigation.getFileFormat()!=null)
        this.DataSet_FileFormat_jComboBox.setSelectedIndex(this.dataSetInvestigation.getFileFormat().ordinal()+1);
    else
        this.DataSet_FileFormat_jComboBox.setSelectedIndex(0);

    if (this.dataSetInvestigation.getDataFormat()!=null)
        this.DataSet_DataFormat_jComboBox.setSelectedIndex(this.dataSetInvestigation.getDataFormat().ordinal()+1);
    else
        this.DataSet_DataFormat_jComboBox.setSelectedIndex(0);

    if (this.dataSetInvestigation.getFileFormat()!=null)
        DataSet_Size_jTextField.setText(this.dataSetInvestigation.getDataSize()+"");
    else
        DataSet_Size_jTextField.setText("");
    
   // 
   DataSet_MissingValuesPercentage_jTextPane.setText(this.dataSetInvestigation.getMissingValuesPercentage()+"");        
   //

    if (!this.DataSet_MissingValuesPercentage_jTextPane.getText().equals(""))
            this.dataSetInvestigation.setMissingValuesPercentage(Double.parseDouble(this.DataSet_MissingValuesPercentage_jTextPane.getText()));

   if (this.dataSetInvestigation.getDistributionReportURL()!=null)
       this.DataSet_DistributionURL_jTextField.setText(this.dataSetInvestigation.getDistributionReportURL().toString());
   else
       this.DataSet_DistributionURL_jTextField.setText("");

   if (this.dataSetInvestigation.getDistributionDescription()!=null)        
       this.DataSet_Distribution_jTextPane.setText(this.dataSetInvestigation.getDistributionDescription().toString());
   else
       this.DataSet_Distribution_jTextPane.setText("");
    
  if (this.dataSetInvestigation.getOutliersReportURL()!=null)
       this.DataSet_OutliersURL_jTextField.setText(this.dataSetInvestigation.getOutliersReportURL().toString());
  else
      this.DataSet_OutliersURL_jTextField.setText("");

  if (this.dataSetInvestigation.getOutliersDescription()!=null)        
       this.DataSet_Outliers_jTextPane.setText(this.dataSetInvestigation.getOutliersDescription().toString());
  else
      this.DataSet_Outliers_jTextPane.setText("");

 if (this.dataSetInvestigation.getMissingValuesReportURL()!=null)
       this.DataSet_MissingValuesURL_jTextField.setText(this.dataSetInvestigation.getMissingValuesReportURL().toString());
 else
    this.DataSet_MissingValuesURL_jTextField.setText("");

 if (this.dataSetInvestigation.getMissingValuesDescription()!=null)
     this.DataSet_MissingValues_jTextPane.setText(this.dataSetInvestigation.getMissingValuesDescription().toString());
 else
     this.DataSet_MissingValues_jTextPane.setText("");
 }
}


private void refresh_metaData_investigation()
{
 if (Global.project!=null &&
    Global.project.getInputs()!=null &&
    Global.project.getInputs().getMetabolomicsData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData()!=null &&
    Global.project.getInputs().getMetabolomicsData().getMetaData().getInvestigation()!=null)
    this.metaDataInvestigation=Global.project.getInputs().getMetabolomicsData().getMetaData().getInvestigation().clone();
}


private void populate_metaData_investigation()
{
  if (this.metaDataInvestigation!=null)
  {
    if (this.metaDataInvestigation.getFileFormat()!=null)
        this.MetaData_FileFormat_jComboBox.setSelectedIndex(this.metaDataInvestigation.getFileFormat().ordinal()+1);
    else
        this.MetaData_FileFormat_jComboBox.setSelectedIndex(0);

    if (this.metaDataInvestigation.getDataFormat()!=null)
        this.MetaData_DataFormat_jComboBox.setSelectedIndex(this.metaDataInvestigation.getDataFormat().ordinal()+1);
    else
        this.MetaData_DataFormat_jComboBox.setSelectedIndex(0);

    if (this.metaDataInvestigation.getFileFormat()!=null)
        MetaData_Size_jTextField.setText(this.metaDataInvestigation.getDataSize()+"");
    else
        MetaData_Size_jTextField.setText("");  

   if (this.metaDataInvestigation.getDistributionReportURL()!=null)
       this.MetaData_DistributionURL_jTextField.setText(this.metaDataInvestigation.getDistributionReportURL().toString());
   else
       this.MetaData_DistributionURL_jTextField.setText("");

    if (this.metaDataInvestigation.getDistributionDescription()!=null)
       this.MetaData_Distribution_jTextPane.setText(this.metaDataInvestigation.getDistributionDescription().toString());
   else
       this.MetaData_Distribution_jTextPane.setText("");

  if (this.metaDataInvestigation.getOutliersReportURL()!=null)
       this.MetaData_OutliersURL_jTextField.setText(this.metaDataInvestigation.getOutliersReportURL().toString());
  else
      this.MetaData_OutliersURL_jTextField.setText("");

  if (this.metaDataInvestigation.getOutliersDescription()!=null)
       this.MetaData_Outliers_jTextPane.setText(this.metaDataInvestigation.getOutliersDescription().toString());
  else
      this.MetaData_Outliers_jTextPane.setText("");

 if (this.metaDataInvestigation.getMissingValuesReportURL()!=null)
       this.MetaData_MissingValuesURL_jTextField.setText(this.metaDataInvestigation.getMissingValuesReportURL().toString());
 else
    this.MetaData_MissingValuesURL_jTextField.setText("");

 if (this.metaDataInvestigation.getMissingValuesDescription()!=null)
     this.MetaData_MissingValues_jTextPane.setText(this.metaDataInvestigation.getMissingValuesDescription().toString());
 else
     this.MetaData_MissingValues_jTextPane.setText("");

   //
this.MetaData_MissingValuesPercentage_jTextPane.setText(this.metaDataInvestigation.getMissingValuesPercentage()+"");
   //
 }
}
//-----------------------------------------------------------------------------
private void populate_prospecting()
{    
    this.Resources_jList.setModel(this.getProjectResourcesModel());
    this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
    this.Procedures_jList.setModel(this.getSelectedProceduresModel());
    
    if (this.prospecting!=null && this.prospecting.getOutcomeURL()!=null)
        External_Prospecting_URL_jTextField.setText(this.prospecting.getOutcomeURL().toString());

    this.populateForm();
 }



//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                             Populate
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP

private void populate()
{
    this.populate_dataSet_investigation();
    this.populate_metaData_investigation();
    this.populate_understanding();
    this.populate_prospecting();
    this.populateForm();
 }
private void populateForm()
{
    this.repaint();
    this.pack();
 }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    if (Global.project == null) {
                        Global.project = new Project();
                    }
                    if (Global.project.getProcess() == null) {
                        Global.project.setProcess(new Process());
                    }
                    Global.project.getProcess().setVersion(1);
                    /*
                    if (Global.currentPhase == null) {
                        Global.currentPhase = new Phase("Objectives Definition");
                    }
                    */
                    new DataExplorationForm().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

 //DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                              Delete Resource
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
 private void delete_resource()
{
if (this.resources!=null && this.resources.getResourcesList().size()>0)
    {
        int index= this.resources.getResourcesList().indexOf(this.resource);
        if (this.resources.delete(this.resource)==0);
        {
            if (this.resources.getResourcesList().size()>0)
            {
                if (index==0)
                    this.resource = this.resources.getResource(index);
                else if(index>0)
                    this.resource = this.resources.getResource(index-1);
            }
        }        
 }
}


//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                              Delete Source
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
 private void delete_procedure()
    {

    if (this.prospecting!=null && this.procedure!=null &&
       this.prospecting.getProcedures()!=null &&
        this.prospecting.getProcedures().getProceduresList().size()>0)
    {
        int index= this.prospecting.getProcedures().getProceduresList().indexOf(this.procedure);

        if (this.prospecting.getProcedures().delete(this.procedure)==0)
        {       
            // checking the size after the delete
            if (this.prospecting.getProcedures().getProceduresList().size()>0)
                if (index==0)
                    this.procedure = this.prospecting.getProcedures().getProcedure(index);
                else
                    this.procedure = this.prospecting.getProcedures().getProcedure(index-1);
            else
                this.clear_Procedure();
        }
    }

 }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Procedure_jButton2;
    private javax.swing.JButton Browse_Prosepcting_jButton;
    private javax.swing.JButton Clear_Understanding_jButton;
    private javax.swing.JComboBox DataSet_DataFormat_jComboBox;
    private javax.swing.JComboBox DataSet_DataType_jComboBox;
    private javax.swing.JTextField DataSet_DistributionURL_jTextField;
    private javax.swing.JButton DataSet_Distribution_Browse_jButton;
    private javax.swing.JButton DataSet_Distribution_View_jButton;
    private javax.swing.JTextPane DataSet_Distribution_jTextPane;
    private javax.swing.JComboBox DataSet_FileFormat_jComboBox;
    private javax.swing.JTextArea DataSet_Internal_Data_Investigation_jTextArea;
    private javax.swing.JButton DataSet_Investigation_Clear_jButton;
    private javax.swing.JButton DataSet_Investigation_Delete_jButton;
    private javax.swing.JButton DataSet_Investigation_Refresh_jButton;
    private javax.swing.JButton DataSet_Investigation_save_jButton;
    private javax.swing.JTextArea DataSet_Meaning_jTextArea;
    private javax.swing.JTextPane DataSet_MissingValuesPercentage_jTextPane;
    private javax.swing.JTextField DataSet_MissingValuesURL_jTextField;
    private javax.swing.JButton DataSet_MissingValues_Browse_jButton;
    private javax.swing.JButton DataSet_MissingValues_View_jButton;
    private javax.swing.JTextPane DataSet_MissingValues_jTextPane;
    private javax.swing.JTextField DataSet_OutliersURL_jTextField;
    private javax.swing.JButton DataSet_Outliers_Browse_jButton;
    private javax.swing.JButton DataSet_Outliers_View_jButton;
    private javax.swing.JTextPane DataSet_Outliers_jTextPane;
    private javax.swing.JTextField DataSet_Size_jTextField;
    private javax.swing.JDesktopPane DataSet_Understanding;
    private javax.swing.JDesktopPane DataSet_jDesktopPane;
    private javax.swing.JList DataSet_jList;
    private javax.swing.JButton DataUnderstanding_Browse_jButton;
    private javax.swing.JButton Delete_DataSet_Understanding_jButton;
    private javax.swing.JButton Delete_External_Prospecting_jButton;
    private javax.swing.JButton Delete_Internal_Prospecting_jButton;
    private javax.swing.JButton Delete_MetaData_Understanding_jButton;
    private javax.swing.JButton Delete_Procedure_jButton1;
    private javax.swing.JButton Delete_Understanding_jButton;
    private javax.swing.JButton Edit_Resource_jButton;
    private javax.swing.JTextField External_DataUnderstanding_URL_jTextField;
    private javax.swing.JTextField External_Prospecting_URL_jTextField;
    private javax.swing.JButton Generate_jButton;
    private javax.swing.JComboBox MetaData_DataFormat_jComboBox;
    private javax.swing.JComboBox MetaData_DataType_jComboBox;
    private javax.swing.JTextField MetaData_DistributionURL_jTextField;
    private javax.swing.JButton MetaData_Distribution_Browse_jButton;
    private javax.swing.JButton MetaData_Distribution_View_jButton;
    private javax.swing.JTextPane MetaData_Distribution_jTextPane;
    private javax.swing.JComboBox MetaData_FileFormat_jComboBox;
    private javax.swing.JTextArea MetaData_Internal_Data_Investigation_jTextArea;
    private javax.swing.JButton MetaData_Investigation_Clear_jButton;
    private javax.swing.JButton MetaData_Investigation_Delete_jButton;
    private javax.swing.JButton MetaData_Investigation_Refresh_jButton;
    private javax.swing.JButton MetaData_Investigation_Save_jButton;
    private javax.swing.JTextArea MetaData_Meaning_jTextArea;
    private javax.swing.JTextPane MetaData_MissingValuesPercentage_jTextPane;
    private javax.swing.JTextField MetaData_MissingValuesURL_jTextField;
    private javax.swing.JButton MetaData_MissingValues_Browse_jButton;
    private javax.swing.JButton MetaData_MissingValues_View_jButton;
    private javax.swing.JTextPane MetaData_MissingValues_jTextPane;
    private javax.swing.JTextField MetaData_OutliersURL_jTextField;
    private javax.swing.JButton MetaData_Outliers_Browse_jButton;
    private javax.swing.JButton MetaData_Outliers_View_jButton;
    private javax.swing.JTextPane MetaData_Outliers_jTextPane;
    private javax.swing.JTextField MetaData_Size_jTextField;
    private javax.swing.JDesktopPane MetaData_Understanding_jDesktopPane;
    private javax.swing.JDesktopPane MetaData_jDesktopPane1;
    private javax.swing.JList MetaData_jList;
    private javax.swing.JDesktopPane Objectives_jDesktopPane;
    private javax.swing.JTextArea Objectives_jTextArea;
    private javax.swing.JMenuItem Phase_Close_jMenuItem;
    private javax.swing.JMenuItem Phase_Delete_jMenuItem;
    private javax.swing.JMenuItem Phase_Save_jMenuItem;
    private javax.swing.JDesktopPane Planning_Objectives_Control_jDesktopPane2;
    private javax.swing.JLabel Planning_Planner_Name_jLabel;
    private javax.swing.JLabel Planning_Planner_Name_jLabel11;
    private javax.swing.JLabel Planning_Planner_Name_jLabel13;
    private javax.swing.JLabel Planning_Planner_Name_jLabel20;
    private javax.swing.JLabel Planning_Planner_Name_jLabel21;
    private javax.swing.JLabel Planning_Planner_Name_jLabel23;
    private javax.swing.JLabel Planning_Planner_Name_jLabel28;
    private javax.swing.JLabel Planning_Planner_Name_jLabel29;
    private javax.swing.JLabel Planning_Planner_Name_jLabel44;
    private javax.swing.JLabel Planning_Planner_Name_jLabel45;
    private javax.swing.JLabel Planning_Planner_Name_jLabel46;
    private javax.swing.JLabel Planning_Planner_Name_jLabel47;
    private javax.swing.JLabel Planning_Planner_Name_jLabel48;
    private javax.swing.JLabel Planning_Planner_Name_jLabel49;
    private javax.swing.JLabel Planning_Planner_Name_jLabel50;
    private javax.swing.JLabel Planning_Planner_Name_jLabel51;
    private javax.swing.JLabel Planning_Planner_Name_jLabel52;
    private javax.swing.JLabel Planning_Planner_Name_jLabel53;
    private javax.swing.JLabel Planning_Planner_Name_jLabel54;
    private javax.swing.JLabel Planning_Planner_Name_jLabel55;
    private javax.swing.JLabel Planning_Planner_Name_jLabel56;
    private javax.swing.JLabel Planning_Planner_Name_jLabel57;
    private javax.swing.JLabel Planning_Planner_Name_jLabel58;
    private javax.swing.JLabel Planning_Planner_Name_jLabel59;
    private javax.swing.JLabel Planning_Planner_Name_jLabel60;
    private javax.swing.JDesktopPane Planning_Planner_info_jDesktopPane3;
    private javax.swing.JDesktopPane Planning_Planner_info_jDesktopPane4;
    private javax.swing.JDesktopPane Planning_Planner_info_jDesktopPane6;
    private javax.swing.JDesktopPane Planning_Planner_info_jDesktopPane7;
    private javax.swing.JButton Procedure_Browse_jButton;
    private javax.swing.JTextField Procedure_URL_jTextField;
    private javax.swing.JTextArea Procedure_jTextArea;
    private javax.swing.JList Procedures_jList;
    private javax.swing.JTextArea Purpose_jTextArea;
    private javax.swing.JButton Refresh_Understanding_jButton;
    private javax.swing.JList Resources_jList;
    private javax.swing.JTextArea Result_jTextArea;
    private javax.swing.JButton Save_DataSet_Understanding_jButton;
    private javax.swing.JButton Save_MetaData_Understanding_jButton;
    private javax.swing.JButton Save_Understanding_jButton;
    private javax.swing.JButton Select_Resource_jButton2;
    private javax.swing.JList Selected_Resources_jList;
    private javax.swing.JButton Unselect_Resource_jButton2;
    private javax.swing.JButton View_Prosepcting_jButton;
    private javax.swing.JButton View_Understanding_jButton;
    private javax.swing.JButton VisualDistribution_jButton;
    private javax.swing.JButton VisualProspecting_jButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton viewDataSet_jButton;
    private javax.swing.JButton viewData_jButton;
    private javax.swing.JButton viewInternalDataSet_jButton;
    private javax.swing.JButton viewInternalMetaData_jButton;
    private javax.swing.JButton viewMetaData_jButton;
    // End of variables declaration//GEN-END:variables


//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Resources Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getProjectResourcesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Resource> resourcesList=new ArrayList<Resource>();
  String[] resourcesArrayNames = null;
  if (Global.project!=null
          && Global.project.getSupplements()!=null
          && Global.project.getSupplements().getManagement()!=null )
  {
      if (  Global.project.getSupplements().getManagement().getResources()!=null
              && Global.project.getSupplements().getManagement().getResources().getResourcesList().size()>0)
      {
        resourcesList=Global.project.getSupplements().getManagement().getResources().getResourcesList();
        int size=resourcesList.size();
        resourcesArrayNames = new String[size];
        int i=0;
        for (Object o:resourcesList)
            {
              Resource thisResource=(Resource) o;
              String result="";
              if ( thisResource !=null && thisResource.getResourceType()!=null)
                  result=thisResource.getResourceType().toString()+"  ";
              if (thisResource !=null && thisResource.getDescription()!=null)
                   result=result+ thisResource.getDescription();
              resourcesArrayNames[i]=result;
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resourcesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No resource available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No resource available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

public  DefaultComboBoxModel getSelectedResourcesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Resource> resourcesList=new ArrayList<Resource>();
  String[] resourcesArrayNames = null;

 if (this.resources!=null)
  {
      if (this.resources.getResourcesList().size()>0)
      {
        resourcesList=this.resources.getResourcesList();
        int size=resourcesList.size();
        resourcesArrayNames = new String[size];
        int i=0;
        for (Object o:resourcesList)
            {
              Resource thisResource=(Resource) o;
              String result="";
              if (thisResource.getResourceType()!=null)
                  result=thisResource.getResourceType().toString()+"  ";
              if (thisResource.getDescription()!=null)
                   result=result+ thisResource.getDescription();
              resourcesArrayNames[i]=result;
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resourcesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No selected resource yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No selected resource yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }


//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Remeasures Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getSelectedProceduresModel()
{ 
  DefaultComboBoxModel dcm=null;
  ArrayList<Procedure> proceduresList=new ArrayList<Procedure>();
  String[] procedureArrayNames = null;
  if (this.prospecting!=null &&this.prospecting.getProcedures()!=null)
  {
      if ( this.prospecting.getProcedures().getProceduresList().size()>0)
      {
        proceduresList=this.prospecting.getProcedures().getProceduresList();
        int size=proceduresList.size();
        procedureArrayNames = new String[size];
        int i=0;
        for (Object o:proceduresList)
            {
            String result="";
            Procedure  thisProcedure=(Procedure) o;
            result=thisProcedure.toString();
              procedureArrayNames[i]=result;
              i=i+1;
              //--------------------------------------------------------------
             }
        dcm=new DefaultComboBoxModel(procedureArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No expected outcome selected yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No expected outcome selected yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }




//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Attributes Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getDataSettAttributesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Attribute> attributesList=new ArrayList<Attribute>();
  String[] attributesArrayNames = null;
  if (metabolomicsData!=null && metabolomicsData.getDataSet()!=null && !metabolomicsData.getDataSet().isExternal())
  {
    if (metabolomicsData.getDataSet().getAttributesList()!=null
              && metabolomicsData.getDataSet().getAttributesList().size()>0)
      {
        attributesList=metabolomicsData.getDataSet().getAttributesList();
        int size=attributesList.size();
        attributesArrayNames = new String[size];
        int i=0;
        for (Object o:attributesList)
            {
              Attribute thisAttribute=(Attribute) o;
              attributesArrayNames[i]=thisAttribute.toUnderstandingString();
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(attributesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No attribute available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No attribute available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Attributes Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getMetaDatatAttributesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Attribute> attributesList=new ArrayList<Attribute>();
  String[] attributesArrayNames = null;
  if (metabolomicsData!=null && metabolomicsData.getMetaData()!=null && !metabolomicsData.getDataSet().isExternal())
  {
    if (metabolomicsData.getMetaData().getAttributesList()!=null
              && metabolomicsData.getMetaData().getAttributesList().size()>0)
      {
        attributesList=metabolomicsData.getMetaData().getAttributesList();
        int size=attributesList.size();
        attributesArrayNames = new String[size];
        int i=0;
        for (Object o:attributesList)
            {
              Attribute thisAttribute=(Attribute) o;
              attributesArrayNames[i]=thisAttribute.toString();
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(attributesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No attribute available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No attribute available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

//****************************************************************************
private void refresh()
{    
    if (Global.project!=null &&
        Global.project.getInputs()!=null &&
        Global.project.getInputs().getMetabolomicsData()!=null)
    {
        this.metabolomicsData=Global.project.getInputs().getMetabolomicsData();        
    }

    this.refresh_understanding();
    //
    this.refresh_prospecting();
    //
    this.refresh_dataSet_investigation();
    //
    this.refresh_metaData_investigation();
    //
    this.refresh_objectives();
    //
    this.DataSet_jList.setModel(this.getDataSettAttributesModel());
    this.MetaData_jList.setModel(this.getMetaDatatAttributesModel());
    this.Procedures_jList.setModel(this.getSelectedProceduresModel());
    this.Resources_jList.setModel(this.getProjectResourcesModel());
    this.Selected_Resources_jList.setModel(this.getSelectedResourcesModel());
}

}
