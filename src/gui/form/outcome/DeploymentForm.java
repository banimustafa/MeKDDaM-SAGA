/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.form.outcome;
import global.Global;
import gui.form.supplement.ManagementForm;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import process_model.phase.Phase;
import process_model.process.result.Result;
import process_model.phase.delivery.deployment.Deployment;
import process_model.supplement.management.resource.Resource;
import process_model.supplement.management.resource.Resources;
import project.Project;
import process_model.process.Process;
import process_model.process.result.Results;
import toolbox.Tools;
public class DeploymentForm extends javax.swing.JFrame {
private Resource resource=null;
private Phase phase=Global.currentPhase;
private Result result;
private Results results;

 //private Models models= new Models();
 //
 private Deployment deployment;

//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

private String targets[]={" ",
"Data_Warehouse",
"DBMS",
"EmbededSystem",
"FileSystem",
"Software_Application",
"Web_Reposotory",
"Web_Service",
"Other"
};
//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
public DeploymentForm() {
     initComponents();        
     this.refresh_deployment();
     this.populate_deployment();
     this.setTitle("Deployment: "+Global.currentPhase.getTitle());
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Performing_jLayeredPane = new javax.swing.JLayeredPane();
        Performing_Details_jDesktopPane_jDesktopPane = new javax.swing.JDesktopPane();
        Performing_Details_TabbedPane = new javax.swing.JTabbedPane();
        jLayeredPane39 = new javax.swing.JLayeredPane();
        Planning_Resource_jDesktopPane = new javax.swing.JDesktopPane();
        Planning_Objectives_Control_jDesktopPane1 = new javax.swing.JDesktopPane();
        Resource_Edit_jButton = new javax.swing.JButton();
        Resources_Select_jButton1 = new javax.swing.JButton();
        Resources_UnSelect_jButton1 = new javax.swing.JButton();
        Reporting_Customised_jDesktopPane3 = new javax.swing.JDesktopPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        Resources_jList = new javax.swing.JList();
        Reporting_Customised_jDesktopPane5 = new javax.swing.JDesktopPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        Pres_Req_Resources_jList = new javax.swing.JList();
        Resource_jDesktopPane1 = new javax.swing.JDesktopPane();
        ConsumedTime_jLabel1 = new javax.swing.JLabel();
        ConsumedTimeDuration_jTextField = new javax.swing.JTextField();
        Reporting_Customised_jDesktopPane4 = new javax.swing.JDesktopPane();
        RemainingTime_jTextField = new javax.swing.JTextField();
        Project_Constraint_RemainingDuration_jLabel1 = new javax.swing.JLabel();
        Reporting_Customised_jDesktopPane6 = new javax.swing.JDesktopPane();
        Project_Constraint_RemainingFunds_jLabel1 = new javax.swing.JLabel();
        RemainingFunds_jTextField = new javax.swing.JTextField();
        Justification_Source_jDesktopPane = new javax.swing.JDesktopPane();
        Justification_Sources_Control_jDesktopPane = new javax.swing.JDesktopPane();
        Result_Select_jButton = new javax.swing.JButton();
        Result_UnSelect_jButton = new javax.swing.JButton();
        Results_Edit_jButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Results_jList = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        Selected_Results_jList = new javax.swing.JList();
        Navigation_jDesktopPane = new javax.swing.JDesktopPane();
        Last_jButton = new javax.swing.JButton();
        Next_jButton = new javax.swing.JButton();
        Previous_jButton = new javax.swing.JButton();
        First_jButton = new javax.swing.JButton();
        Planning_CustomisedPlan_jDesktopPane = new javax.swing.JDesktopPane();
        Performed_Plan_jPanel = new javax.swing.JPanel();
        Planning_Planner_Name_jLabel14 = new javax.swing.JLabel();
        DeplymentTarget_jComboBox = new javax.swing.JComboBox();
        Planning_Planner_Name_jLabel12 = new javax.swing.JLabel();
        Presentation_Browse_jButton = new javax.swing.JButton();
        Deployment_URL_jTextField = new javax.swing.JTextField();
        Prerequisite_Source_ExternalSource_URL_jLabel4 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        Deployment_Description_jTextPane = new javax.swing.JTextPane();
        IncludeData_jCheckBox = new javax.swing.JCheckBox();
        Planning_Planner_Name_jLabel15 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        DeploymentMechanism_jTextPane = new javax.swing.JTextPane();
        FinalResults_jCheckBox = new javax.swing.JCheckBox();
        IncludeAllDeliveries_jCheckBox = new javax.swing.JCheckBox();
        View_jButton = new javax.swing.JButton();
        Control_jDesktopPane = new javax.swing.JDesktopPane();
        Delete_jButton = new javax.swing.JButton();
        Save_jButton = new javax.swing.JButton();
        Refresh_jButton = new javax.swing.JButton();
        New_jDesktopPane = new javax.swing.JDesktopPane();
        New_jButton1 = new javax.swing.JButton();
        Add_jButton1 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        Performing_jLayeredPane.setBackground(new java.awt.Color(255, 255, 204));
        Performing_jLayeredPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Performing_Details_jDesktopPane_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        Performing_Details_jDesktopPane_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Planning_Resource_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Planning_Resource_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Planning_Resource_jDesktopPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Planning_Resource_jDesktopPaneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Planning_Resource_jDesktopPaneFocusLost(evt);
            }
        });

        Planning_Objectives_Control_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 153));

        Resource_Edit_jButton.setText("Edit");
        Resource_Edit_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resource_Edit_jButtonActionPerformed(evt);
            }
        });
        Resource_Edit_jButton.setBounds(0, 60, 70, 20);
        Planning_Objectives_Control_jDesktopPane1.add(Resource_Edit_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Resources_Select_jButton1.setText("+>");
        Resources_Select_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resources_Select_jButton1ActionPerformed(evt);
            }
        });
        Resources_Select_jButton1.setBounds(0, 0, 70, 20);
        Planning_Objectives_Control_jDesktopPane1.add(Resources_Select_jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Resources_UnSelect_jButton1.setText("<-");
        Resources_UnSelect_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resources_UnSelect_jButton1ActionPerformed(evt);
            }
        });
        Resources_UnSelect_jButton1.setBounds(0, 20, 70, 20);
        Planning_Objectives_Control_jDesktopPane1.add(Resources_UnSelect_jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Objectives_Control_jDesktopPane1.setBounds(350, 10, 70, 100);
        Planning_Resource_jDesktopPane.add(Planning_Objectives_Control_jDesktopPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane3.setBackground(new java.awt.Color(255, 255, 204));
        Reporting_Customised_jDesktopPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Available Resources"));

        Resources_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Project Resources"));
        Resources_jList.setModel(this.getProjectResourcesModel());
        Resources_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Resources_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Resources_jListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(Resources_jList);

        jScrollPane7.setBounds(10, 20, 320, 270);
        Reporting_Customised_jDesktopPane3.add(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane3.setBounds(10, 10, 340, 300);
        Planning_Resource_jDesktopPane.add(Reporting_Customised_jDesktopPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane5.setBackground(new java.awt.Color(255, 255, 204));
        Reporting_Customised_jDesktopPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Required Resources"));

        Pres_Req_Resources_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Building Requirements"));
        Pres_Req_Resources_jList.setModel(this.getDeploymentUsedResourcesModel());
        Pres_Req_Resources_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Pres_Req_Resources_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Pres_Req_Resources_jListValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(Pres_Req_Resources_jList);

        jScrollPane11.setBounds(20, 20, 460, 180);
        Reporting_Customised_jDesktopPane5.add(jScrollPane11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Resource_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 153));
        Resource_jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Resource_jDesktopPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Resource_jDesktopPane1MouseClicked(evt);
            }
        });

        ConsumedTime_jLabel1.setText("Required Time");
        ConsumedTime_jLabel1.setBounds(30, 10, 90, 22);
        Resource_jDesktopPane1.add(ConsumedTime_jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ConsumedTimeDuration_jTextField.setBounds(30, 30, 70, 22);
        Resource_jDesktopPane1.add(ConsumedTimeDuration_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Resource_jDesktopPane1.setBounds(20, 210, 140, 70);
        Reporting_Customised_jDesktopPane5.add(Resource_jDesktopPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane4.setBackground(new java.awt.Color(255, 255, 204));
        Reporting_Customised_jDesktopPane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RemainingTime_jTextField.setBackground(new java.awt.Color(255, 255, 153));
        RemainingTime_jTextField.setBounds(30, 30, 80, 22);
        Reporting_Customised_jDesktopPane4.add(RemainingTime_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Project_Constraint_RemainingDuration_jLabel1.setText("Remaining Time");
        Project_Constraint_RemainingDuration_jLabel1.setBounds(30, 10, 130, 25);
        Reporting_Customised_jDesktopPane4.add(Project_Constraint_RemainingDuration_jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane4.setBounds(180, 210, 140, 70);
        Reporting_Customised_jDesktopPane5.add(Reporting_Customised_jDesktopPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane6.setBackground(new java.awt.Color(255, 255, 204));
        Reporting_Customised_jDesktopPane6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Project_Constraint_RemainingFunds_jLabel1.setText("Remaining Funds");
        Project_Constraint_RemainingFunds_jLabel1.setBounds(30, 10, 130, 20);
        Reporting_Customised_jDesktopPane6.add(Project_Constraint_RemainingFunds_jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        RemainingFunds_jTextField.setBackground(new java.awt.Color(255, 255, 153));
        RemainingFunds_jTextField.setBounds(30, 30, 80, 22);
        Reporting_Customised_jDesktopPane6.add(RemainingFunds_jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane6.setBounds(340, 210, 140, 70);
        Reporting_Customised_jDesktopPane5.add(Reporting_Customised_jDesktopPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Reporting_Customised_jDesktopPane5.setBounds(420, 10, 500, 290);
        Planning_Resource_jDesktopPane.add(Reporting_Customised_jDesktopPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_Resource_jDesktopPane.setBounds(0, 0, 930, 330);
        jLayeredPane39.add(Planning_Resource_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Performing_Details_TabbedPane.addTab("Deployment Resources", jLayeredPane39);

        Justification_Source_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Justification_Source_jDesktopPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Process Results "));

        Justification_Sources_Control_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));

        Result_Select_jButton.setText("+>");
        Result_Select_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Result_Select_jButtonActionPerformed(evt);
            }
        });
        Result_Select_jButton.setBounds(0, 0, 60, 20);
        Justification_Sources_Control_jDesktopPane.add(Result_Select_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Result_UnSelect_jButton.setText("<-");
        Result_UnSelect_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Result_UnSelect_jButtonActionPerformed1(evt);
            }
        });
        Result_UnSelect_jButton.setBounds(0, 22, 60, 20);
        Justification_Sources_Control_jDesktopPane.add(Result_UnSelect_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Results_Edit_jButton.setText("Edit");
        Results_Edit_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Results_Edit_jButtonActionPerformed(evt);
            }
        });
        Results_Edit_jButton.setBounds(0, 50, 60, 20);
        Justification_Sources_Control_jDesktopPane.add(Results_Edit_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Justification_Sources_Control_jDesktopPane.setBounds(430, 30, 60, 90);
        Justification_Source_jDesktopPane.add(Justification_Sources_Control_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Results_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Process Results"));
        Results_jList.setModel(this.getProcessResultsModel());
        Results_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Results_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Results_jListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(Results_jList);

        jScrollPane5.setBounds(20, 30, 410, 270);
        Justification_Source_jDesktopPane.add(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Selected_Results_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Results to be Deployed"));
        Selected_Results_jList.setModel(this.getSelectedResultsModel());
        Selected_Results_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Selected_Results_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Selected_Results_jListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(Selected_Results_jList);

        jScrollPane6.setBounds(490, 30, 420, 270);
        Justification_Source_jDesktopPane.add(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Performing_Details_TabbedPane.addTab("Deployable Results", Justification_Source_jDesktopPane);

        Performing_Details_TabbedPane.setBounds(20, 260, 940, 350);
        Performing_Details_jDesktopPane_jDesktopPane.add(Performing_Details_TabbedPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Navigation_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Navigation_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Last_jButton.setText("Last >>");
        Last_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Last_jButtonActionPerformed(evt);
            }
        });
        Last_jButton.setBounds(330, 10, 100, 23);
        Navigation_jDesktopPane.add(Last_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Next_jButton.setText("Next >");
        Next_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_jButtonActionPerformed(evt);
            }
        });
        Next_jButton.setBounds(240, 10, 90, 23);
        Navigation_jDesktopPane.add(Next_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Previous_jButton.setText("< Previous");
        Previous_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_jButtonActionPerformed(evt);
            }
        });
        Previous_jButton.setBounds(130, 10, 110, 23);
        Navigation_jDesktopPane.add(Previous_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        First_jButton.setText("<< First");
        First_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                First_jButtonActionPerformed(evt);
            }
        });
        First_jButton.setBounds(10, 10, 120, 23);
        Navigation_jDesktopPane.add(First_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Navigation_jDesktopPane.setBounds(20, 620, 440, 40);
        Performing_Details_jDesktopPane_jDesktopPane.add(Navigation_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_CustomisedPlan_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        Planning_CustomisedPlan_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Performed_Plan_jPanel.setBackground(new java.awt.Color(255, 255, 153));
        Performed_Plan_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Performed_Plan_jPanel.setLayout(null);

        Planning_Planner_Name_jLabel14.setText("Deployment Method");
        Performed_Plan_jPanel.add(Planning_Planner_Name_jLabel14);
        Planning_Planner_Name_jLabel14.setBounds(20, 10, 180, 20);

        DeplymentTarget_jComboBox.setBackground(new java.awt.Color(255, 255, 204));
        DeplymentTarget_jComboBox.setMaximumRowCount(10);
        DeplymentTarget_jComboBox.setModel(new DefaultComboBoxModel(this.targets));
        Performed_Plan_jPanel.add(DeplymentTarget_jComboBox);
        DeplymentTarget_jComboBox.setBounds(20, 30, 180, 22);

        Planning_Planner_Name_jLabel12.setText("Description");
        Performed_Plan_jPanel.add(Planning_Planner_Name_jLabel12);
        Planning_Planner_Name_jLabel12.setBounds(230, 10, 260, 20);

        Presentation_Browse_jButton.setText("Browse");
        Presentation_Browse_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Presentation_Browse_jButtonActionPerformed(evt);
            }
        });
        Performed_Plan_jPanel.add(Presentation_Browse_jButton);
        Presentation_Browse_jButton.setBounds(690, 180, 100, 25);
        Performed_Plan_jPanel.add(Deployment_URL_jTextField);
        Deployment_URL_jTextField.setBounds(150, 180, 540, 25);

        Prerequisite_Source_ExternalSource_URL_jLabel4.setText("Deployment URL");
        Performed_Plan_jPanel.add(Prerequisite_Source_ExternalSource_URL_jLabel4);
        Prerequisite_Source_ExternalSource_URL_jLabel4.setBounds(30, 180, 120, 20);

        jScrollPane9.setViewportView(Deployment_Description_jTextPane);

        Performed_Plan_jPanel.add(jScrollPane9);
        jScrollPane9.setBounds(230, 30, 260, 130);

        IncludeData_jCheckBox.setBackground(new java.awt.Color(255, 255, 153));
        IncludeData_jCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11));
        IncludeData_jCheckBox.setText("Deploy Data");
        Performed_Plan_jPanel.add(IncludeData_jCheckBox);
        IncludeData_jCheckBox.setBounds(20, 130, 180, 20);

        Planning_Planner_Name_jLabel15.setText("Deployment Mechanism ");
        Performed_Plan_jPanel.add(Planning_Planner_Name_jLabel15);
        Planning_Planner_Name_jLabel15.setBounds(520, 10, 340, 20);

        jScrollPane10.setViewportView(DeploymentMechanism_jTextPane);

        Performed_Plan_jPanel.add(jScrollPane10);
        jScrollPane10.setBounds(520, 30, 360, 130);

        FinalResults_jCheckBox.setBackground(new java.awt.Color(255, 255, 153));
        FinalResults_jCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11));
        FinalResults_jCheckBox.setText("Final Results");
        Performed_Plan_jPanel.add(FinalResults_jCheckBox);
        FinalResults_jCheckBox.setBounds(20, 70, 180, 20);

        IncludeAllDeliveries_jCheckBox.setBackground(new java.awt.Color(255, 255, 153));
        IncludeAllDeliveries_jCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11));
        IncludeAllDeliveries_jCheckBox.setText("Deploy All Results");
        Performed_Plan_jPanel.add(IncludeAllDeliveries_jCheckBox);
        IncludeAllDeliveries_jCheckBox.setBounds(20, 100, 180, 20);

        View_jButton.setText("View");
        View_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_jButtonActionPerformed(evt);
            }
        });
        Performed_Plan_jPanel.add(View_jButton);
        View_jButton.setBounds(790, 180, 90, 25);

        Performed_Plan_jPanel.setBounds(10, 10, 910, 220);
        Planning_CustomisedPlan_jDesktopPane.add(Performed_Plan_jPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Planning_CustomisedPlan_jDesktopPane.setBounds(20, 10, 930, 240);
        Performing_Details_jDesktopPane_jDesktopPane.add(Planning_CustomisedPlan_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Control_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Control_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Delete_jButton.setText("Delete");
        Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_jButtonActionPerformed(evt);
            }
        });
        Delete_jButton.setBounds(180, 10, 80, 25);
        Control_jDesktopPane.add(Delete_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Save_jButton.setText("Save");
        Save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_jButtonActionPerformed(evt);
            }
        });
        Save_jButton.setBounds(100, 10, 80, 25);
        Control_jDesktopPane.add(Save_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Refresh_jButton.setText("Refresh");
        Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh_jButtonActionPerformed(evt);
            }
        });
        Refresh_jButton.setBounds(10, 10, 90, 25);
        Control_jDesktopPane.add(Refresh_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Control_jDesktopPane.setBounds(480, 620, 270, 40);
        Performing_Details_jDesktopPane_jDesktopPane.add(Control_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        New_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        New_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        New_jButton1.setText("New");
        New_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_jButton1ActionPerformed(evt);
            }
        });
        New_jButton1.setBounds(10, 10, 80, 23);
        New_jDesktopPane.add(New_jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Add_jButton1.setText("Add +");
        Add_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_jButton1ActionPerformed(evt);
            }
        });
        Add_jButton1.setBounds(90, 10, 90, 23);
        New_jDesktopPane.add(Add_jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        New_jDesktopPane.setBounds(770, 620, 190, 40);
        Performing_Details_jDesktopPane_jDesktopPane.add(New_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Performing_Details_jDesktopPane_jDesktopPane.setBounds(10, 10, 980, 670);
        Performing_jLayeredPane.add(Performing_Details_jDesktopPane_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Performing_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Performing_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Resources_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Resources_jListValueChanged

   if (Global.project!=null&&Global.project.getSupplements()!=null && 
       Global.project.getSupplements().getManagement()!=null &&
       Global.project.getSupplements().getManagement().getResources()!=null )
       if (this.Resources_jList.getSelectedIndex()>=0)
            this.resource=Global.project.getSupplements().getManagement().
            getResources().getResource(this.Resources_jList.getSelectedIndex());

        this.populateForm();


    }//GEN-LAST:event_Resources_jListValueChanged

    private void Sources_UnSelect_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sources_UnSelect_jButtonActionPerformed

    }//GEN-LAST:event_Sources_UnSelect_jButtonActionPerformed



//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                              Delete Resource
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
 private void delete_resource()
{
if (this.deployment!=null &&
//    this.Deployment.getFeasibility()!=null &&
    this.deployment.getRequirements()!=null &&
    this.deployment.getRequirements().getResourcesList().size()>0)
    {
        int index= this.deployment.getRequirements().getResourcesList()
                                                                            .indexOf(this.resource);
        if (this.deployment.getRequirements().delete(this.resource)==0);
        {
            if (this.deployment.getRequirements().getResourcesList().size()>0)
            {
                if (index==0)
                    this.resource = this.deployment.getRequirements().getResource(index);
                else if(index>0)
                    this.resource = this.deployment.getRequirements().getResource(index-1);

            }
        }
        // setResult process objective
 }
}



    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

this.refresh_deployment_details();

    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
//this.save_model();
    }//GEN-LAST:event_formWindowDeactivated

    private void Pres_Req_Resources_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Pres_Req_Resources_jListValueChanged
        if (this.deployment!=null &&
//            this.model.getFeasibility()!=null &&
            this.deployment.getRequirements()!=null)

         if (this.deployment.getRequirements().getResourcesList().size()>=0
            && this.Pres_Req_Resources_jList.getSelectedIndex()>=0)

             this.resource= (Resource) this.deployment.getRequirements().getResourcesList().get(this.Pres_Req_Resources_jList.getSelectedIndex());
    }//GEN-LAST:event_Pres_Req_Resources_jListValueChanged

    private void Resource_Edit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resource_Edit_jButtonActionPerformed
    new ManagementForm(this.resource).setVisible(true);
    }//GEN-LAST:event_Resource_Edit_jButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
 System.gc();
 //System.runFinalization();


    }//GEN-LAST:event_formWindowClosed



    private void Analysts_jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Analysts_jList1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_Analysts_jList1ValueChanged

    private void Analysts_jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Analysts_jList2ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_Analysts_jList2ValueChanged

    private void Planning_Resource_jDesktopPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Planning_Resource_jDesktopPaneFocusGained
    if (Global.project!=null && Global.project.getSupplements()!=null &&
        Global.project.getSupplements().getManagement()!=null &&
        Global.project.getSupplements().getManagement().getConstraint()!=null)
        {
            this.RemainingTime_jTextField.setText(Global.project.getSupplements().getManagement().getConstraint().getRemainingTime()+"");
            this.RemainingFunds_jTextField.setText(Global.project.getSupplements().getManagement().getConstraint().getRemainingFunds()+"");
        }
    //------------------------------------------------------------------------
  /*
    if (this.model!=null && this.model.getFeasibility()!=null)
         {
            this.Duration_jTextField.setText(this.model.getFeasibility().getRequiredTime()+"");
            this.Feasible_jCheckBox.setSelected(this.model.getFeasibility().isFeasible());
         }
*/

    }//GEN-LAST:event_Planning_Resource_jDesktopPaneFocusGained

    private void Planning_Resource_jDesktopPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Planning_Resource_jDesktopPaneFocusLost
/*
   if (this.model!=null && this.model.getFeasibility()!=null
       && !this.Duration_jTextField.getText().equals(""))
    {
       this.model.getFeasibility().setRequiredTime(Double.parseDouble(this.Duration_jTextField.getText()));
       this.model.getFeasibility().setFeasible(this.Feasible_jCheckBox.isSelected());
     }
 *
 */
    }//GEN-LAST:event_Planning_Resource_jDesktopPaneFocusLost

    private void Presentation_Browse_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Presentation_Browse_jButtonActionPerformed
         
//this.Delete_jButtonActionPerformed(evt);            
// this.deployment=new Deployment();        
                
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
File file =null;    
if (!this.Deployment_URL_jTextField.getText().equals("")) 
{        
    try {            
        URL thisURL=new URL(this.Deployment_URL_jTextField.getText());        
        String homeDirectory=Tools.toFile(thisURL).getParent();
        file= Tools.chooseFile("Choose Deployment File", null, homeDirectory, false);
        }                 
    catch (MalformedURLException ex) 
    {              
        file = Tools.chooseFile("Choose Deployment File",null, Global.project.getLocation(), false);
    }
}
else       
    file = Tools.chooseFile("Choose Deployment File",null, Global.project.getLocation(), false);       


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
if (file!=null)
{

   int decision1=JOptionPane.showConfirmDialog(null, "Would you like to reset the current deployment delivery?"); 
   if (decision1==0)              
        this.Delete_jButtonActionPerformed(evt);

    //Tools.viewAnyFile(file);
   this.Deployment_URL_jTextField.setText(Tools.toURL(file).toString());        
   this.save_deployment();        
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++    
   int decision=JOptionPane.showConfirmDialog(null, "Would you like to import the file to the Temp folder as a local copy ?");

   if (decision==0)      
    {
      try {
          URL selectedUrl = new URL(this.Deployment_URL_jTextField.getText());
          URL newUrl = Tools.copyFileToTemp(selectedUrl);

          if (newUrl!=null)
              this.Deployment_URL_jTextField.setText(newUrl.toString());
        }
        catch (MalformedURLException ex) {
           Logger.getLogger(DataExplorationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
   }        
   //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   this.save_deployment();
   this.refresh_deployment();
   this.populate_deployment();
}
    }//GEN-LAST:event_Presentation_Browse_jButtonActionPerformed

    private void New_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_jButton1ActionPerformed
        this.clear_deployment();
}//GEN-LAST:event_New_jButton1ActionPerformed

    private void Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh_jButtonActionPerformed
        this.refresh_deployment();
        this.populate_deployment();
    }//GEN-LAST:event_Refresh_jButtonActionPerformed

    private void Save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_jButtonActionPerformed
        this.save_deployment();
}//GEN-LAST:event_Save_jButtonActionPerformed

    private void Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_jButtonActionPerformed
        
    if (this.deployment!=null)
    {
        this.deployment.UnDeliverAsMain();
        this.delete_deployment();
        this.populate_deployment();
        this.populateForm();
    }
}//GEN-LAST:event_Delete_jButtonActionPerformed

    private void Add_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_jButton1ActionPerformed
        this.save_deployment();
        this.clear_deployment();
}//GEN-LAST:event_Add_jButton1ActionPerformed

    private void First_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_First_jButtonActionPerformed
        this.first_deployment();
}//GEN-LAST:event_First_jButtonActionPerformed

    private void Previous_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_jButtonActionPerformed
        this.previous_deployment();
}//GEN-LAST:event_Previous_jButtonActionPerformed

    private void Next_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_jButtonActionPerformed
        this.next_deployment();
}//GEN-LAST:event_Next_jButtonActionPerformed

    private void Last_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Last_jButtonActionPerformed
        this.last_deployment();
}//GEN-LAST:event_Last_jButtonActionPerformed

    private void Resources_Select_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resources_Select_jButton1ActionPerformed

 this.save_deployment();
 if (this.deployment!=null)
 {
        if (this.resource!=null )
        {
            if (this.deployment.getRequirements()==null)
                this.deployment.setRequirements(new Resources());

            this.deployment.getRequirements().save(this.resource);
        }
        this.Pres_Req_Resources_jList.setModel(this.getDeploymentUsedResourcesModel());

        this.save_deployment();
        this.populateForm();
  }
 else
  JOptionPane.showMessageDialog(null, "No Objective added yet ...!!!");

    }//GEN-LAST:event_Resources_Select_jButton1ActionPerformed

    private void Resources_UnSelect_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resources_UnSelect_jButton1ActionPerformed

        if (this.deployment!=null)
            this.delete_resource();
        //
 this.Pres_Req_Resources_jList.setModel(this.getDeploymentUsedResourcesModel());
        //
        this.Pres_Req_Resources_jList.setSelectedIndex(this.deployment.getRequirements().
                getResourcesList().indexOf(this.resource));

        this.populateForm();

    }//GEN-LAST:event_Resources_UnSelect_jButton1ActionPerformed

    private void Resource_jDesktopPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Resource_jDesktopPane1MouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_Resource_jDesktopPane1MouseClicked

    private void Result_Select_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Result_Select_jButtonActionPerformed
        //this.save_deployment();
        if (this.deployment!=null) {

            if (this.deployment.getResults()==null)
                this.deployment.setResults(new Results());
            this.addResourceFunds();
            this.deployment.getResults().setResult(this.result);
        }
        this.save_deployment();
        this.Selected_Results_jList.setModel(this.getSelectedResultsModel());
        this.populate_deployment();
        this.populateForm();


    }//GEN-LAST:event_Result_Select_jButtonActionPerformed

    private void Result_UnSelect_jButtonActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Result_UnSelect_jButtonActionPerformed1
        if (this.deployment!=null )
        {
            this.deductResourceFunds();
            this.delete_result();
        }
        this.Selected_Results_jList.setModel(this.getSelectedResultsModel());

        this.populateForm();
}//GEN-LAST:event_Result_UnSelect_jButtonActionPerformed1

    private void Results_Edit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Results_Edit_jButtonActionPerformed
       // ProjectSourceForm projectSourceForm=null;
       // projectSourceForm=new ProjectSourceForm((process_model.issue.tracibility.Source) this.source);
    }//GEN-LAST:event_Results_Edit_jButtonActionPerformed

    private void Results_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Results_jListValueChanged
        if (Global.project !=null &&  
            Global.project.getProcess()!=null &&
            Global.project.getProcess().getResults()!=null&&
            Global.project.getProcess().getResults().getResultsList().size()>0)
            if (this.Results_jList.getSelectedIndex()>=0)

                this.result=(Result) Global.project.getProcess().getResults().
                        getResultsList().get(this.Results_jList.getSelectedIndex());

    }//GEN-LAST:event_Results_jListValueChanged

    private void Selected_Results_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Selected_Results_jListValueChanged

        if (this.deployment!=null && this.deployment.getResults()!=null)
            if (this.Selected_Results_jList.getSelectedIndex()>=0)

                this.result= (Result) this.deployment.getResults().getResultsList().get(this.Selected_Results_jList.getSelectedIndex());
    }//GEN-LAST:event_Selected_Results_jListValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//if (this.deployment!=null)
    this.save_deployment();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void View_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_jButtonActionPerformed
        
    if (Deployment_URL_jTextField.getText().equals(""))
    try {
            Tools.viewAnyFile(Tools.toFile(new URL(Deployment_URL_jTextField.getText())));    
        } catch (MalformedURLException ex) {
            Logger.getLogger(DeploymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_View_jButtonActionPerformed
 private void delete_result()
   {
    if (this.deployment!=null &&this.deployment.getResults()!=null
            && this.deployment.getResults().getResultsList().size()>0)
  {
        int index= this.deployment.getResults().getResultsList().indexOf(this.result);
        this.deployment.getResults().deleteResult(this.result);
        
            if (this.deployment.getResults().getResultsList().size()>0)
            {
                if (index==0)
                    this.result = (Result) this.deployment.getResults().getResultsList().get(index);
                else if (index>0)
                     this.result = (Result) this.deployment.getResults().getResultsList().get(index-1);
            }
        
 }
}


//-----------------------------------------------------------------------------
//*****************************************************************************
//                     Resources Funds Calculations
//*****************************************************************************
//-----------------------------------------------------------------------------
private void addResourceFunds()
{
if (Global.project!=null &&
                Global.project.getSupplements()!=null &&
                Global.project.getSupplements().getManagement()!=null &&
                Global.project.getSupplements().getManagement().getConstraint()!=null)
                {
                      Double curruntUsedFunds=Global.project.getSupplements().getManagement().getConstraint().getUsedFunds();
                      Double totalFunds=Global.project.getSupplements().getManagement().getConstraint().getTotalFunds();

                      Double resourceCost=0.0;

                      if (this.resource!=null)
                              resourceCost= this.resource.getCost();

                      Double newUsedFunds=curruntUsedFunds+resourceCost;

                      if (newUsedFunds>totalFunds)
                          JOptionPane.showMessageDialog(null, "Exceeded the project Total Funds,"
                                                           +" Used Funds = "+newUsedFunds
                                                           +" Project Planned Total Funds = "+totalFunds);

                     Global.project.getSupplements().getManagement().getConstraint().setUsedFunds(newUsedFunds);

                }
}

//*****************************************************************************
private void deductResourceFunds()
{
 //------------------------------------------------------------------
            if (Global.project!=null &&
                Global.project.getSupplements()!=null &&
                Global.project.getSupplements().getManagement()!=null &&
                Global.project.getSupplements().getManagement().getConstraint()!=null)
                {
                      Double curruntUsedFunds=Global.project.getSupplements().getManagement().getConstraint().getUsedFunds();
                      Double totalFunds=Global.project.getSupplements().getManagement().getConstraint().getTotalFunds();

                      Double resourceCost=0.0;

                      if (this.resource!=null)
                              resourceCost= this.resource.getCost();

                      Double newUsedFunds=curruntUsedFunds-resourceCost;

                      if (newUsedFunds>totalFunds)
                          JOptionPane.showMessageDialog(null, "Exceeded the project Total Funds,"
                                                           +" Used Funds = "+newUsedFunds
                                                           +" Project Planned Total Funds = "+totalFunds);

                     Global.project.getSupplements().getManagement().getConstraint().setUsedFunds(newUsedFunds);

                }
}


//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//****************************************************************************
//                              Save Plan
//****************************************************************************
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

 private void save_deployment()
 {        
            if (this.deployment == null)
                this.deployment = new Deployment();

            // ---------------------------------------------------------------
            if (this.DeplymentTarget_jComboBox.getSelectedIndex() > 0) {
                this.deployment.setTargetIndex(this.DeplymentTarget_jComboBox.getSelectedIndex());}

            try {
             if (!this.Deployment_URL_jTextField.getText().equals(""))
                {
                  this.deployment.setOutcomeURL(new URL(this.Deployment_URL_jTextField.getText()));
                }
             }catch (MalformedURLException ex) {
                    JOptionPane.showMessageDialog(null, "Wrong URL Format... use file:/ for local files!");}

            if (this.Deployment_Description_jTextPane != null && !this.Deployment_Description_jTextPane.getText().equals(""))           
                this.deployment.setDescription(this.Deployment_Description_jTextPane.getText());

            if (this.DeploymentMechanism_jTextPane != null && !this.DeploymentMechanism_jTextPane.getText().equals(""))
                this.deployment.setDeploymentMechanism(this.DeploymentMechanism_jTextPane.getText());
            
            this.deployment.setFinalResults(this.FinalResults_jCheckBox.isSelected());

            this.deployment.setIncludeAllDeliveries(this.IncludeAllDeliveries_jCheckBox.isSelected());

            this.deployment.setIncludeData(this.IncludeData_jCheckBox.isSelected());

                        
        //if (this.deployment!=null && this.deployment.isFinalResults())
            this.deployment.deliverAsMain();
        //else
       //     this.deployment.deliverAsSupplement();
            
            this.refresh_deployment();
            this.populate_deployment();
            
            
            
 }
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//                         Populate Plan Form
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
 private void populate_deployment()
{    
    if ( this.deployment !=null && this.deployment.getDeploymentTarget()!=null)
        this.DeplymentTarget_jComboBox.setSelectedIndex(this.deployment.getDeploymentTarget().ordinal()+1);
    else
        this.DeplymentTarget_jComboBox.setSelectedIndex(0);
    //---------------------------------------------------------------------------
    if ( this.deployment !=null && this.deployment.getOutcomeURL()!=null)
        this.Deployment_URL_jTextField.setText(this.deployment.getOutcomeURL().toString());
    else
        this.Deployment_URL_jTextField.setText("");

    if ( this.deployment !=null && this.deployment.getDescription()!=null)
         this.Deployment_Description_jTextPane.setText(this.deployment.getDescription().toString());
    else
        this.Deployment_Description_jTextPane.setText("");

    if ( this.deployment !=null && this.deployment.getDeploymentMechanism()!=null)
         this.DeploymentMechanism_jTextPane.setText(this.deployment.getDeploymentMechanism().toString());
    else
        this.DeploymentMechanism_jTextPane.setText("");
    //---------------------------------------------------------------------------
    if (this.deployment!=null)
        this.FinalResults_jCheckBox.setSelected(this.deployment.isFinalResults());
    else
        this.FinalResults_jCheckBox.setSelected(false);

    if (this.deployment!=null)
        this.IncludeAllDeliveries_jCheckBox.setSelected(this.deployment.isIncludeAllDeliveries());
    else
        this.IncludeAllDeliveries_jCheckBox.setSelected(false);

    if (this.deployment!=null)
        this.IncludeData_jCheckBox.setSelected(this.deployment.isIncludeData());
    else
       this.IncludeData_jCheckBox.setSelected(false);

    //--------------------------------------------------------------------
    if (Global.project!=null && Global.project.getSupplements()!=null &&
        Global.project.getSupplements().getManagement()!=null &&
        Global.project.getSupplements().getManagement().getConstraint()!=null)
    {
        this.RemainingTime_jTextField.setText(Global.project.getSupplements().getManagement().getConstraint().getRemainingTime()+"");
        this.RemainingFunds_jTextField.setText(Global.project.getSupplements().getManagement().getConstraint().getRemainingFunds()+"");
    }
    
    this.refresh_deployment_details();
    this.populateForm();

}




 //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//****************************************************************************
//                              Refresh
//****************************************************************************
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

 private void refresh_deployment()
 {
//*****************************************************************************
 //*****************************************************************************
Result<Deployment> deploymentResult=new Result<Deployment>();
//*****************************************************************************

if (Global.currentPhase!=null &&
    Global.currentPhase.getResult()!=null)
{
    deploymentResult=Global.currentPhase.getResult();

     if (deploymentResult.getSupplementDeliveries()!=null &&
             deploymentResult.getSupplementDeliveries().getFirst()!=null)
        this.deployment= (Deployment) deploymentResult.getSupplementDeliveries().getFirst();
}

else
 this.deployment=new Deployment();



//*****************************************************************************
if (Global.currentPhase!=null &&
    Global.currentPhase.getResult()!=null &&
    Global.currentPhase.getResult().getSupplementDeliveries()!=null)

    this.deployment= (Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getFirst();

this.populate_deployment();
}

 //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
 //                         Refresh Plan Details
 //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

 private void refresh_deployment_details()
 {
this.Resources_jList.setModel(this.getProjectResourcesModel());
this.Pres_Req_Resources_jList.setModel(this.getDeploymentUsedResourcesModel());
this.Results_jList.setModel(this.getProcessResultsModel());
this.Selected_Results_jList.setModel(this.getSelectedResultsModel()); 
 this.populateForm();
 }

//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                              Delete Plan
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
 private void delete_deployment()
    {

    if (Global.currentPhase != null &&
    Global.currentPhase.getResult()!=null&&
    Global.currentPhase.getResult().getSupplementDeliveries()!=null  &&
    Global.currentPhase.getResult().getSupplementDeliveries().getDeliveriesList().size()>0)
    if (this.deployment!=null)
    {
      int index= Global.currentPhase.getResult().getSupplementDeliveries().getDeliveriesList().indexOf(this.deployment);
          if (Global.currentPhase.getResult().getSupplementDeliveries().delete(this.deployment)>-1);
        {
            if (Global.currentPhase.getResult().getSupplementDeliveries().getDeliveriesList().size()>0)
            {
                if (index==0 && Global.currentPhase.getResult().getSupplementDeliveries().getDelivery(index)!=null)
                    this.deployment = (Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getDelivery(index);
                else if(index>0)
                    this.deployment = (Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getDelivery(index-1);
                /*
                if (this.deployment.isFinalResults() || index==0)
                    this.deployment.deliverAsMain();
                else
                    this.deployment.deliverAsSupplement();
                 *
                 */
                //this.refresh_plan_details();
                this.refresh_deployment_details();
                this.populate_deployment();
            }
            else
            {
                this.deployment.UnDeliver();
                this.clear_deployment();
            }
        }
     this.phase.save();
     //------------------------------------------------------------------------
     // to disable the details if the master is not there
     //------------------------------------------------------------------------
     if (this.phase!=null &&
         this.phase.getPlanning()!=null &&
         this.phase.getPlanning().getPlanList() !=null &&
         this.phase.getPlanning().getPlanList().size()==0)
     {
         this.phase.setPlanning(null);
         this.populateForm();
      }
 }
 }



//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//****************************************************************************
//                     Clear Resource Plan & Resource
//****************************************************************************
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

 private void clear_deployment()
{
this.deployment=null;
clear_deployment_details();
clear_deploymentForm();
 }

 private void clear_deployment_details()
{
this.resource=null;
this.result=null;
this.Resources_jList.setModel(this.getProjectResourcesModel());
this.Pres_Req_Resources_jList.setModel(this.getDeploymentUsedResourcesModel());
this.Results_jList.setModel(this.getProcessResultsModel());
this.Selected_Results_jList.setModel(this.getSelectedResultsModel());
clear_deploymentForm();
 }

 private void clear_deploymentForm()
 {
     this.DeplymentTarget_jComboBox.setSelectedIndex(-1);
    //---------------------------------------------------------------------------
     this.Deployment_URL_jTextField.setText("");
     this.Deployment_Description_jTextPane.setText("");
     this.DeploymentMechanism_jTextPane.setText("");
    //---------------------------------------------------------------------------
      this.FinalResults_jCheckBox.setSelected(false);
      this.IncludeAllDeliveries_jCheckBox.setSelected(false);
      this.IncludeData_jCheckBox.setSelected(false);
    this.populateForm();
 }

//FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
//****************************************************************************
//                            First & Last Plan
//****************************************************************************
//FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

 private void first_deployment()
    {
     if (Global.currentPhase.getResult()!=null && 
         Global.currentPhase.getResult().getSupplementDeliveries()!=null)
     {
         this.save_deployment();
         this.deployment=(Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getFirst();
         //
         this.clear_deployment_details();
         //
         this.refresh_deployment_details();
         //
         this.populate_deployment();
      }

       // this.refresh_Resource(this.thisResource);
 }

 //****************************************************************************
 private void last_deployment()
 {
if (Global.currentPhase.getResult()!=null &&
         Global.currentPhase.getResult().getSupplementDeliveries()!=null)
    {
        this.save_deployment();
        this.deployment=(Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getLast();
        this.clear_deployment_details();
        this.refresh_deployment_details();
        //
        this.populate_deployment();
  }    
 }


//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
//****************************************************************************
//                                Next Plan
//****************************************************************************
//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
 private void next_deployment()
    {
      
            if (this.deployment!=null)
            {
            if (Global.currentPhase.getResult()!=null &&
                Global.currentPhase.getResult().getSupplementDeliveries()!=null &&
                Global.currentPhase.getResult().getSupplementDeliveries().getNext(deployment)!=null
                )
                {
                    this.save_deployment();
                    this.deployment=(Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getNext(this.deployment);
                    this.clear_deployment_details();
                    this.refresh_deployment_details();
                    //
                    this.populate_deployment();
                }
            }      
        //else
            ////System.out.print("No Phase Performing is found ");
    }

//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                     Previous Plan& Resource
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
  private void previous_deployment()
    {

            if (this.deployment!=null)
            {
            if (Global.currentPhase.getResult()!=null &&
                Global.currentPhase.getResult().getSupplementDeliveries()!=null &&
                Global.currentPhase.getResult().getSupplementDeliveries().getPrevious(this.deployment)!=null)
                {
                    this.save_deployment();
                    this.deployment=(Deployment) Global.currentPhase.getResult().getSupplementDeliveries().getPrevious(this.deployment);
                    this.clear_deployment_details();
                    this.refresh_deployment_details();
                    //
                    this.populate_deployment();
                }
            }        
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    if (Global.project == null) 
                        Global.project = new Project();

                    if (Global.project.getProcess() == null) 
                        Global.project.setProcess(new Process());
                     
                    Global.project.getProcess().setVersion(1);

                    if (Global.currentPhase==null)
                            Global.currentPhase=new Phase("ObjectivesDefinition");
                    
                    new DeploymentForm().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(DeploymentForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(DeploymentForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_jButton1;
    private javax.swing.JTextField ConsumedTimeDuration_jTextField;
    private javax.swing.JLabel ConsumedTime_jLabel1;
    private javax.swing.JDesktopPane Control_jDesktopPane;
    private javax.swing.JButton Delete_jButton;
    private javax.swing.JTextPane DeploymentMechanism_jTextPane;
    private javax.swing.JTextPane Deployment_Description_jTextPane;
    private javax.swing.JTextField Deployment_URL_jTextField;
    private javax.swing.JComboBox DeplymentTarget_jComboBox;
    private javax.swing.JCheckBox FinalResults_jCheckBox;
    private javax.swing.JButton First_jButton;
    private javax.swing.JCheckBox IncludeAllDeliveries_jCheckBox;
    private javax.swing.JCheckBox IncludeData_jCheckBox;
    private javax.swing.JDesktopPane Justification_Source_jDesktopPane;
    private javax.swing.JDesktopPane Justification_Sources_Control_jDesktopPane;
    private javax.swing.JButton Last_jButton;
    private javax.swing.JDesktopPane Navigation_jDesktopPane;
    private javax.swing.JButton New_jButton1;
    private javax.swing.JDesktopPane New_jDesktopPane;
    private javax.swing.JButton Next_jButton;
    private javax.swing.JPanel Performed_Plan_jPanel;
    private javax.swing.JTabbedPane Performing_Details_TabbedPane;
    private javax.swing.JDesktopPane Performing_Details_jDesktopPane_jDesktopPane;
    private javax.swing.JLayeredPane Performing_jLayeredPane;
    private javax.swing.JDesktopPane Planning_CustomisedPlan_jDesktopPane;
    private javax.swing.JDesktopPane Planning_Objectives_Control_jDesktopPane1;
    private javax.swing.JLabel Planning_Planner_Name_jLabel12;
    private javax.swing.JLabel Planning_Planner_Name_jLabel14;
    private javax.swing.JLabel Planning_Planner_Name_jLabel15;
    private javax.swing.JDesktopPane Planning_Resource_jDesktopPane;
    private javax.swing.JLabel Prerequisite_Source_ExternalSource_URL_jLabel4;
    private javax.swing.JList Pres_Req_Resources_jList;
    private javax.swing.JButton Presentation_Browse_jButton;
    private javax.swing.JButton Previous_jButton;
    private javax.swing.JLabel Project_Constraint_RemainingDuration_jLabel1;
    private javax.swing.JLabel Project_Constraint_RemainingFunds_jLabel1;
    private javax.swing.JButton Refresh_jButton;
    private javax.swing.JTextField RemainingFunds_jTextField;
    private javax.swing.JTextField RemainingTime_jTextField;
    private javax.swing.JDesktopPane Reporting_Customised_jDesktopPane3;
    private javax.swing.JDesktopPane Reporting_Customised_jDesktopPane4;
    private javax.swing.JDesktopPane Reporting_Customised_jDesktopPane5;
    private javax.swing.JDesktopPane Reporting_Customised_jDesktopPane6;
    private javax.swing.JButton Resource_Edit_jButton;
    private javax.swing.JDesktopPane Resource_jDesktopPane1;
    private javax.swing.JButton Resources_Select_jButton1;
    private javax.swing.JButton Resources_UnSelect_jButton1;
    private javax.swing.JList Resources_jList;
    private javax.swing.JButton Result_Select_jButton;
    private javax.swing.JButton Result_UnSelect_jButton;
    private javax.swing.JButton Results_Edit_jButton;
    private javax.swing.JList Results_jList;
    private javax.swing.JButton Save_jButton;
    private javax.swing.JList Selected_Results_jList;
    private javax.swing.JButton View_jButton;
    private javax.swing.JLayeredPane jLayeredPane39;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables


//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                             Populate
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP

private void populateForm()
{           
 this.repaint();
 this.pack();
 }



//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Planned Resources Deployment
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getDeploymentUsedResourcesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Resource> resourcesList=new ArrayList<Resource>();
  String[] resourcesArrayNames = null;

 if (this.deployment!=null &&
//     this.Deployment.getFeasibility()!=null &&
     this.deployment.getRequirements()!=null)

  {
      if (this.deployment.getRequirements().getResourcesList().size()>0)
      {
        resourcesList=this.deployment.getRequirements().getResourcesList();
        int size=resourcesList.size();
        resourcesArrayNames = new String[size];
        int i=0;
        for (Object o:resourcesList)
            {
              Resource thisResource=(Resource) o;
              String thisResult="";
              
              if (thisResource.getResourceType()!=null)
                  thisResult=thisResource.getResourceType().toString()+"  ";
              
              if (thisResource.getDescription()!=null)
                   thisResult=thisResult+ thisResource.getDescription();
              
              resourcesArrayNames[i]=thisResult;
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resourcesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No selected resource yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No selected resource yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Resources Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getProjectResourcesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Resource> resourcesList=new ArrayList<Resource>();
  String[] resourcesArrayNames = null;
  if (Global.project!=null
          && Global.project.getSupplements()!=null
          && Global.project.getSupplements().getManagement()!=null )
  {
      if (  Global.project.getSupplements().getManagement().getResources()!=null
              && Global.project.getSupplements().getManagement().getResources().getResourcesList().size()>0)
      {
        resourcesList=Global.project.getSupplements().getManagement().getResources().getResourcesList();
        int size=resourcesList.size();
        resourcesArrayNames = new String[size];
        int i=0;
        for (Object o:resourcesList)
            {
              Resource thisResource=(Resource) o;
              String thisResult="";
              if (thisResource.getResourceType()!=null)
                  thisResult=thisResource.getResourceType().toString()+"  ";
              if (thisResource.getDescription()!=null)
                   thisResult=thisResult+ thisResource.getDescription();
              resourcesArrayNames[i]=thisResult;
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resourcesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No resource available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No resource available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Resources Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getProcessResultsModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Result> resultsList=new ArrayList<Result>();
  String[] resultsArrayNames = null;
  if (Global.project!=null
          && Global.project.getProcess()!=null

          && Global.project.getProcess().getResults()!=null )
  {
      if ( Global.project.getProcess().getResults().getResultsList().size()>0)
      {
        resultsList=Global.project.getProcess().getResults().getResultsList();
        int size=resultsList.size();
        resultsArrayNames = new String[size];
        int i=0;
        for (Object o:resultsList)
            {
              Result thisResult=(Result) o;
              if (thisResult!=null && thisResult.getMainDelivery()!=null&&
                  !thisResult.getMainDelivery().getClass().getSimpleName().equals("Deployment") )
                  resultsArrayNames[i]=thisResult.getMainDelivery().toString();

              else
                if (thisResult!=null && thisResult.getSupplementDeliveries()!=null &&
                   thisResult.getSupplementDeliveries().getLast()!=null &&
                   thisResult.getSupplementDeliveries().getLast().toString()!=null&&
                   !thisResult.getSupplementDeliveries().getLast().getClass().getSimpleName().equals("Deployment"))
                     resultsArrayNames[i]=thisResult.getSupplementDeliveries().getLast().toString();
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resultsArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No resource available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No resource available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Resources Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getSelectedResultsModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<Result> resultsList=new ArrayList<Result>();
  String[] resultsArrayNames = null;
  if (this.deployment!=null && this.deployment.getResults()!=null )
  {
      if ( this.deployment.getResults().getResultsList().size()>0)
      {
        resultsList=this.deployment.getResults().getResultsList();
        int size=resultsList.size();
        resultsArrayNames = new String[size];
        int i=0;
       for (Object o:resultsList)
            {
              Result thisResult=(Result) o;
              if (thisResult!=null && thisResult.getMainDelivery()!=null&&
                  !thisResult.getMainDelivery().getClass().getSimpleName().equals("Deployment") )
                  resultsArrayNames[i]=thisResult.getMainDelivery().toString();

              else
                if (thisResult!=null && thisResult.getSupplementDeliveries()!=null &&
                   thisResult.getSupplementDeliveries().getLast()!=null &&
                   thisResult.getSupplementDeliveries().getLast().toString()!=null&&
                   !thisResult.getSupplementDeliveries().getLast().getClass().getSimpleName().equals("Deployment"))
                     resultsArrayNames[i]=thisResult.getSupplementDeliveries().getLast().toString();              
              i=i+1;
             }
        dcm=new DefaultComboBoxModel(resultsArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No resource available yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No resource available yet>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }


}
