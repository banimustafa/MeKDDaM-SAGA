/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * PreRequisiteForm.java
 *
 * Created on 04-Oct-2010, 11:52:33
 */
package gui.form.supplement;
import global.Global;
import gui.form.MainMenu;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import process_model.basic.util.ArrayList;
import process_model.general.Element;
import process_model.issue.tracibility.ExternalSource;
import process_model.issue.tracibility.HumanSource;
import process_model.issue.tracibility.InternalSource;
import process_model.issue.tracibility.Source;
import process_model.issue.tracibility.Sources;
import process_model.supplement.Supplements;
import process_model.supplement.human_interaction.Analyst;
import project.Project;
import toolbox.Tools;
import toolbox.Tree;
//-----------------------------------------------------------------------------
public class SourceForm extends javax.swing.JFrame {

//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
private Source source;
private Object element=null;
int curruntTabIndex=-1;

//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
private String externalSourceArray[]={"","Book", 
                                         "Book Section",
                                         "Conference Proceeding",
                                         "Encyclopedia",
                                         "Journal",
                                         "Lecture",
                                         "Magazine",
                                         "Manual",
                                         "Report",
                                         "Tutorial",
                                         "Website",
                                         "Other"};

private String analystRole[]={"","Biologist",
                                 "Computer Scientist",
                                 "Data Miner",
                                 "Domain Expert",
                                 "Lab Technician",
                                 "Statistician",
                                 "Other"};

private String analystLevel[]={"","Beginner", "Normal", "Professional"};


//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
public SourceForm(Source source) {
  this.setTitle("Project Sources");
  initComponents();
    if (Global.project!=null)
        if (Global.project.getSources()==null)
            Global.project.setSources(new Sources());
  if (source!=null)
  {
      this.source=source;
      this.refresh_Source(source);
  }
 else
     this.refresh_Source();
  this.setVisible(true);
 //---------------------------------------------------------------------
  this.populate_source();
  this.populateForm();
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Prerequisite_jDesktopPane1 = new javax.swing.JDesktopPane();
        Prerequisite_Source_jDesktopPane = new javax.swing.JDesktopPane();
        Source_jTabbedPane = new javax.swing.JTabbedPane();
        ExternalSource_jDesktopPane = new javax.swing.JDesktopPane();
        PreRequisite_ExternalSource_jPanel = new javax.swing.JPanel();
        Performing_Justification_ExternalSource_Description_jScrollPane1 = new javax.swing.JScrollPane();
        Prerequisite_Source_ExternalSource_Description_jTextPane = new javax.swing.JTextPane();
        Prerequisite_Source_ExternalSource_Type_jComboBox = new javax.swing.JComboBox();
        Prerequisite_Source_ExternalSource_Type_jLabel = new javax.swing.JLabel();
        Prerequisite_Source_ExternalSource_URL_jLabel = new javax.swing.JLabel();
        Prerequisite_Source_ExternalSource_URL_jTextField = new javax.swing.JTextField();
        Prerequisite_Source_ExternalSource_Description_jLabel = new javax.swing.JLabel();
        Prerequisite_Source_HumanSource_Control_jDesktopPane1 = new javax.swing.JDesktopPane();
        Prerequisite_Source_ExternalSource_Delete_jButton = new javax.swing.JButton();
        Prerequisite_Source_ExternalSource_Add_jButton = new javax.swing.JButton();
        Prerequisite_Source_ExternalSource_Next_jButton = new javax.swing.JButton();
        Prerequisite_Source_ExternalSource_Previous_jButton = new javax.swing.JButton();
        Prerequisite_Source_ExternalSource_Save_jButton = new javax.swing.JButton();
        Prerequisite_Source_ExternalSource_Refresh_jButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        HumanSource_jDesktopPane = new javax.swing.JDesktopPane();
        PreRequisite_HumanSource_jPanel = new javax.swing.JPanel();
        jScrollPane35 = new javax.swing.JScrollPane();
        Prerequisite_Source_HumanSource_Description_jTextPane = new javax.swing.JTextPane();
        Prerequisite_Source_Description_jLabel2 = new javax.swing.JLabel();
        Prerequisite_Source_HumanSource_Name_jLabel = new javax.swing.JLabel();
        Prerequisite_Source_HumanSource_Name_jTextField = new javax.swing.JTextField();
        Prerequisite_Source_HumanSource_Contacts_jLabel1 = new javax.swing.JLabel();
        Performing_Justification_HumanSource_Contacts_jScrollPane1 = new javax.swing.JScrollPane();
        Prerequisite_Source_HumanSource_Contcats_jTextPane = new javax.swing.JTextPane();
        Prerequisite_Source_HumanSource_Role_jLabel = new javax.swing.JLabel();
        Prerequisite_Source_HumanSource_Role_jComboBox = new javax.swing.JComboBox();
        Prerequisite_Source_HumanSource_Level_jLabel1 = new javax.swing.JLabel();
        Prerequisite_Source_HumanSource_Level_jComboBox = new javax.swing.JComboBox();
        Prerequisite_Source_HumanSource_Control_jDesktopPane = new javax.swing.JDesktopPane();
        Prerequisite_Source_HumanSource_Delete_jButton = new javax.swing.JButton();
        Prerequisite_Source_HumanSource_Add_jButton = new javax.swing.JButton();
        Prerequisite_Source_HumanSource_Next_jButton = new javax.swing.JButton();
        Prerequisite_Source_HumanSource_Previous_jButton = new javax.swing.JButton();
        Prerequisite_Source_HumanSource_Save_jButton = new javax.swing.JButton();
        Prerequisite_Source_HumanSource_Refresh_jButton = new javax.swing.JButton();
        InternalSource_jDesktopPane = new javax.swing.JDesktopPane();
        PreRequisite_InternalSource_jPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InternalSource_Description_jTextPane = new javax.swing.JTextPane();
        Prerequisite_Source_InternalSource_Type_jLabel1 = new javax.swing.JLabel();
        Reason_TracedTo_jButton = new javax.swing.JButton();
        Reason_TraceUndo_jButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InternalSource_jList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        Phase_Save_jMenuItem = new javax.swing.JMenuItem();
        Phase_SaveAs_jMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Phase_Load_jMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        Phase_Close_jMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        Prerequisite_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 204));
        Prerequisite_jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Prerequisite_Source_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Prerequisite_Source_jDesktopPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Source Details ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        Source_jTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Source_jTabbedPaneMouseClicked(evt);
            }
        });
        Source_jTabbedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Source_jTabbedPaneFocusGained(evt);
            }
        });

        ExternalSource_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        ExternalSource_jDesktopPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ExternalSource_jDesktopPaneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ExternalSource_jDesktopPaneFocusLost(evt);
            }
        });

        PreRequisite_ExternalSource_jPanel.setBackground(new java.awt.Color(255, 255, 153));
        PreRequisite_ExternalSource_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Performing_Justification_ExternalSource_Description_jScrollPane1.setViewportView(Prerequisite_Source_ExternalSource_Description_jTextPane);

        Prerequisite_Source_ExternalSource_Type_jComboBox.setMaximumRowCount(14);
        Prerequisite_Source_ExternalSource_Type_jComboBox.setModel(new DefaultComboBoxModel(this.externalSourceArray));
        Prerequisite_Source_ExternalSource_Type_jComboBox.setSelectedItem("");

        Prerequisite_Source_ExternalSource_Type_jLabel.setText("Type");

        Prerequisite_Source_ExternalSource_URL_jLabel.setText("URL");

        Prerequisite_Source_ExternalSource_Description_jLabel.setText("Description");

        Prerequisite_Source_HumanSource_Control_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 153));
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Prerequisite_Source_ExternalSource_Delete_jButton.setText("Delete -");
        Prerequisite_Source_ExternalSource_Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Delete_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Delete_jButton.setBounds(510, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Delete_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_ExternalSource_Add_jButton.setText("Add +");
        Prerequisite_Source_ExternalSource_Add_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Add_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Add_jButton.setBounds(410, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Add_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_ExternalSource_Next_jButton.setText("Next >");
        Prerequisite_Source_ExternalSource_Next_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Next_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Next_jButton.setBounds(110, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Next_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_ExternalSource_Previous_jButton.setText("< Previous");
        Prerequisite_Source_ExternalSource_Previous_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Previous_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Previous_jButton.setBounds(10, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Previous_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_ExternalSource_Save_jButton.setText("Save");
        Prerequisite_Source_ExternalSource_Save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Save_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Save_jButton.setBounds(320, 10, 90, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Save_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_ExternalSource_Refresh_jButton.setText("Refresh");
        Prerequisite_Source_ExternalSource_Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_ExternalSource_Refresh_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_ExternalSource_Refresh_jButton.setBounds(220, 10, 90, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane1.add(Prerequisite_Source_ExternalSource_Refresh_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PreRequisite_ExternalSource_jPanelLayout = new javax.swing.GroupLayout(PreRequisite_ExternalSource_jPanel);
        PreRequisite_ExternalSource_jPanel.setLayout(PreRequisite_ExternalSource_jPanelLayout);
        PreRequisite_ExternalSource_jPanelLayout.setHorizontalGroup(
            PreRequisite_ExternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreRequisite_ExternalSource_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PreRequisite_ExternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Prerequisite_Source_HumanSource_Control_jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                    .addComponent(Performing_Justification_ExternalSource_Description_jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                    .addGroup(PreRequisite_ExternalSource_jPanelLayout.createSequentialGroup()
                        .addComponent(Prerequisite_Source_ExternalSource_URL_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Prerequisite_Source_ExternalSource_URL_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PreRequisite_ExternalSource_jPanelLayout.createSequentialGroup()
                        .addComponent(Prerequisite_Source_ExternalSource_Type_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Prerequisite_Source_ExternalSource_Type_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Prerequisite_Source_ExternalSource_Description_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        PreRequisite_ExternalSource_jPanelLayout.setVerticalGroup(
            PreRequisite_ExternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreRequisite_ExternalSource_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Prerequisite_Source_ExternalSource_Description_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Performing_Justification_ExternalSource_Description_jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PreRequisite_ExternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Prerequisite_Source_ExternalSource_Type_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Prerequisite_Source_ExternalSource_Type_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(PreRequisite_ExternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prerequisite_Source_ExternalSource_URL_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Prerequisite_Source_ExternalSource_URL_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(Prerequisite_Source_HumanSource_Control_jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PreRequisite_ExternalSource_jPanel.setBounds(10, 10, 670, 310);
        ExternalSource_jDesktopPane.add(PreRequisite_ExternalSource_jPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Source_jTabbedPane.addTab("External Source", ExternalSource_jDesktopPane);

        HumanSource_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        HumanSource_jDesktopPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                HumanSource_jDesktopPaneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                HumanSource_jDesktopPaneFocusLost(evt);
            }
        });

        PreRequisite_HumanSource_jPanel.setBackground(new java.awt.Color(255, 255, 153));
        PreRequisite_HumanSource_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PreRequisite_HumanSource_jPanel.setLayout(null);

        jScrollPane35.setViewportView(Prerequisite_Source_HumanSource_Description_jTextPane);

        PreRequisite_HumanSource_jPanel.add(jScrollPane35);
        jScrollPane35.setBounds(12, 33, 620, 91);

        Prerequisite_Source_Description_jLabel2.setText("Description");
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_Description_jLabel2);
        Prerequisite_Source_Description_jLabel2.setBounds(12, 13, 70, 16);

        Prerequisite_Source_HumanSource_Name_jLabel.setText("Name");
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Name_jLabel);
        Prerequisite_Source_HumanSource_Name_jLabel.setBounds(12, 150, 60, 20);
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Name_jTextField);
        Prerequisite_Source_HumanSource_Name_jTextField.setBounds(76, 150, 255, 22);

        Prerequisite_Source_HumanSource_Contacts_jLabel1.setText("Contact");
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Contacts_jLabel1);
        Prerequisite_Source_HumanSource_Contacts_jLabel1.setBounds(12, 188, 50, 16);

        Performing_Justification_HumanSource_Contacts_jScrollPane1.setViewportView(Prerequisite_Source_HumanSource_Contcats_jTextPane);

        PreRequisite_HumanSource_jPanel.add(Performing_Justification_HumanSource_Contacts_jScrollPane1);
        Performing_Justification_HumanSource_Contacts_jScrollPane1.setBounds(76, 188, 250, 43);

        Prerequisite_Source_HumanSource_Role_jLabel.setText("Role");
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Role_jLabel);
        Prerequisite_Source_HumanSource_Role_jLabel.setBounds(349, 150, 40, 20);

        Prerequisite_Source_HumanSource_Role_jComboBox.setMaximumRowCount(9);
        Prerequisite_Source_HumanSource_Role_jComboBox.setModel(new DefaultComboBoxModel(this.analystRole));
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Role_jComboBox);
        Prerequisite_Source_HumanSource_Role_jComboBox.setBounds(399, 150, 233, 22);

        Prerequisite_Source_HumanSource_Level_jLabel1.setText("Level");
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Level_jLabel1);
        Prerequisite_Source_HumanSource_Level_jLabel1.setBounds(349, 180, 50, 20);

        Prerequisite_Source_HumanSource_Level_jComboBox.setMaximumRowCount(5);
        Prerequisite_Source_HumanSource_Level_jComboBox.setModel(new DefaultComboBoxModel(this.analystLevel));
        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Level_jComboBox);
        Prerequisite_Source_HumanSource_Level_jComboBox.setBounds(403, 180, 229, 22);

        Prerequisite_Source_HumanSource_Control_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Prerequisite_Source_HumanSource_Control_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Prerequisite_Source_HumanSource_Delete_jButton.setText("Delete -");
        Prerequisite_Source_HumanSource_Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Delete_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Delete_jButton.setBounds(510, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Delete_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_HumanSource_Add_jButton.setText("Add +");
        Prerequisite_Source_HumanSource_Add_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Add_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Add_jButton.setBounds(410, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Add_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_HumanSource_Next_jButton.setText("Next >");
        Prerequisite_Source_HumanSource_Next_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Next_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Next_jButton.setBounds(110, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Next_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_HumanSource_Previous_jButton.setText("< Previous");
        Prerequisite_Source_HumanSource_Previous_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Previous_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Previous_jButton.setBounds(10, 10, 100, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Previous_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_HumanSource_Save_jButton.setText("Save");
        Prerequisite_Source_HumanSource_Save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Save_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Save_jButton.setBounds(320, 10, 90, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Save_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_HumanSource_Refresh_jButton.setText("Refresh");
        Prerequisite_Source_HumanSource_Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prerequisite_Source_HumanSource_Refresh_jButtonActionPerformed(evt);
            }
        });
        Prerequisite_Source_HumanSource_Refresh_jButton.setBounds(220, 10, 90, 25);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.add(Prerequisite_Source_HumanSource_Refresh_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PreRequisite_HumanSource_jPanel.add(Prerequisite_Source_HumanSource_Control_jDesktopPane);
        Prerequisite_Source_HumanSource_Control_jDesktopPane.setBounds(12, 247, 620, 50);

        PreRequisite_HumanSource_jPanel.setBounds(10, 10, 670, 310);
        HumanSource_jDesktopPane.add(PreRequisite_HumanSource_jPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Source_jTabbedPane.addTab("Human Source", HumanSource_jDesktopPane);

        InternalSource_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        InternalSource_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        InternalSource_jDesktopPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InternalSource_jDesktopPaneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InternalSource_jDesktopPaneFocusLost(evt);
            }
        });

        PreRequisite_InternalSource_jPanel.setBackground(new java.awt.Color(255, 255, 153));
        PreRequisite_InternalSource_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setViewportView(InternalSource_Description_jTextPane);

        Prerequisite_Source_InternalSource_Type_jLabel1.setText("Seletd Element ");

        Reason_TracedTo_jButton.setText("Add + >");
        Reason_TracedTo_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reason_TracedTo_jButtonActionPerformed(evt);
            }
        });

        Reason_TraceUndo_jButton.setText("Delete");
        Reason_TraceUndo_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reason_TraceUndo_jButtonActionPerformed(evt);
            }
        });

        InternalSource_jList.setBorder(javax.swing.BorderFactory.createTitledBorder("Source"));
        InternalSource_jList.setModel(this.getSelectedInternalSourcesModel());
        InternalSource_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        InternalSource_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                InternalSource_jListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(InternalSource_jList);

        javax.swing.GroupLayout PreRequisite_InternalSource_jPanelLayout = new javax.swing.GroupLayout(PreRequisite_InternalSource_jPanel);
        PreRequisite_InternalSource_jPanel.setLayout(PreRequisite_InternalSource_jPanelLayout);
        PreRequisite_InternalSource_jPanelLayout.setHorizontalGroup(
            PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreRequisite_InternalSource_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Reason_TracedTo_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reason_TraceUndo_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Prerequisite_Source_InternalSource_Type_jLabel1))
                .addGap(18, 18, 18)
                .addGroup(PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        PreRequisite_InternalSource_jPanelLayout.setVerticalGroup(
            PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreRequisite_InternalSource_jPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PreRequisite_InternalSource_jPanelLayout.createSequentialGroup()
                        .addComponent(Reason_TracedTo_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Reason_TraceUndo_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(PreRequisite_InternalSource_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(Prerequisite_Source_InternalSource_Type_jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        PreRequisite_InternalSource_jPanel.setBounds(10, 10, 660, 300);
        InternalSource_jDesktopPane.add(PreRequisite_InternalSource_jPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Source_jTabbedPane.addTab("Internal Source", InternalSource_jDesktopPane);

        Source_jTabbedPane.setBounds(10, 20, 700, 360);
        Prerequisite_Source_jDesktopPane.add(Source_jTabbedPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.setBounds(0, 390, 720, 50);
        Prerequisite_Source_jDesktopPane.add(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Prerequisite_Source_jDesktopPane.setBounds(10, 10, 720, 390);
        Prerequisite_jDesktopPane1.add(Prerequisite_Source_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu3.setText("File");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenu3.add(jSeparator3);

        Phase_Save_jMenuItem.setText("Save");
        Phase_Save_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_Save_jMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(Phase_Save_jMenuItem);

        Phase_SaveAs_jMenuItem.setText("Sava As");
        Phase_SaveAs_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_SaveAs_jMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(Phase_SaveAs_jMenuItem);
        jMenu3.add(jSeparator1);

        Phase_Load_jMenuItem.setText("Load ");
        Phase_Load_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_Load_jMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(Phase_Load_jMenuItem);
        jMenu3.add(jSeparator2);

        menuBar.add(jMenu3);

        jMenu1.setText("Exit");

        Phase_Close_jMenuItem.setText("Close");
        Phase_Close_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phase_Close_jMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(Phase_Close_jMenuItem);

        menuBar.add(jMenu1);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Prerequisite_jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Prerequisite_jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Prerequisite_Source_HumanSource_Add_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Add_jButtonActionPerformed
            this.save_source(new HumanSource());
            this.clear_source();                  

    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Add_jButtonActionPerformed

    private void Prerequisite_Source_HumanSource_Save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Save_jButtonActionPerformed
    this.save_source(new HumanSource());
    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Save_jButtonActionPerformed

    private void Prerequisite_Source_HumanSource_Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Delete_jButtonActionPerformed
       
            this.delete_source();
    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Delete_jButtonActionPerformed

    private void Prerequisite_Source_HumanSource_Previous_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Previous_jButtonActionPerformed
        this.previous_source();

    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Previous_jButtonActionPerformed

    private void Prerequisite_Source_HumanSource_Next_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Next_jButtonActionPerformed
    this.next_source();
    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Next_jButtonActionPerformed

    private void Prerequisite_Source_HumanSource_Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_HumanSource_Refresh_jButtonActionPerformed
    this.refresh_Source(new HumanSource());
    }//GEN-LAST:event_Prerequisite_Source_HumanSource_Refresh_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Delete_jButtonActionPerformed
   this.delete_source();
    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Delete_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Add_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Add_jButtonActionPerformed
    this.save_source(new ExternalSource());
    this.clear_source();
    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Add_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Next_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Next_jButtonActionPerformed
    this.next_source();
    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Next_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Previous_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Previous_jButtonActionPerformed
    this.previous_source();
    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Previous_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Save_jButtonActionPerformed
     this.save_source(new ExternalSource());

    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Save_jButtonActionPerformed

    private void Prerequisite_Source_ExternalSource_Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prerequisite_Source_ExternalSource_Refresh_jButtonActionPerformed
      this.refresh_Source(new ExternalSource());
    }//GEN-LAST:event_Prerequisite_Source_ExternalSource_Refresh_jButtonActionPerformed

    private void InternalSource_jDesktopPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InternalSource_jDesktopPaneFocusGained
  if (Tree.getSelectedObject()!=null)
    {
        Object selectedObject=new Object();
        selectedObject=Tree.getSelectedObject();
        //
        String treePath=new String();
        treePath=Tree.getSelectedPathString();
        //
        Object tracedElement= new Object();
        tracedElement=treePath+selectedObject;

        InternalSource selectedSource= new InternalSource();
//        selectedSource.setSourceElement(tracedElement.toString());
          selectedSource.setSourceElementString(tracedElement.getClass().getSimpleName());        
        this.source=selectedSource;

        if (Global.project!=null && Global.project.getSources()==null)
           Global.project.setSources(new Sources());

        if (Global.project!=null && Global.project.getSources()!=null)
            Global.project.getSources().save(selectedSource);
        
        Tree.clearSelectedObject();
    }
 else
   this.refresh_Source(new InternalSource());

   this.InternalSource_jList.setModel(this.getSelectedInternalSourcesModel());
    if (this.source!=null && this.source.getClass().getSimpleName().equals("InternalSource"))
    {
        InternalSource internalSource= new InternalSource();
        internalSource=(InternalSource) this.source;
        InternalSource_Description_jTextPane.setText(internalSource.getSourceElementPath());
    }
 else
    InternalSource_Description_jTextPane.setText("Nothing Seleected");

    }//GEN-LAST:event_InternalSource_jDesktopPaneFocusGained

    private void ExternalSource_jDesktopPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExternalSource_jDesktopPaneFocusGained
    this.refresh_Source(new ExternalSource());
    }//GEN-LAST:event_ExternalSource_jDesktopPaneFocusGained

    private void HumanSource_jDesktopPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HumanSource_jDesktopPaneFocusGained
    this.refresh_Source(new HumanSource());
    }//GEN-LAST:event_HumanSource_jDesktopPaneFocusGained

    private void Source_jTabbedPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Source_jTabbedPaneFocusGained

    if (this.source!=null)
            this.save_source(source);

    //abm: 14-05-2011
    this.refresh_Source();

    //abm: 14-05-2011
    this.populate_source();

    }//GEN-LAST:event_Source_jTabbedPaneFocusGained

    private void Source_jTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Source_jTabbedPaneMouseClicked

    if (curruntTabIndex!=this.Source_jTabbedPane.getSelectedIndex())
    {
        if (this.source!=null)
                this.save_source(source);

        //abm: 14-05-2011
        this.refresh_Source();

        //abm: 14-05-2011
        this.populate_source();
    }
    curruntTabIndex=this.Source_jTabbedPane.getSelectedIndex();

    }//GEN-LAST:event_Source_jTabbedPaneMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
if (Tree.getSelectedObject()!=null)
    {
        Object selectedObject=new Object();
        selectedObject=Tree.getSelectedObject();
        //
       if (
           selectedObject.toString().equals("[Project]")||
           selectedObject.toString().equals("[Process]")||               
           selectedObject.toString().equals("[Inputs]")||               
           selectedObject.toString().equals("[Phases]")||               
           selectedObject.toString().equals("[Metabolomics Data]")||               
           selectedObject.toString().equals("[Objectives Definition]")||               
           selectedObject.toString().equals("[Data Pre-Processing]")||               

           selectedObject.toString().equals("[Data Exploration]")||               
           selectedObject.toString().equals("[Technique Selection]")||               
           selectedObject.toString().equals("[Data Acclimatisation]")||               

           selectedObject.toString().equals("[Model Building]")||               
           selectedObject.toString().equals("[Model Evaluation]")||               
           selectedObject.toString().equals("[Knowledge Presentation]")||               

           selectedObject.toString().equals("[Knowledge Evaluation]")||               
           selectedObject.toString().equals("[Process Evaluation]")||
           selectedObject.toString().equals("[Deployment]")                                                        
           )                       
                JOptionPane.showMessageDialog(null, ""+ selectedObject+"\n is not a valid selection \n You have to select a tree leafe");
        
       else
       {
        String treePath=new String();
        treePath=Tree.getSelectedPathString();
        //
        String tracedElement= null;
        tracedElement=treePath+selectedObject;
                
            InternalSource selectedSource= new InternalSource();
            //selectedSource.setSourceElement(selectedObject);
            selectedSource.setSourceElementString(selectedObject.getClass().getSimpleName()); 
            selectedSource.setSourceElementPath(tracedElement);
            this.source=selectedSource;

        if (Global.project!=null && Global.project.getSources()==null)
           Global.project.setSources(new Sources());

        if (Global.project!=null && Global.project.getSources()!=null)
            Global.project.getSources().save(selectedSource);
        }
        Tree.clearSelectedObject();        
    }

// abm: 14-05-2011
 //  this.refresh_Source(new InternalSource());
   //this.populate_source(); 

this.InternalSource_jList.setModel(this.getSelectedInternalSourcesModel());
    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
    this.save_source(source);
    }//GEN-LAST:event_formWindowDeactivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    File path = Tools.chooseFile("Select External source Document", null, null, false);

        if (path != null)
            this.Prerequisite_Source_ExternalSource_URL_jTextField.setText("file:/"+path.getAbsolutePath());
        else
            this.Prerequisite_Source_ExternalSource_URL_jTextField.setText(null);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Reason_TracedTo_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reason_TracedTo_jButtonActionPerformed
        Tree.create_tree("Tasks");   
}//GEN-LAST:event_Reason_TracedTo_jButtonActionPerformed

    private void Reason_TraceUndo_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reason_TraceUndo_jButtonActionPerformed
        
            if (Global.project!=null && Global.project.getSources()!=null)
                Global.project.getSources().delete(this.source);

            this.InternalSource_jList.setModel(this.getSelectedInternalSourcesModel());

}//GEN-LAST:event_Reason_TraceUndo_jButtonActionPerformed

    private void InternalSource_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_InternalSource_jListValueChanged
  if (Global.project!=null && Global.project.getSources()!=null)

      if ( Global.project.getSources().getInternalSourceList().size()>0
              && this.InternalSource_jList.getSelectedIndex()>=0)
      {
          this.source= (Source) Global.project.getSources().getInternalSourceList().get(this.InternalSource_jList.getSelectedIndex());

          InternalSource internalSource= new InternalSource();
          internalSource=(InternalSource) this.source;        
          InternalSource_Description_jTextPane.setText(internalSource.getSourceElementPath());          
      }
    }//GEN-LAST:event_InternalSource_jListValueChanged

    private void ExternalSource_jDesktopPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExternalSource_jDesktopPaneFocusLost
    this.save_source(new ExternalSource());
        
    }//GEN-LAST:event_ExternalSource_jDesktopPaneFocusLost

    private void HumanSource_jDesktopPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HumanSource_jDesktopPaneFocusLost
    this.save_source(new HumanSource());
        
    }//GEN-LAST:event_HumanSource_jDesktopPaneFocusLost

    private void InternalSource_jDesktopPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InternalSource_jDesktopPaneFocusLost
    this.save_source(new InternalSource());
    }//GEN-LAST:event_InternalSource_jDesktopPaneFocusLost

    private void Phase_Load_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Load_jMenuItemActionPerformed

       Sources sources= new Sources().open();
        if (sources!=null)
        {
            Global.project.setSources(sources);            
        }
        //
        this.refresh_Source();
        this.populate_source();
}//GEN-LAST:event_Phase_Load_jMenuItemActionPerformed

    private void Phase_Save_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Save_jMenuItemActionPerformed
        this.save_source(source);
}//GEN-LAST:event_Phase_Save_jMenuItemActionPerformed

    private void Phase_SaveAs_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_SaveAs_jMenuItemActionPerformed
     if (Global.project !=null && Global.project.getSources()!=null)
    {
        File selectedFile =Tools.chooseFile("Choose Location", null, Global.project.getLocation(), true);
        String selectedFileString = (selectedFile != null) ? selectedFile.getPath() : null;
        if (selectedFileString!=null)
            Global.project.getSources().store(selectedFileString);
    }
}//GEN-LAST:event_Phase_SaveAs_jMenuItemActionPerformed

    private void Phase_Close_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phase_Close_jMenuItemActionPerformed
        this.save_source(source);
        this.dispose();
}//GEN-LAST:event_Phase_Close_jMenuItemActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jMenu3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
this.save_source(source);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
System.gc();
    }//GEN-LAST:event_formWindowClosed

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//                       Get Project Resources Model
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
public  DefaultComboBoxModel getSelectedInternalSourcesModel()
{
  DefaultComboBoxModel dcm=null;
  ArrayList<InternalSource> selectedSourcesList=new ArrayList<InternalSource>();
  String[] sourcesArrayNames = null;
  if (Global.project!=null && Global.project.getSources()!=null)
  {
      if ( Global.project.getSources().getInternalSourceList().size()>0)
      {
        selectedSourcesList=Global.project.getSources().getInternalSourceList();
        int size=selectedSourcesList.size();
        sourcesArrayNames = new String[size];
        int i=0;
        for (Object o:selectedSourcesList)
            {
              //--------------------------------------------------------------
              InternalSource thisSource=(InternalSource) o;
              String result="";
              if (thisSource.getSourceType()!=null)
                  result=thisSource.getSourceElementPath();
              //--------------------------------------------------------------
              sourcesArrayNames[i]=result;
              i=i+1;
              //--------------------------------------------------------------
             }
        dcm=new DefaultComboBoxModel(sourcesArrayNames);
        return dcm;
        }
     else
      {
        String names[] ={"<No evidences selected yet>"};
        dcm=new DefaultComboBoxModel(names);
        return dcm;
      }
  }
 else
    {
    String names[] ={"<No resources are available>"};
    dcm=new DefaultComboBoxModel(names);
     return dcm;
    }
 }



//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//****************************************************************************
//                              Save Source
//****************************************************************************
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

 private void save_source(Source savedSource)
{
 //---------------------------------------------------------------------------
    if (savedSource!=null && savedSource.getClass().getSimpleName().equals("ExternalSource"))
    {
    boolean flag=false;
    ExternalSource externalSource=null;
    // in the case that source is of other of sources
    if (this.source!=null && this.source.getClass().getSimpleName().equals("ExternalSource"))
        externalSource=(ExternalSource) this.source;
     else
        externalSource=new ExternalSource();

    if(this.Prerequisite_Source_ExternalSource_Description_jTextPane.getText()!=null)
    {
        externalSource.setDescription(this.Prerequisite_Source_ExternalSource_Description_jTextPane.getText());
        flag=true;
     }

    if(this.Prerequisite_Source_ExternalSource_URL_jTextField.getText()!=null &&
        !this.Prerequisite_Source_ExternalSource_URL_jTextField.getText().equals(""))
    {
       try {
            externalSource.setUrl(new URL(Prerequisite_Source_ExternalSource_URL_jTextField.getText()));
           } catch (MalformedURLException ex) {
               
            Logger.getLogger(SourceForm.class.getName()).log(Level.SEVERE, null, ex);
           }
         flag=true;
    }

    int index=this.Prerequisite_Source_ExternalSource_Type_jComboBox.getSelectedIndex();
    if (index>0)
    {
       externalSource.setType(index);
       flag=true;
    }

    if (flag)
        this.source=externalSource;

    externalSource=null; //reset pointers
    }
    //-------------------------------------------------------------------------
    else if(savedSource!=null && savedSource.getClass().getSimpleName().equals("InternalSource"))
    {
    boolean flag=false;

    InternalSource internalSource=null;
    if (this.source!=null && this.source.getClass().getSimpleName().equals("InternalSource"))
       internalSource=(InternalSource) this.source;
     else
        internalSource=new InternalSource();
    
    if (element!=null)
    {
        internalSource.setSourceElementPath(element.getClass().getSimpleName());        
        flag=true;
     }
    //
    if (flag)
        this.source=internalSource;
    //
    internalSource=null; //recet pointers
    element=null;    
    }
    //-------------------------------------------------------------------------
    else if( savedSource!=null && savedSource.getClass().getSimpleName().equals("HumanSource"))
    {
   boolean flag=false;
   HumanSource humanSource=null;

    if (this.source!=null && this.source.getClass().getSimpleName().equals("HumanSource"))
        humanSource=(HumanSource) this.source;
    else
        humanSource=new HumanSource();

    if (humanSource.getHumanSource()==null)
        {
           Analyst analyst=new Analyst();
           humanSource.setHumanSources(analyst);
        }

    Analyst humanAnalyst=humanSource.getHumanSource();
    if(this.Prerequisite_Source_HumanSource_Description_jTextPane.getText()!=null)
    {
        humanSource.setDescription(this.Prerequisite_Source_HumanSource_Description_jTextPane.getText());
        flag=true;
     }

    if(this.Prerequisite_Source_HumanSource_Name_jTextField.getText()!=null)
    {
        humanAnalyst.setName( this.Prerequisite_Source_HumanSource_Name_jTextField.getText());
        flag=true;
     }

    if(this.Prerequisite_Source_HumanSource_Contcats_jTextPane.getText()!=null)
    {
        humanAnalyst.setContactDetails(this.Prerequisite_Source_HumanSource_Contcats_jTextPane .getText());
        flag=true;
     }
    //
    int selectedRoleIndex=this.Prerequisite_Source_HumanSource_Role_jComboBox.getSelectedIndex();
    if (selectedRoleIndex>=0)
    {
        humanAnalyst.setRole(selectedRoleIndex);
        flag=true;
     }
    //
    int selectedLevelIndex=this.Prerequisite_Source_HumanSource_Level_jComboBox.getSelectedIndex();
    if (selectedLevelIndex>=0)
    {
        humanAnalyst.setLevel(selectedLevelIndex);
        flag=true;
     }
    //
    if (flag)
    {
        humanSource.setHumanSources(humanAnalyst);
        this.source=humanSource;
    }
    //
    humanAnalyst=null; //recet pointers
    humanSource=null; //recet pointers    
    }  

 //----------------------------------------------------------------------------
  if (Global.project!=null)
   {
        if (Global.project.getSources()==null)
            Global.project.setSources(new Sources());

     Global.project.getSources().save(this.source);
     Global.project.getSources().store(null);
     }      
}

 //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
 //                         Refresh Source
 //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
 private void refresh_Source(Source refreshedSource)
 {   
    if (Global.project!=null)
    {
        if (Global.project.getSources()!=null)
        {            
           if (refreshedSource!=null)
               this.source =  Global.project.getSources().getFirst(refreshedSource);

           else if(this.source != null)
                   this.source =  Global.project.getSources().getFirst(this.source);
           
           else if (this.HumanSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==1)
               this.source=Global.project.getSources().getFirst(new HumanSource());

           else if (this.InternalSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==2)
                    this.source=Global.project.getSources().getFirst(new InternalSource());

           else if (this.ExternalSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==0)
                    this.source=Global.project.getSources().getFirst(new ExternalSource());
               else
                   this.source=Global.project.getSources().getFirst(new ExternalSource());
           //------------------------------------------------------------------
            
           //abm: 14-05-2011
            this.refresh_Source();

            this.populate_source();
        }        
   }   
}

  //RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
 private void refresh_Source()
 {
   //this.clear_source();
    if (Global.project!=null)
    {
        if (Global.project.getSources()!=null)
        {
               if (this.HumanSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==1)
                   this.source=Global.project.getSources().getFirst(new HumanSource());

               else if (this.InternalSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==2)
                   this.source=Global.project.getSources().getFirst(new InternalSource());

               else if (this.ExternalSource_jDesktopPane.isShowing()||this.Source_jTabbedPane.getSelectedIndex()==0)
                   this.source=Global.project.getSources().getFirst(new ExternalSource());
               else
                   this.source=Global.project.getSources().getFirst(new ExternalSource());
           //------------------------------------------------------------------
            this.populate_source();
        }        
   }   
}

 // Delete Source
//******************************************************************************
 private void delete_source()
    {

   if (Global.project!=null && Global.project.getSources()!=null)
    {
     Source sourceToBeDeleted=this.source;     
     Source predecessorSource=Global.project.getSources().getPrevious(sourceToBeDeleted);
     //its predecessor befor it is deleted
     int index= Global.project.getSources().delete(sourceToBeDeleted);
     //

      if (index>0)      
          this.source=predecessorSource;
      else if (index==0)
      {
        // it's successor after it is been deleted (you cannot move it's places to before deletion)
        Source successorSource=Global.project.getSources().getNext(sourceToBeDeleted);
        if(successorSource !=null)           
            this.source=successorSource;
        else       
           this.source=null;                
      }      
     }    

this.populate_source();

if (this.source!=null)
    this.save_source(this.source);

 }


//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
//                          Next Source
//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
 private void next_source()
    {
       if(Global.project!=null &&
          Global.project.getSources()!=null &&
          this.source!=null &&
          Global.project.getSources().getNext(this.source)!=null)
          {                
                    this.save_source(this.source);
                    this.source = Global.project.getSources().getNext(this.source);                    
          }
       this.populate_source();
  }


 //PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
 //                           Previous Source
 //PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
 private void previous_source()
    {
       if(Global.project!=null &&
          Global.project.getSources()!=null &&
          this.source!=null &&
          Global.project.getSources().getPrevious(this.source)!=null)
          {
                    this.save_source(this.source);
                    this.source = Global.project.getSources().getPrevious(this.source);
          }
       this.populate_source();
  }

 /*
 private void previous_source()
    {
       if(Global.project!=null&&Global.project.getSources()!=null)
           {
              Source pSource=Global.project.getSources().getPrevious(this.source);
              if (pSource!=null)
              {
                    this.save_source(pSource);
                    this.clear_sourceForm();
                    this.source = pSource;
                    this.populate_source();
              }
             }            
 }
 */

 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 //                              Clear Source
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 private void clear_source( )
{     
     this.source=null;
     this.clear_sourceForm();
 }

 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 //                             Clear Source Form
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 private void clear_sourceForm( )
{
     this.Prerequisite_Source_HumanSource_Description_jTextPane.setText("");
     this.Prerequisite_Source_HumanSource_Name_jTextField.setText("");
     this.Prerequisite_Source_HumanSource_Contcats_jTextPane.setText("");
     //
     this.Prerequisite_Source_HumanSource_Role_jComboBox.setSelectedIndex(0);
     this.Prerequisite_Source_HumanSource_Level_jComboBox.setSelectedIndex(0);
      //
     this.Prerequisite_Source_ExternalSource_Description_jTextPane.setText("");
     this.Prerequisite_Source_ExternalSource_URL_jTextField.setText("");
     this.Prerequisite_Source_ExternalSource_Type_jComboBox.setSelectedIndex(0);
      //
//     this.Prerequisite_Source_InternalSource_Description_jTextPane.setText("");
 }


//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                             Populate
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP

private void populateForm()
{
    if (Global.project!=null && Global.project.getSources()!=null)
        this.setTitle("PrePequisites for:        "+
        Global.project.getSources().getClass().getSimpleName());
    //-----------------------------------------------------------------------
    this.repaint();
    this.pack();
 }

//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//                         Populate Source Form
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
 private void populate_source()
 {
     this.clear_sourceForm();
     //
     if (this.source!=null)
     {
     //-----------------------------------------------------------------------
     if (this.source.getClass().getSimpleName().equals("InternalSource"))
      {
          InternalSource internalSource=(InternalSource) this.source;          
       }
     //------------------------------------------------------------------------
     else if (this.source.getClass().getSimpleName().equals("ExternalSource"))
      {
          ExternalSource externalSource=(ExternalSource) this.source;          

          if (externalSource.getDescription()!=null)
            this.Prerequisite_Source_ExternalSource_Description_jTextPane.
                    setText(externalSource.getDescription());
          else
            this.Prerequisite_Source_ExternalSource_Description_jTextPane.setText("");

          if (externalSource.getUrl()!=null)
            this.Prerequisite_Source_ExternalSource_URL_jTextField.setText(
                    externalSource.getUrl().toString());
           else
               this.Prerequisite_Source_ExternalSource_URL_jTextField.setText("");

          if (externalSource.getType()!=null)
          this.Prerequisite_Source_ExternalSource_Type_jComboBox.
                  setSelectedIndex(externalSource.getType().ordinal()+1);
      }
    //------------------------------------------------------------------------
    else if (this.source.getClass().getSimpleName().equals("HumanSource"))
     {         
         HumanSource humanSource=(HumanSource)  this.source;

          if (humanSource.getDescription()!=null)
            Prerequisite_Source_HumanSource_Description_jTextPane.
                    setText(humanSource.getDescription());
          else
            Prerequisite_Source_HumanSource_Description_jTextPane.setText("");
         //
          if (humanSource.getHumanSource().getName()!=null)
            Prerequisite_Source_HumanSource_Name_jTextField.
                    setText(humanSource.getHumanSource().getName());
          else
            Prerequisite_Source_HumanSource_Name_jTextField.setText("");

          if (humanSource.getHumanSource().getContactDetails()!=null)
            Prerequisite_Source_HumanSource_Contcats_jTextPane.
                    setText(humanSource.getHumanSource().getContactDetails());
          else
            Prerequisite_Source_HumanSource_Contcats_jTextPane.setText("");
         //
         if (humanSource!=null && humanSource.getHumanSource()!=null &&
             humanSource.getHumanSource().getRole()!=null)
         {
            int index=humanSource.getHumanSource().getRole().ordinal()+1;
            Prerequisite_Source_HumanSource_Role_jComboBox.setSelectedIndex(index);
         }

         //
         if (humanSource!=null && humanSource.getHumanSource()!=null &&
             humanSource.getHumanSource().getLevel()!=null)
         {
            int index=humanSource.getHumanSource().getLevel().ordinal()+1;
            Prerequisite_Source_HumanSource_Level_jComboBox.setSelectedIndex(index);
         }

      }     
   }
   //------------------------------------------------------------------------          
    this.populateForm();
 }

//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOC
//****************************************************************************
//                       Internal Source CompoBox
//****************************************************************************
//COMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOMPOCOCOMPO

private JComboBox selectPrerequisiteInternalSourceElement(JComboBox jComboBox)
{
    try {
            int selectedDeliveryIndex = jComboBox.getSelectedIndex(); //e.g. index 0 ==> version 1
            jComboBox.setSelectedItem(selectedDeliveryIndex);
        }

         catch (Exception ex) {
            Logger.getLogger(SourceForm.class.getName()).log(Level.SEVERE, null, ex);
           }
    return jComboBox;
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane ExternalSource_jDesktopPane;
    private javax.swing.JDesktopPane HumanSource_jDesktopPane;
    private javax.swing.JTextPane InternalSource_Description_jTextPane;
    private javax.swing.JDesktopPane InternalSource_jDesktopPane;
    private javax.swing.JList InternalSource_jList;
    private javax.swing.JScrollPane Performing_Justification_ExternalSource_Description_jScrollPane1;
    private javax.swing.JScrollPane Performing_Justification_HumanSource_Contacts_jScrollPane1;
    private javax.swing.JMenuItem Phase_Close_jMenuItem;
    private javax.swing.JMenuItem Phase_Load_jMenuItem;
    private javax.swing.JMenuItem Phase_SaveAs_jMenuItem;
    private javax.swing.JMenuItem Phase_Save_jMenuItem;
    private javax.swing.JPanel PreRequisite_ExternalSource_jPanel;
    private javax.swing.JPanel PreRequisite_HumanSource_jPanel;
    private javax.swing.JPanel PreRequisite_InternalSource_jPanel;
    private javax.swing.JLabel Prerequisite_Source_Description_jLabel2;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Add_jButton;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Delete_jButton;
    private javax.swing.JLabel Prerequisite_Source_ExternalSource_Description_jLabel;
    private javax.swing.JTextPane Prerequisite_Source_ExternalSource_Description_jTextPane;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Next_jButton;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Previous_jButton;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Refresh_jButton;
    private javax.swing.JButton Prerequisite_Source_ExternalSource_Save_jButton;
    private javax.swing.JComboBox Prerequisite_Source_ExternalSource_Type_jComboBox;
    private javax.swing.JLabel Prerequisite_Source_ExternalSource_Type_jLabel;
    private javax.swing.JLabel Prerequisite_Source_ExternalSource_URL_jLabel;
    private javax.swing.JTextField Prerequisite_Source_ExternalSource_URL_jTextField;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Add_jButton;
    private javax.swing.JLabel Prerequisite_Source_HumanSource_Contacts_jLabel1;
    private javax.swing.JTextPane Prerequisite_Source_HumanSource_Contcats_jTextPane;
    private javax.swing.JDesktopPane Prerequisite_Source_HumanSource_Control_jDesktopPane;
    private javax.swing.JDesktopPane Prerequisite_Source_HumanSource_Control_jDesktopPane1;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Delete_jButton;
    private javax.swing.JTextPane Prerequisite_Source_HumanSource_Description_jTextPane;
    private javax.swing.JComboBox Prerequisite_Source_HumanSource_Level_jComboBox;
    private javax.swing.JLabel Prerequisite_Source_HumanSource_Level_jLabel1;
    private javax.swing.JLabel Prerequisite_Source_HumanSource_Name_jLabel;
    private javax.swing.JTextField Prerequisite_Source_HumanSource_Name_jTextField;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Next_jButton;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Previous_jButton;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Refresh_jButton;
    private javax.swing.JComboBox Prerequisite_Source_HumanSource_Role_jComboBox;
    private javax.swing.JLabel Prerequisite_Source_HumanSource_Role_jLabel;
    private javax.swing.JButton Prerequisite_Source_HumanSource_Save_jButton;
    private javax.swing.JLabel Prerequisite_Source_InternalSource_Type_jLabel1;
    private javax.swing.JDesktopPane Prerequisite_Source_jDesktopPane;
    private javax.swing.JDesktopPane Prerequisite_jDesktopPane1;
    private javax.swing.JButton Reason_TraceUndo_jButton;
    private javax.swing.JButton Reason_TracedTo_jButton;
    private javax.swing.JTabbedPane Source_jTabbedPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane35;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables


}
