/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ObjectivesForm.java
 *
 * Created on 04-Oct-2010, 12:05:22
 */

package gui.form.task;

import global.Global;
import java.awt.Color;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import process_model.phase.Phase;
import process_model.phase.objective.PhaseObjective;
import process_model.phase.objective.Objectives;
import toolbox.Tools;

/**
 *
 * @author amb04
 */
public class ObjectivesForm extends javax.swing.JFrame {
    private PhaseObjective objective=null;
    private Phase phase=null;
    //
    private String objectivesTypeArray[]={"","Functional", "Quality Related",
    "Standard Related", "Human Related",
    "Mangment Related", "Other Non-functional"};

    //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    /** Creates new form ObjectivesForm */
    public ObjectivesForm() {
    initComponents();
    
    //------------------------------------------------------------------------
     if (this.phase==null)
    {
      if (Global.currentPhase!=null)
      {
         if (Global.currentPhase.getObjectives()==null)
             Global.currentPhase.setObjectives(new Objectives());

         this.phase = Global.currentPhase.clone(true);
       }
      else
          JOptionPane.showMessageDialog(null, "Phase Does Not exists");
    }
     //------------------------------------------------------------------------
    this.setTitle("Phase Objectives: "+phase.getTitle());
    this.refresh();
    this.populate();
    this.populateForm();
    }

//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Objectives_jLayeredPane = new javax.swing.JLayeredPane();
        Objective_jDesktopPane = new javax.swing.JDesktopPane();
        Objective_Customised_jDesktopPane = new javax.swing.JDesktopPane();
        Objective_Preset_Description_jLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        Preset_Description_jTextPane = new javax.swing.JTextPane();
        Preset_Edit_jLabel_jButton = new javax.swing.JButton();
        Preset_Lock_jLabel_jButton = new javax.swing.JButton();
        Control_jDesktopPane = new javax.swing.JDesktopPane();
        Delete_jButton = new javax.swing.JButton();
        Save_jButton = new javax.swing.JButton();
        New_jButton = new javax.swing.JButton();
        Refresh_jButton = new javax.swing.JButton();
        Last_jButton = new javax.swing.JButton();
        Next_jButton = new javax.swing.JButton();
        Previous_jButton = new javax.swing.JButton();
        First_jButton = new javax.swing.JButton();
        Add_jButton = new javax.swing.JButton();
        Objective_Customised_jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        Customised_Description_jTextPane = new javax.swing.JTextPane();
        Objective_Customised_Description_jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Type_jComboBox = new javax.swing.JComboBox();
        Objective_Type_jLabel = new javax.swing.JLabel();
        Customised_jCheckBox = new javax.swing.JCheckBox();
        Fulfilled_jCheckBox = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        storeCustomised_jButton = new javax.swing.JButton();
        openCustomised_jButton = new javax.swing.JButton();
        loadCustomised_jButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        Objective_jDesktopPane.setBackground(new java.awt.Color(255, 255, 204));
        Objective_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Objective_Customised_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Objective_Customised_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Objective_Preset_Description_jLabel.setText("Objective Description");
        Objective_Preset_Description_jLabel.setBounds(20, 10, 290, 30);
        Objective_Customised_jDesktopPane.add(Objective_Preset_Description_jLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Preset_Description_jTextPane.setBackground(new java.awt.Color(255, 255, 204));
        Preset_Description_jTextPane.setEditable(false);
        jScrollPane9.setViewportView(Preset_Description_jTextPane);

        jScrollPane9.setBounds(20, 40, 300, 170);
        Objective_Customised_jDesktopPane.add(jScrollPane9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Preset_Edit_jLabel_jButton.setText("Edit Preset");
        Preset_Edit_jLabel_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Preset_Edit_jLabel_jButtonActionPerformed(evt);
            }
        });
        Preset_Edit_jLabel_jButton.setBounds(20, 220, 150, 30);
        Objective_Customised_jDesktopPane.add(Preset_Edit_jLabel_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Preset_Lock_jLabel_jButton.setText("Lock Preset");
        Preset_Lock_jLabel_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Preset_Lock_jLabel_jButtonActionPerformed(evt);
            }
        });
        Preset_Lock_jLabel_jButton.setBounds(170, 220, 150, 30);
        Objective_Customised_jDesktopPane.add(Preset_Lock_jLabel_jButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Objective_Customised_jDesktopPane.setBounds(10, 20, 340, 260);
        Objective_jDesktopPane.add(Objective_Customised_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Control_jDesktopPane.setBackground(new java.awt.Color(255, 255, 153));
        Control_jDesktopPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Delete_jButton.setText("Delete");
        Delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_jButtonActionPerformed(evt);
            }
        });
        Delete_jButton.setBounds(630, 10, 70, 23);
        Control_jDesktopPane.add(Delete_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Save_jButton.setText("Save");
        Save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_jButtonActionPerformed(evt);
            }
        });
        Save_jButton.setBounds(480, 10, 70, 23);
        Control_jDesktopPane.add(Save_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        New_jButton.setText("New");
        New_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_jButtonActionPerformed(evt);
            }
        });
        New_jButton.setBounds(420, 10, 60, 23);
        Control_jDesktopPane.add(New_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Refresh_jButton.setText("Refresh");
        Refresh_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh_jButtonActionPerformed(evt);
            }
        });
        Refresh_jButton.setBounds(340, 10, 80, 23);
        Control_jDesktopPane.add(Refresh_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Last_jButton.setText("Last >>");
        Last_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Last_jButtonActionPerformed(evt);
            }
        });
        Last_jButton.setBounds(260, 10, 80, 23);
        Control_jDesktopPane.add(Last_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Next_jButton.setText("Next >");
        Next_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_jButtonActionPerformed(evt);
            }
        });
        Next_jButton.setBounds(190, 10, 70, 23);
        Control_jDesktopPane.add(Next_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Previous_jButton.setText("< Previous");
        Previous_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_jButtonActionPerformed(evt);
            }
        });
        Previous_jButton.setBounds(90, 10, 100, 23);
        Control_jDesktopPane.add(Previous_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        First_jButton.setText("<< First");
        First_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                First_jButtonActionPerformed(evt);
            }
        });
        First_jButton.setBounds(10, 10, 80, 23);
        Control_jDesktopPane.add(First_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Add_jButton.setText("Add+");
        Add_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_jButtonActionPerformed(evt);
            }
        });
        Add_jButton.setBounds(550, 10, 80, 23);
        Control_jDesktopPane.add(Add_jButton, javax.swing.JLayeredPane.MODAL_LAYER);

        Control_jDesktopPane.setBounds(10, 370, 710, 40);
        Objective_jDesktopPane.add(Control_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Objective_Customised_jDesktopPane1.setBackground(new java.awt.Color(255, 255, 153));
        Objective_Customised_jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane13.setViewportView(Customised_Description_jTextPane);

        jScrollPane13.setBounds(20, 40, 320, 200);
        Objective_Customised_jDesktopPane1.add(jScrollPane13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Objective_Customised_Description_jLabel1.setText("Customised Objective Description");
        Objective_Customised_Description_jLabel1.setBounds(20, 10, 290, 30);
        Objective_Customised_jDesktopPane1.add(Objective_Customised_Description_jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Objective_Customised_jDesktopPane1.setBounds(360, 20, 360, 260);
        Objective_jDesktopPane.add(Objective_Customised_jDesktopPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        Type_jComboBox.setModel(new DefaultComboBoxModel(this.objectivesTypeArray));
        jPanel1.add(Type_jComboBox);
        Type_jComboBox.setBounds(120, 10, 180, 22);

        Objective_Type_jLabel.setText("Objective Type");
        jPanel1.add(Objective_Type_jLabel);
        Objective_Type_jLabel.setBounds(10, 10, 101, 16);

        Customised_jCheckBox.setBackground(new java.awt.Color(255, 255, 153));
        Customised_jCheckBox.setText("Customised");
        Customised_jCheckBox.setEnabled(false);
        jPanel1.add(Customised_jCheckBox);
        Customised_jCheckBox.setBounds(120, 40, 150, 25);

        Fulfilled_jCheckBox.setBackground(new java.awt.Color(255, 255, 153));
        Fulfilled_jCheckBox.setText("Fullfilled");
        jPanel1.add(Fulfilled_jCheckBox);
        Fulfilled_jCheckBox.setBounds(10, 40, 83, 25);

        jPanel1.setBounds(10, 290, 340, 70);
        Objective_jDesktopPane.add(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel6.setBackground(new java.awt.Color(255, 255, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Customisation File"));
        jPanel6.setLayout(null);

        storeCustomised_jButton.setText("Store");
        storeCustomised_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeCustomised_jButtonActionPerformed(evt);
            }
        });
        jPanel6.add(storeCustomised_jButton);
        storeCustomised_jButton.setBounds(10, 30, 110, 25);

        openCustomised_jButton.setText("open");
        openCustomised_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCustomised_jButtonActionPerformed(evt);
            }
        });
        jPanel6.add(openCustomised_jButton);
        openCustomised_jButton.setBounds(120, 30, 110, 25);

        loadCustomised_jButton.setText("Load");
        loadCustomised_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCustomised_jButtonActionPerformed(evt);
            }
        });
        jPanel6.add(loadCustomised_jButton);
        loadCustomised_jButton.setBounds(230, 30, 110, 25);

        jPanel6.setBounds(360, 290, 360, 70);
        Objective_jDesktopPane.add(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Objective_jDesktopPane.setBounds(10, 0, 750, 420);
        Objectives_jLayeredPane.add(Objective_jDesktopPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Objectives_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Objectives_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Preset_Edit_jLabel_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Preset_Edit_jLabel_jButtonActionPerformed
    this.enable_preset();
    }//GEN-LAST:event_Preset_Edit_jLabel_jButtonActionPerformed

    private void Preset_Lock_jLabel_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Preset_Lock_jLabel_jButtonActionPerformed
   this.disable_preset();
}//GEN-LAST:event_Preset_Lock_jLabel_jButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
//         System.runFinalization();
         System.gc();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        /*try {
            if (Global.currentPhase!=null)
            {
                this.phase = Global.currentPhase.clone(true);
                    if (this.objective!=null)
                this.refresh();
            }
            
            this.populateForm();
        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(ObjectivesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         * 
         */
    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated

         if (this.phase != null) {
               this.phase.save();
        }
         Global.currentPhase = this.phase.clone(true);

    }//GEN-LAST:event_formWindowDeactivated

    private void Add_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_jButtonActionPerformed
        this.save();
        this.clear();
        First_jButton.setEnabled(false);
        Last_jButton.setEnabled(false);
        Next_jButton.setEnabled(false);
        Previous_jButton.setEnabled(false);
        New_jButton.setEnabled(false);
        Save_jButton.setEnabled(false);
        Delete_jButton.setEnabled(false);
        Refresh_jButton.setEnabled(true);
    }//GEN-LAST:event_Add_jButtonActionPerformed

    private void First_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_First_jButtonActionPerformed
        this.first();
}//GEN-LAST:event_First_jButtonActionPerformed

    private void Previous_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_jButtonActionPerformed
        this.previous();
}//GEN-LAST:event_Previous_jButtonActionPerformed

    private void Next_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_jButtonActionPerformed
        this.next();
}//GEN-LAST:event_Next_jButtonActionPerformed

    private void Last_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Last_jButtonActionPerformed
        this.last();
}//GEN-LAST:event_Last_jButtonActionPerformed

    private void Refresh_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh_jButtonActionPerformed
        this.refresh();
        First_jButton.setEnabled(true);
        Last_jButton.setEnabled(true);
        Next_jButton.setEnabled(true);
        Previous_jButton.setEnabled(true);
        New_jButton.setEnabled(true);
        Save_jButton.setEnabled(true);
        Delete_jButton.setEnabled(true);
        Refresh_jButton.setEnabled(false);
}//GEN-LAST:event_Refresh_jButtonActionPerformed

    private void New_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_jButtonActionPerformed
        this.clear();
}//GEN-LAST:event_New_jButtonActionPerformed

    private void Save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_jButtonActionPerformed
        this.save();
}//GEN-LAST:event_Save_jButtonActionPerformed

    private void Delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_jButtonActionPerformed
        this.delete();
}//GEN-LAST:event_Delete_jButtonActionPerformed

    private void storeCustomised_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeCustomised_jButtonActionPerformed

        this.store();     }//GEN-LAST:event_storeCustomised_jButtonActionPerformed

    private void openCustomised_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCustomised_jButtonActionPerformed

        this.open();     }//GEN-LAST:event_openCustomised_jButtonActionPerformed

    private void loadCustomised_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCustomised_jButtonActionPerformed

        this.load();     }//GEN-LAST:event_loadCustomised_jButtonActionPerformed

    
//------------------------------------------------------------------------------
//---------------------------------( Store )------------------------------------
//------------------------------------------------------------------------------
private void store()
 {
   this.save();      
   
    int decision=JOptionPane.showConfirmDialog(null, "Would you like to \n use the default customisation location?");
    if (decision==0)            
       this.phase.getObjectives().store(null, null);        
    else
    {
       File selectedFile=null;
       selectedFile=Tools.chooseFile("Choose the location", null, null, true);        
       String fileLocation=null;    
       if (selectedFile!=null)
           selectedFile.getPath();
       
       String fileName=null;
       if (Global.currentPhase!=null && Global.currentPhase.getName()!=null)           
           fileName=Global.currentPhase.getNumber()+"- "+Global.currentPhase.getName();
       
       this.phase.getObjectives().store(fileLocation, fileName);
    }         
}     

//------------------------------------------------------------------------------
//---------------------------------( Open )-------------------------------------
//------------------------------------------------------------------------------

private void open()
 {

  int decision=JOptionPane.showConfirmDialog(null, 
           "This will clear all the currunt customisation "
          + "\nAre you sure you want to continue?");
  if (decision==0)            
   {     
       Objectives objectives= new Objectives();     
       objectives=objectives.open(null);  
       this.phase.setObjectives(objectives.clone());
       this.phase.save();
       this.refresh();
    }
     
 }         


//------------------------------------------------------------------------------
//---------------------------------( Load )-------------------------------------
//------------------------------------------------------------------------------
private void load()
 {

  int decision=JOptionPane.showConfirmDialog(null, 
          "This will clear all the currunt customisation "
          + "\nAre you sure you want to continue?");
  if (decision==0)            
   {     
       Objectives objectives= new Objectives();     
       objectives=objectives.load();
       this.phase.setObjectives(objectives.clone());
       this.phase.save();              
        this.refresh();
    }
     
 }             
    
    
    
 //SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
//****************************************************************************
//                              Save Prerequisite
//****************************************************************************
//SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
 private void save()
 {
   try
     {
    if (this.objective==null)
        this.objective=new PhaseObjective();
     //
     if(this.Customised_Description_jTextPane.getText()!=null
     && !this.Customised_Description_jTextPane.getText().equals(""))
     {
        this.objective.setCustomisedDescription(this.Customised_Description_jTextPane.getText());
        this.objective.setCustomised(true);
        this.Customised_jCheckBox.setSelected(true);
     }
    else
    {
      int decision=JOptionPane.showConfirmDialog(null, "Customised Objective is empty! Do you want to use the preset objective as customised");
      if (decision==0)
        {
           this.objective.setCustomisedDescription(this.Preset_Description_jTextPane.getText());
           this.objective.setCustomised(true);
           this.Customised_jCheckBox.setSelected(true);
        }
      else
      {
         this.objective.setCustomised(false);
         Customised_jCheckBox.setSelected(false);
         this.objective.setCustomisedDescription(null);
         this.Customised_Description_jTextPane.setText("");
      }
       }

     //
     if(this.Preset_Description_jTextPane.getText()!=null
     && !this.Preset_Description_jTextPane.getText().equals(""))
     
        this.objective.setPresetDescription(this.Preset_Description_jTextPane.getText());
      
     //
     this.objective.setFulfilled(this.Fulfilled_jCheckBox.isSelected());
     this.objective.setObjectiveTypeIndex(this.Type_jComboBox.getSelectedIndex());

     Objectives objectives = null;
     // make sure the Objectives exists in the phase
     if (this.phase.getObjectives()!=null)
         objectives=this.phase.getObjectives();
     else
         objectives=new Objectives();

     if (this.objective!=null)
     {
        objectives.save(objective);// no clonining to use the address for look up in the list
        this.phase.setObjectives(objectives);
        this.phase.save();
      }
    //else
      //System.out.print("no Objective exist to be saved ");


     } catch (Exception ex) {
            Logger.getLogger(PreRequisiteForm.class.getName()).log(Level.SEVERE, null, ex);
     }
  }

//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
//****************************************************************************
//                              Refresh
//****************************************************************************
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

 private void refresh()
 {
    if (this.phase.getObjectives()!=null && this.phase.getObjectives().getObjectivesList().size()>0)
    {
        this.objective = this.phase.getObjectives().getPhaseObjective(0);
        this.populate();
    }
    //else
        //System.out.print(" No PhaseObjective is available");    
}

//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
//                              Delete Source
//DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
//****************************************************************************
 private void delete()
    {
    
    if (this.objective!=null && this.phase.getObjectives()!=null)
    {
        int index= this.phase.getObjectives().getObjectivesList().indexOf(this.objective);
        if (this.phase.getObjectives().delete(this.objective));
        {
            if (this.phase.getObjectives().getObjectivesList().size()>0)
            {
                if (index==0)
                    this.objective = this.phase.getObjectives().getPhaseObjective(index);
                else
                    this.objective = this.phase.getObjectives().getPhaseObjective(index-1);

                this.populate();
            }
            else
            this.clear();
        }
     this.phase.save();
    }
 }



//FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
//****************************************************************************
//                            First & Last Prerequisite
//****************************************************************************
//FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

 private void first()
    {
     if (this.phase.getObjectives()!=null)
     {
         this.save();
         this.objective=this.phase.getObjectives().getFirst();
      }
        this.populate();
        
 }

 //****************************************************************************
 private void last()
 {
 if (this.phase.getObjectives()!=null)
 {
       this.save();
       this.objective=this.phase.getObjectives().getLast();

 }
        this.populate();
 }


//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
//****************************************************************************
//                     Next Prerequisite & Source
//****************************************************************************
//NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
 private void next()
    {
      if(this.phase.getObjectives()!=null)
        {
            if (this.objective!=null)
            {
                if (this.phase.getObjectives().getNext(this.objective)!=null)
                {
                    this.save();
                    this.objective=this.phase.getObjectives().getNext(this.objective);
                    this.populate();

                }
            }
        }
        //else
            //System.out.print("No Phase PreRequisits is found yet ");
    }


//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                     Previous PhaseObjective& Source
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP

 private void previous()
    {
     if(this.phase.getObjectives()!=null)
        {
            if (this.objective!=null)
            {
                if (this.phase.getObjectives().getPrevious(this.objective)!=null)
                {
                    this.save();
                    this.objective=this.phase.getObjectives().getPrevious(this.objective);
                    this.populate();

                }
            }
        }
        //else
            //System.out.print("No Phase PreRequisits is found yet ");
 }


//CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
//****************************************************************************
//                     Clear Source Prerequisite & Source
//****************************************************************************
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

 private void clear()
{
     this.clear_form();
     this.objective=new PhaseObjective();
 }

 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 //                         Clear Objectives Form
 //CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 private void clear_form()
{
     this.Customised_Description_jTextPane.setText("");
     this.Preset_Description_jTextPane.setText("");
     this.Customised_jCheckBox.setSelected(false);
     this.Fulfilled_jCheckBox.setSelected(false);
     this.Type_jComboBox.setSelectedIndex(0);
 }

  //PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//****************************************************************************
//                             Populate
//****************************************************************************
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP

private void populateForm()
{
            this.repaint();
            this.pack();
 }


//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
//                         Populate Prerequisite Form
//PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
 private void populate()
{
     if (objective!=null)
     {
         if (objective.getCustomisedDescription()!=null)
            this.Customised_Description_jTextPane.setText(objective.getCustomisedDescription());
         else
           this.Customised_Description_jTextPane.setText("");
         //
         if (objective.getPresetDescription()!=null)
            this.Preset_Description_jTextPane.setText(objective.getPresetDescription());
         else
             this.Preset_Description_jTextPane.setText("");
         //
         this.Customised_jCheckBox.setSelected(objective.isCustomised());
         this.Fulfilled_jCheckBox.setSelected(objective.isFulfilled());
         //
         if (objective.getObjectiveType()!=null)
             this.Type_jComboBox.setSelectedIndex(objective.getObjectiveType().ordinal()+1);
         else
             this.Type_jComboBox.setSelectedIndex(0);
     }
    //else
      //System.out.print(" No Prereqiuiste found to populate");
     this.populateForm();
 }
 
 //============================================================================
 //============================================================================

 private void disable_preset()
{
   this.Preset_Description_jTextPane.setEditable(false);
   this.Preset_Lock_jLabel_jButton.setEnabled(false);
   this.Preset_Edit_jLabel_jButton.setEnabled(true);
   this.Preset_Description_jTextPane.setBackground(Objective_jDesktopPane.getBackground());
}
//****************************************************************************
 private void enable_preset()
{
    this.Preset_Description_jTextPane.setEditable(true);
    this.Preset_Description_jTextPane.setBackground(Color.white);
    this.Preset_Lock_jLabel_jButton.setEnabled(true);
    this.Preset_Edit_jLabel_jButton.setEnabled(false);
 }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ObjectivesForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_jButton;
    private javax.swing.JDesktopPane Control_jDesktopPane;
    private javax.swing.JTextPane Customised_Description_jTextPane;
    private javax.swing.JCheckBox Customised_jCheckBox;
    private javax.swing.JButton Delete_jButton;
    private javax.swing.JButton First_jButton;
    private javax.swing.JCheckBox Fulfilled_jCheckBox;
    private javax.swing.JButton Last_jButton;
    private javax.swing.JButton New_jButton;
    private javax.swing.JButton Next_jButton;
    private javax.swing.JLabel Objective_Customised_Description_jLabel1;
    private javax.swing.JDesktopPane Objective_Customised_jDesktopPane;
    private javax.swing.JDesktopPane Objective_Customised_jDesktopPane1;
    private javax.swing.JLabel Objective_Preset_Description_jLabel;
    private javax.swing.JLabel Objective_Type_jLabel;
    private javax.swing.JDesktopPane Objective_jDesktopPane;
    private javax.swing.JLayeredPane Objectives_jLayeredPane;
    private javax.swing.JTextPane Preset_Description_jTextPane;
    private javax.swing.JButton Preset_Edit_jLabel_jButton;
    private javax.swing.JButton Preset_Lock_jLabel_jButton;
    private javax.swing.JButton Previous_jButton;
    private javax.swing.JButton Refresh_jButton;
    private javax.swing.JButton Save_jButton;
    private javax.swing.JComboBox Type_jComboBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton loadCustomised_jButton;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton openCustomised_jButton;
    private javax.swing.JButton storeCustomised_jButton;
    // End of variables declaration//GEN-END:variables

}
